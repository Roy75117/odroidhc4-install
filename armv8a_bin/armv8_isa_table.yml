- ABS_advsimd:
    CLASS: sisd
    DESC: Absolute value (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ABS_advsimd:
    CLASS: simd
    DESC: Absolute value (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- abs_z_p_z:
    CLASS: sve
    DESC: Absolute value (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ADC:
    CLASS: no_s
    DESC: Add with Carry
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ADCS:
    CLASS: s
    DESC: Add with Carry, setting flags
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ADD_addsub_ext:
    CLASS: no_s
    DESC: Add (extended register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ADD_addsub_imm:
    CLASS: no_s
    DESC: Add (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ADD_addsub_shift:
    CLASS: no_s
    DESC: Add (shifted register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ADD_advsimd:
    CLASS: sisd
    DESC: Add (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ADD_advsimd:
    CLASS: simd
    DESC: Add (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- add_z_p_zz:
    CLASS: sve
    DESC: Add vectors (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- add_z_zi:
    CLASS: sve
    DESC: Add immediate (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- add_z_zz:
    CLASS: sve
    DESC: Add vectors (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ADDG:
    CLASS: general
    DESC: Add with Tag
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_MTE
- ADDHN_advsimd:
    CLASS: 3reg_diff
    DESC: Add returning High Narrow
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ADDP_advsimd_pair:
    CLASS: advsimd
    DESC: Add Pair of elements (scalar)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ADDP_advsimd_vec:
    CLASS: 3reg_same
    DESC: Add Pairwise (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- addpl_r_ri:
    CLASS: sve
    DESC: Add multiple of predicate register size to scalar register
    VARIANT: SVE
    VARIANT_FEATURE: None
- ADDS_addsub_ext:
    CLASS: s
    DESC: Add (extended register), setting flags
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ADDS_addsub_imm:
    CLASS: s
    DESC: Add (immediate), setting flags
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ADDS_addsub_shift:
    CLASS: s
    DESC: Add (shifted register), setting flags
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ADDV_advsimd:
    CLASS: advsimd
    DESC: Add across Vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- addvl_r_ri:
    CLASS: sve
    DESC: Add multiple of vector register size to scalar register
    VARIANT: SVE
    VARIANT_FEATURE: None
- ADR:
    CLASS: literal
    DESC: Form PC-relative address
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- adr_z_az:
    CLASS: off_pkd
    DESC: Compute vector address
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- adr_z_az:
    CLASS: off_s_s32
    DESC: Compute vector address
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- adr_z_az:
    CLASS: off_s_u32
    DESC: Compute vector address
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ADRP:
    CLASS: literal
    DESC: Form PC-relative address to 4KB page
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- AESD_advsimd:
    CLASS: advsimd
    DESC: AES single round decryption
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- AESE_advsimd:
    CLASS: advsimd
    DESC: AES single round encryption
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- AESIMC_advsimd:
    CLASS: advsimd
    DESC: AES inverse mix columns
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- AESMC_advsimd:
    CLASS: advsimd
    DESC: AES mix columns
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- AND_advsimd:
    CLASS: 3reg_same
    DESC: Bitwise AND (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- AND_log_imm:
    CLASS: no_s
    DESC: Bitwise AND (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- AND_log_shift:
    CLASS: no_s
    DESC: Bitwise AND (shifted register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- and_p_p_pp:
    CLASS: no_s
    DESC: Bitwise AND predicates
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- and_p_p_pp:
    CLASS: s
    DESC: Bitwise AND predicates
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- and_z_p_zz:
    CLASS: sve
    DESC: Bitwise AND vectors (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- and_z_zi:
    CLASS: sve
    DESC: Bitwise AND with immediate (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- and_z_zz:
    CLASS: sve
    DESC: Bitwise AND vectors (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ANDS_log_imm:
    CLASS: s
    DESC: Bitwise AND (immediate), setting flags
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ANDS_log_shift:
    CLASS: s
    DESC: Bitwise AND (shifted register), setting flags
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- andv_r_p_z:
    CLASS: sve
    DESC: Bitwise AND reduction to scalar
    VARIANT: SVE
    VARIANT_FEATURE: None
- ASR_ASRV:
    CLASS: general
    DESC: Arithmetic Shift Right (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ASR_SBFM:
    CLASS: signed_fill
    DESC: Arithmetic Shift Right (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- asr_z_p_zi:
    CLASS: sve
    DESC: Arithmetic shift right by immediate (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- asr_z_p_zw:
    CLASS: sve
    DESC: Arithmetic shift right by 64-bit wide elements (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- asr_z_p_zz:
    CLASS: sve
    DESC: Arithmetic shift right by vector (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- asr_z_zi:
    CLASS: sve
    DESC: Arithmetic shift right by immediate (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- asr_z_zw:
    CLASS: sve
    DESC: Arithmetic shift right by 64-bit wide elements (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- asrd_z_p_zi:
    CLASS: sve
    DESC: Arithmetic shift right for divide by immediate (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- asrr_z_p_zz:
    CLASS: sve
    DESC: Reversed arithmetic shift right by vector (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ASRV:
    CLASS: general
    DESC: Arithmetic Shift Right Variable
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- AT_SYS:
    CLASS: system
    DESC: Address Translate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- AUTDA:
    CLASS: general
    DESC: Authenticate Data address, using key A
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_PAuth
- AUTDB:
    CLASS: general
    DESC: Authenticate Data address, using key B
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_PAuth
- AUTIA:
    CLASS: general
    DESC: Authenticate Instruction address, using key A
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_PAuth
- AUTIA:
    CLASS: system
    DESC: Authenticate Instruction address, using key A
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_PAuth
- AUTIB:
    CLASS: general
    DESC: Authenticate Instruction address, using key B
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_PAuth
- AUTIB:
    CLASS: system
    DESC: Authenticate Instruction address, using key B
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_PAuth
- AXFLAG:
    CLASS: system
    DESC: Convert floating-point condition flags from Arm to external format
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_FlagM2
- B_cond:
    CLASS: br19
    DESC: Branch conditionally
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- B_uncond:
    CLASS: br26
    DESC: Branch
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- BCAX_advsimd:
    CLASS: advsimd
    DESC: Bit Clear and XOR
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_SHA3
- BFC_BFM:
    CLASS: nofill
    DESC: Bitfield Clear
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_ASMv8p2
- BFCVT_float:
    CLASS: single_to_bf16
    DESC: Floating-point convert from single-precision to BFloat16 format (scalar)
    VARIANT: ARMv8.6
    VARIANT_FEATURE: FEAT_BF16
- bfcvt_z_p_z:
    CLASS: sve
    DESC: Floating-point down convert to BFloat16 format (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- BFCVTN_advsimd:
    CLASS: simd_single_and_bf16
    DESC: Floating-point convert from single-precision to BFloat16 format (vector)
    VARIANT: ARMv8.6
    VARIANT_FEATURE: FEAT_BF16
- bfcvtnt_z_p_z:
    CLASS: sve
    DESC: Floating-point down convert and narrow to BFloat16 (top, predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- BFDOT_advsimd_elt:
    CLASS: 2reg_element
    DESC: BFloat16 floating-point dot product (vector, by element)
    VARIANT: ARMv8.6
    VARIANT_FEATURE: FEAT_BF16
- BFDOT_advsimd_vec:
    CLASS: simd
    DESC: BFloat16 floating-point dot product (vector)
    VARIANT: ARMv8.6
    VARIANT_FEATURE: FEAT_BF16
- bfdot_z_zzz:
    CLASS: sve
    DESC: BFloat16 floating-point dot product
    VARIANT: SVE
    VARIANT_FEATURE: None
- bfdot_z_zzzi:
    CLASS: sve
    DESC: BFloat16 floating-point indexed dot product
    VARIANT: SVE
    VARIANT_FEATURE: None
- BFI_BFM:
    CLASS: nofill
    DESC: Bitfield Insert
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- BFM:
    CLASS: nofill
    DESC: Bitfield Move
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- BFMLAL_advsimd_elt:
    CLASS: 2reg_element
    DESC: BFloat16 floating-point widening multiply-add long (by element)
    VARIANT: ARMv8.6
    VARIANT_FEATURE: FEAT_BF16
- BFMLAL_advsimd_vec:
    CLASS: simd
    DESC: BFloat16 floating-point widening multiply-add long (vector)
    VARIANT: ARMv8.6
    VARIANT_FEATURE: FEAT_BF16
- bfmlalb_z_zzz:
    CLASS: sve
    DESC: BFloat16 floating-point multiply-add long to single-precision (bottom)
    VARIANT: SVE
    VARIANT_FEATURE: None
- bfmlalb_z_zzzi:
    CLASS: sve
    DESC: BFloat16 floating-point multiply-add long to single-precision (bottom, indexed)
    VARIANT: SVE
    VARIANT_FEATURE: None
- bfmlalt_z_zzz:
    CLASS: sve
    DESC: BFloat16 floating-point multiply-add long to single-precision (top)
    VARIANT: SVE
    VARIANT_FEATURE: None
- bfmlalt_z_zzzi:
    CLASS: sve
    DESC: BFloat16 floating-point multiply-add long to single-precision (top, indexed)
    VARIANT: SVE
    VARIANT_FEATURE: None
- BFMMLA_advsimd:
    CLASS: simd
    DESC: BFloat16 floating-point matrix multiply-accumulate into 2x2 matrix
    VARIANT: ARMv8.6
    VARIANT_FEATURE: FEAT_BF16
- bfmmla_z_zzz:
    CLASS: sve
    DESC: BFloat16 floating-point matrix multiply-accumulate
    VARIANT: SVE
    VARIANT_FEATURE: None
- BFXIL_BFM:
    CLASS: nofill
    DESC: Bitfield extract and insert at low end
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- BIC_advsimd_imm:
    CLASS: shifted_immediate
    DESC: Bitwise bit Clear (vector, immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- BIC_advsimd_reg:
    CLASS: 3reg_same
    DESC: Bitwise bit Clear (vector, register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- BIC_and_z_zi:
    CLASS: sve
    DESC: Bitwise clear bits using immediate (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- BIC_log_shift:
    CLASS: no_s
    DESC: Bitwise Bit Clear (shifted register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- bic_p_p_pp:
    CLASS: no_s
    DESC: Bitwise clear predicates
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- bic_p_p_pp:
    CLASS: s
    DESC: Bitwise clear predicates
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- bic_z_p_zz:
    CLASS: sve
    DESC: Bitwise clear vectors (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- bic_z_zz:
    CLASS: sve
    DESC: Bitwise clear vectors (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- BICS:
    CLASS: s
    DESC: Bitwise Bit Clear (shifted register), setting flags
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- BIF_advsimd:
    CLASS: 3reg_same
    DESC: Bitwise Insert if False
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- BIT_advsimd:
    CLASS: 3reg_same
    DESC: Bitwise Insert if True
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- BL:
    CLASS: br26
    DESC: Branch with Link
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- BLR:
    CLASS: general
    DESC: Branch with Link to Register
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- BLRA:
    CLASS: general
    DESC: Branch with Link to Register, with pointer authentication
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_PAuth
- BR:
    CLASS: general
    DESC: Branch to Register
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- BRA:
    CLASS: general
    DESC: Branch to Register, with pointer authentication
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_PAuth
- BRK:
    CLASS: system
    DESC: Breakpoint instruction
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- brka_p_p_p:
    CLASS: no_s
    DESC: Break after first true condition
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- brka_p_p_p:
    CLASS: s
    DESC: Break after first true condition
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- brkb_p_p_p:
    CLASS: no_s
    DESC: Break before first true condition
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- brkb_p_p_p:
    CLASS: s
    DESC: Break before first true condition
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- brkn_p_p_pp:
    CLASS: no_s
    DESC: Propagate break to next partition
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- brkn_p_p_pp:
    CLASS: s
    DESC: Propagate break to next partition
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- brkpa_p_p_pp:
    CLASS: no_s
    DESC: Break after first true condition, propagating from previous partition
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- brkpa_p_p_pp:
    CLASS: s
    DESC: Break after first true condition, propagating from previous partition
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- brkpb_p_p_pp:
    CLASS: no_s
    DESC: Break before first true condition, propagating from previous partition
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- brkpb_p_p_pp:
    CLASS: s
    DESC: Break before first true condition, propagating from previous partition
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- BSL_advsimd:
    CLASS: 3reg_same
    DESC: Bitwise Select
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- BTI:
    CLASS: system
    DESC: Branch Target Identification
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_BTI
- CAS:
    CLASS: base_register
    DESC: Compare and Swap word or doubleword in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- CASB:
    CLASS: base_register
    DESC: Compare and Swap byte in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- CASH:
    CLASS: base_register
    DESC: Compare and Swap halfword in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- CASP:
    CLASS: base_register
    DESC: Compare and Swap Pair of words or doublewords in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- CBNZ:
    CLASS: br19
    DESC: Compare and Branch on Nonzero
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CBZ:
    CLASS: br19
    DESC: Compare and Branch on Zero
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CCMN_imm:
    CLASS: imm5u
    DESC: Conditional Compare Negative (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CCMN_reg:
    CLASS: general
    DESC: Conditional Compare Negative (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CCMP_imm:
    CLASS: imm5u
    DESC: Conditional Compare (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CCMP_reg:
    CLASS: general
    DESC: Conditional Compare (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CFINV:
    CLASS: system
    DESC: Invert Carry Flag
    VARIANT: ARMv8.4
    VARIANT_FEATURE: FEAT_FlagM
- CFP_SYS:
    CLASS: system
    DESC: Control Flow Prediction Restriction by Context
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_SPECRES
- CINC_CSINC:
    CLASS: general
    DESC: Conditional Increment
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CINV_CSINV:
    CLASS: general
    DESC: Conditional Invert
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- clasta_r_p_z:
    CLASS: sve
    DESC: Conditionally extract element after last to general-purpose register
    VARIANT: SVE
    VARIANT_FEATURE: None
- clasta_v_p_z:
    CLASS: sve
    DESC: Conditionally extract element after last to SIMD&FP scalar register
    VARIANT: SVE
    VARIANT_FEATURE: None
- clasta_z_p_zz:
    CLASS: sve
    DESC: Conditionally extract element after last to vector register
    VARIANT: SVE
    VARIANT_FEATURE: None
- clastb_r_p_z:
    CLASS: sve
    DESC: Conditionally extract last element to general-purpose register
    VARIANT: SVE
    VARIANT_FEATURE: None
- clastb_v_p_z:
    CLASS: sve
    DESC: Conditionally extract last element to SIMD&FP scalar register
    VARIANT: SVE
    VARIANT_FEATURE: None
- clastb_z_p_zz:
    CLASS: sve
    DESC: Conditionally extract last element to vector register
    VARIANT: SVE
    VARIANT_FEATURE: None
- CLREX:
    CLASS: system
    DESC: Clear Exclusive
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CLS_advsimd:
    CLASS: simd
    DESC: Count Leading Sign bits (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CLS_int:
    CLASS: general
    DESC: Count Leading Sign bits
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cls_z_p_z:
    CLASS: sve
    DESC: Count leading sign bits (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- CLZ_advsimd:
    CLASS: simd
    DESC: Count Leading Zero bits (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CLZ_int:
    CLASS: general
    DESC: Count Leading Zeros
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- clz_z_p_z:
    CLASS: sve
    DESC: Count leading zero bits (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- CMEQ_advsimd_reg:
    CLASS: sisd
    DESC: Compare bitwise Equal (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMEQ_advsimd_reg:
    CLASS: simd
    DESC: Compare bitwise Equal (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMEQ_advsimd_zero:
    CLASS: sisd
    DESC: Compare bitwise Equal to zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMEQ_advsimd_zero:
    CLASS: simd
    DESC: Compare bitwise Equal to zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMGE_advsimd_reg:
    CLASS: sisd
    DESC: Compare signed Greater than or Equal (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMGE_advsimd_reg:
    CLASS: simd
    DESC: Compare signed Greater than or Equal (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMGE_advsimd_zero:
    CLASS: sisd
    DESC: Compare signed Greater than or Equal to zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMGE_advsimd_zero:
    CLASS: simd
    DESC: Compare signed Greater than or Equal to zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMGT_advsimd_reg:
    CLASS: sisd
    DESC: Compare signed Greater than (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMGT_advsimd_reg:
    CLASS: simd
    DESC: Compare signed Greater than (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMGT_advsimd_zero:
    CLASS: sisd
    DESC: Compare signed Greater than zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMGT_advsimd_zero:
    CLASS: simd
    DESC: Compare signed Greater than zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMHI_advsimd:
    CLASS: sisd
    DESC: Compare unsigned Higher (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMHI_advsimd:
    CLASS: simd
    DESC: Compare unsigned Higher (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMHS_advsimd:
    CLASS: sisd
    DESC: Compare unsigned Higher or Same (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMHS_advsimd:
    CLASS: simd
    DESC: Compare unsigned Higher or Same (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMLE_advsimd:
    CLASS: sisd
    DESC: Compare signed Less than or Equal to zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMLE_advsimd:
    CLASS: simd
    DESC: Compare signed Less than or Equal to zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMLT_advsimd:
    CLASS: sisd
    DESC: Compare signed Less than zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMLT_advsimd:
    CLASS: simd
    DESC: Compare signed Less than zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMN_ADDS_addsub_ext:
    CLASS: s
    DESC: Compare Negative (extended register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMN_ADDS_addsub_imm:
    CLASS: s
    DESC: Compare Negative (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMN_ADDS_addsub_shift:
    CLASS: s
    DESC: Compare Negative (shifted register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMP_SUBS_addsub_ext:
    CLASS: s
    DESC: Compare (extended register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMP_SUBS_addsub_imm:
    CLASS: s
    DESC: Compare (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMP_SUBS_addsub_shift:
    CLASS: s
    DESC: Compare (shifted register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zi:
    CLASS: eq
    DESC: Compare vector to immediate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zi:
    CLASS: gt
    DESC: Compare vector to immediate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zi:
    CLASS: ge
    DESC: Compare vector to immediate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zi:
    CLASS: hi
    DESC: Compare vector to immediate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zi:
    CLASS: hs
    DESC: Compare vector to immediate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zi:
    CLASS: lt
    DESC: Compare vector to immediate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zi:
    CLASS: le
    DESC: Compare vector to immediate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zi:
    CLASS: lo
    DESC: Compare vector to immediate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zi:
    CLASS: ls
    DESC: Compare vector to immediate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zi:
    CLASS: ne
    DESC: Compare vector to immediate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zw:
    CLASS: eq
    DESC: Compare vector to 64-bit wide elements
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zw:
    CLASS: gt
    DESC: Compare vector to 64-bit wide elements
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zw:
    CLASS: ge
    DESC: Compare vector to 64-bit wide elements
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zw:
    CLASS: hi
    DESC: Compare vector to 64-bit wide elements
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zw:
    CLASS: hs
    DESC: Compare vector to 64-bit wide elements
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zw:
    CLASS: lt
    DESC: Compare vector to 64-bit wide elements
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zw:
    CLASS: le
    DESC: Compare vector to 64-bit wide elements
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zw:
    CLASS: lo
    DESC: Compare vector to 64-bit wide elements
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zw:
    CLASS: ls
    DESC: Compare vector to 64-bit wide elements
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zw:
    CLASS: ne
    DESC: Compare vector to 64-bit wide elements
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zz:
    CLASS: eq
    DESC: Compare vectors
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zz:
    CLASS: gt
    DESC: Compare vectors
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zz:
    CLASS: ge
    DESC: Compare vectors
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zz:
    CLASS: hi
    DESC: Compare vectors
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zz:
    CLASS: hs
    DESC: Compare vectors
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cmpeq_p_p_zz:
    CLASS: ne
    DESC: Compare vectors
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMPLE_cmpeq_p_p_zz:
    CLASS: ge
    DESC: Compare signed less than or equal to vector, setting the condition flags
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMPLO_cmpeq_p_p_zz:
    CLASS: hi
    DESC: Compare unsigned lower than vector, setting the condition flags
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMPLS_cmpeq_p_p_zz:
    CLASS: hs
    DESC: Compare unsigned lower or same as vector, setting the condition flags
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMPLT_cmpeq_p_p_zz:
    CLASS: gt
    DESC: Compare signed less than vector, setting the condition flags
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMTST_advsimd:
    CLASS: sisd
    DESC: Compare bitwise Test bits nonzero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CMTST_advsimd:
    CLASS: simd
    DESC: Compare bitwise Test bits nonzero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CNEG_CSNEG:
    CLASS: general
    DESC: Conditional Negate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cnot_z_p_z:
    CLASS: sve
    DESC: Logically invert boolean condition in vector (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- CNT_advsimd:
    CLASS: simd
    DESC: Population Count per byte
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cnt_z_p_z:
    CLASS: sve
    DESC: Count non-zero bits (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- cntb_r_s:
    CLASS: esize_byte
    DESC: Set scalar to multiple of predicate constraint element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cntb_r_s:
    CLASS: esize_doubleword
    DESC: Set scalar to multiple of predicate constraint element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cntb_r_s:
    CLASS: esize_halfword
    DESC: Set scalar to multiple of predicate constraint element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cntb_r_s:
    CLASS: esize_word
    DESC: Set scalar to multiple of predicate constraint element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- cntp_r_p_p:
    CLASS: sve
    DESC: Set scalar to count of true predicate elements
    VARIANT: SVE
    VARIANT_FEATURE: None
- compact_z_p_z:
    CLASS: sve
    DESC: Shuffle active elements of vector to the right and fill with zero
    VARIANT: SVE
    VARIANT_FEATURE: None
- CPP_SYS:
    CLASS: system
    DESC: Cache Prefetch Prediction Restriction by Context
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_SPECRES
- cpy_z_o_i:
    CLASS: sve
    DESC: Copy signed integer immediate to vector elements (zeroing)
    VARIANT: SVE
    VARIANT_FEATURE: None
- cpy_z_p_i:
    CLASS: sve
    DESC: Copy signed integer immediate to vector elements (merging)
    VARIANT: SVE
    VARIANT_FEATURE: None
- cpy_z_p_r:
    CLASS: sve
    DESC: Copy general-purpose register to vector elements (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- cpy_z_p_v:
    CLASS: sve
    DESC: Copy SIMD&FP scalar register to vector elements (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- CRC32:
    CLASS: crc
    DESC: CRC32 checksum
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CRC32C:
    CLASS: crc
    DESC: CRC32C checksum
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CSDB:
    CLASS: system
    DESC: Consumption of Speculative Data Barrier
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CSEL:
    CLASS: general
    DESC: Conditional Select
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CSET_CSINC:
    CLASS: general
    DESC: Conditional Set
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CSETM_CSINV:
    CLASS: general
    DESC: Conditional Set Mask
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CSINC:
    CLASS: general
    DESC: Conditional Select Increment
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CSINV:
    CLASS: general
    DESC: Conditional Select Invert
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- CSNEG:
    CLASS: general
    DESC: Conditional Select Negation
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ctermeq_rr:
    CLASS: eq
    DESC: Compare and terminate loop
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ctermeq_rr:
    CLASS: ne
    DESC: Compare and terminate loop
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- DC_SYS:
    CLASS: system
    DESC: Data Cache operation
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- DCPS1:
    CLASS: system
    DESC: Debug Change PE State to EL1.
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- DCPS2:
    CLASS: system
    DESC: Debug Change PE State to EL2.
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- DCPS3:
    CLASS: system
    DESC: Debug Change PE State to EL3
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- decb_r_rs:
    CLASS: esize_byte
    DESC: Decrement scalar by multiple of predicate constraint element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- decb_r_rs:
    CLASS: esize_doubleword
    DESC: Decrement scalar by multiple of predicate constraint element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- decb_r_rs:
    CLASS: esize_halfword
    DESC: Decrement scalar by multiple of predicate constraint element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- decb_r_rs:
    CLASS: esize_word
    DESC: Decrement scalar by multiple of predicate constraint element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- decd_z_zs:
    CLASS: esize_doubleword
    DESC: Decrement vector by multiple of predicate constraint element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- decd_z_zs:
    CLASS: esize_halfword
    DESC: Decrement vector by multiple of predicate constraint element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- decd_z_zs:
    CLASS: esize_word
    DESC: Decrement vector by multiple of predicate constraint element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- decp_r_p_r:
    CLASS: sve
    DESC: Decrement scalar by count of true predicate elements
    VARIANT: SVE
    VARIANT_FEATURE: None
- decp_z_p_z:
    CLASS: sve
    DESC: Decrement vector by count of true predicate elements
    VARIANT: SVE
    VARIANT_FEATURE: None
- DGH:
    CLASS: system
    DESC: Data Gathering Hint
    VARIANT: ARMv8.6
    VARIANT_FEATURE: FEAT_DGH
- DMB:
    CLASS: system
    DESC: Data Memory Barrier
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- DRPS:
    CLASS: system
    DESC: Debug restore process state
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- DSB:
    CLASS: dsb_memory
    DESC: Data Synchronization Barrier
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- DSB:
    CLASS: dsb_nxs
    DESC: Data Synchronization Barrier
    VARIANT: ARMv8.7
    VARIANT_FEATURE: FEAT_XS
- DUP_advsimd_elt:
    CLASS: scalar_from_element
    DESC: Duplicate vector element to vector or scalar
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- DUP_advsimd_elt:
    CLASS: vector_from_element
    DESC: Duplicate vector element to vector or scalar
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- DUP_advsimd_gen:
    CLASS: advsimd
    DESC: Duplicate general-purpose register to vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- dup_z_i:
    CLASS: sve
    DESC: Broadcast signed immediate to vector elements (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- dup_z_r:
    CLASS: sve
    DESC: Broadcast general-purpose register to vector elements (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- dup_z_zi:
    CLASS: sve
    DESC: Broadcast indexed element to vector (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- dupm_z_i:
    CLASS: sve
    DESC: Broadcast logical bitmask immediate to vector (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- DVP_SYS:
    CLASS: system
    DESC: Data Value Prediction Restriction by Context
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_SPECRES
- EON:
    CLASS: no_s
    DESC: Bitwise Exclusive OR NOT (shifted register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- EON_eor_z_zi:
    CLASS: sve
    DESC: Bitwise exclusive OR with inverted immediate (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- EOR3_advsimd:
    CLASS: advsimd
    DESC: Three-way Exclusive OR
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_SHA3
- EOR_advsimd:
    CLASS: 3reg_same
    DESC: Bitwise Exclusive OR (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- EOR_log_imm:
    CLASS: no_s
    DESC: Bitwise Exclusive OR (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- EOR_log_shift:
    CLASS: general
    DESC: Bitwise Exclusive OR (shifted register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- eor_p_p_pp:
    CLASS: no_s
    DESC: Bitwise exclusive OR predicates
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- eor_p_p_pp:
    CLASS: s
    DESC: Bitwise exclusive OR predicates
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- eor_z_p_zz:
    CLASS: sve
    DESC: Bitwise exclusive OR vectors (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- eor_z_zi:
    CLASS: sve
    DESC: Bitwise exclusive OR with immediate (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- eor_z_zz:
    CLASS: sve
    DESC: Bitwise exclusive OR vectors (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- eorv_r_p_z:
    CLASS: sve
    DESC: Bitwise exclusive OR reduction to scalar
    VARIANT: SVE
    VARIANT_FEATURE: None
- ERET:
    CLASS: system
    DESC: Exception Return
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ERETA:
    CLASS: general
    DESC: Exception Return, with pointer authentication
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_PAuth
- ESB:
    CLASS: system
    DESC: Error Synchronization Barrier
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_RAS
- EXT_advsimd:
    CLASS: advsimd
    DESC: Extract vector from pair of vectors
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ext_z_zi:
    CLASS: sve
    DESC: Extract vector from pair of vectors
    VARIANT: SVE
    VARIANT_FEATURE: None
- EXTR:
    CLASS: general
    DESC: Extract register
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FABD_advsimd:
    CLASS: sisd_half
    DESC: Floating-point Absolute Difference (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FABD_advsimd:
    CLASS: sisd_single_and_double
    DESC: Floating-point Absolute Difference (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FABD_advsimd:
    CLASS: simd_half
    DESC: Floating-point Absolute Difference (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FABD_advsimd:
    CLASS: simd_single_and_double
    DESC: Floating-point Absolute Difference (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fabd_z_p_zz:
    CLASS: sve
    DESC: Floating-point absolute difference (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- FABS_advsimd:
    CLASS: half
    DESC: Floating-point Absolute value (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FABS_advsimd:
    CLASS: single_and_double
    DESC: Floating-point Absolute value (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FABS_float:
    CLASS: float
    DESC: Floating-point Absolute value (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- fabs_z_p_z:
    CLASS: sve
    DESC: Floating-point absolute value (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- FACGE_advsimd:
    CLASS: sisd_half
    DESC: Floating-point Absolute Compare Greater than or Equal (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FACGE_advsimd:
    CLASS: sisd_single_and_double
    DESC: Floating-point Absolute Compare Greater than or Equal (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FACGE_advsimd:
    CLASS: simd_half
    DESC: Floating-point Absolute Compare Greater than or Equal (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FACGE_advsimd:
    CLASS: simd_single_and_double
    DESC: Floating-point Absolute Compare Greater than or Equal (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- facge_p_p_zz:
    CLASS: gt
    DESC: Floating-point absolute compare vectors
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- facge_p_p_zz:
    CLASS: ge
    DESC: Floating-point absolute compare vectors
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FACGT_advsimd:
    CLASS: sisd_half
    DESC: Floating-point Absolute Compare Greater than (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FACGT_advsimd:
    CLASS: sisd_single_and_double
    DESC: Floating-point Absolute Compare Greater than (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FACGT_advsimd:
    CLASS: simd_half
    DESC: Floating-point Absolute Compare Greater than (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FACGT_advsimd:
    CLASS: simd_single_and_double
    DESC: Floating-point Absolute Compare Greater than (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FACLE_facge_p_p_zz:
    CLASS: ge
    DESC: Floating-point absolute compare less than or equal
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FACLT_facge_p_p_zz:
    CLASS: gt
    DESC: Floating-point absolute compare less than
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FADD_advsimd:
    CLASS: half
    DESC: Floating-point Add (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FADD_advsimd:
    CLASS: single_and_double
    DESC: Floating-point Add (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FADD_float:
    CLASS: float
    DESC: Floating-point Add (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- fadd_z_p_zs:
    CLASS: sve
    DESC: Floating-point add immediate (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- fadd_z_p_zz:
    CLASS: sve
    DESC: Floating-point add vector (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- fadd_z_zz:
    CLASS: sve
    DESC: Floating-point add vector (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- fadda_v_p_z:
    CLASS: sve
    DESC: Floating-point add strictly-ordered reduction, accumulating in scalar
    VARIANT: SVE
    VARIANT_FEATURE: None
- FADDP_advsimd_pair:
    CLASS: half
    DESC: Floating-point Add Pair of elements (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FADDP_advsimd_pair:
    CLASS: single_and_double
    DESC: Floating-point Add Pair of elements (scalar)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FADDP_advsimd_vec:
    CLASS: half
    DESC: Floating-point Add Pairwise (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FADDP_advsimd_vec:
    CLASS: single_and_double
    DESC: Floating-point Add Pairwise (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- faddv_v_p_z:
    CLASS: sve
    DESC: Floating-point add recursive reduction to scalar
    VARIANT: SVE
    VARIANT_FEATURE: None
- FCADD_advsimd_vec:
    CLASS: simd
    DESC: Floating-point Complex Add
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_FCMA
- fcadd_z_p_zz:
    CLASS: sve
    DESC: Floating-point complex add with rotate (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- FCCMP_float:
    CLASS: float
    DESC: Floating-point Conditional quiet Compare (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCCMPE_float:
    CLASS: float
    DESC: Floating-point Conditional signaling Compare (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCMEQ_advsimd_reg:
    CLASS: sisd_half
    DESC: Floating-point Compare Equal (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCMEQ_advsimd_reg:
    CLASS: sisd_single_and_double
    DESC: Floating-point Compare Equal (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCMEQ_advsimd_reg:
    CLASS: simd_half
    DESC: Floating-point Compare Equal (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCMEQ_advsimd_reg:
    CLASS: simd_single_and_double
    DESC: Floating-point Compare Equal (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCMEQ_advsimd_zero:
    CLASS: sisd_half
    DESC: Floating-point Compare Equal to zero (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCMEQ_advsimd_zero:
    CLASS: sisd_single_and_double
    DESC: Floating-point Compare Equal to zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCMEQ_advsimd_zero:
    CLASS: simd_half
    DESC: Floating-point Compare Equal to zero (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCMEQ_advsimd_zero:
    CLASS: simd_single_and_double
    DESC: Floating-point Compare Equal to zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcmeq_p_p_z0:
    CLASS: eq
    DESC: Floating-point compare vector with zero
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcmeq_p_p_z0:
    CLASS: gt
    DESC: Floating-point compare vector with zero
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcmeq_p_p_z0:
    CLASS: ge
    DESC: Floating-point compare vector with zero
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcmeq_p_p_z0:
    CLASS: lt
    DESC: Floating-point compare vector with zero
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcmeq_p_p_z0:
    CLASS: le
    DESC: Floating-point compare vector with zero
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcmeq_p_p_z0:
    CLASS: ne
    DESC: Floating-point compare vector with zero
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcmeq_p_p_zz:
    CLASS: eq
    DESC: Floating-point compare vectors
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcmeq_p_p_zz:
    CLASS: gt
    DESC: Floating-point compare vectors
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcmeq_p_p_zz:
    CLASS: ge
    DESC: Floating-point compare vectors
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcmeq_p_p_zz:
    CLASS: ne
    DESC: Floating-point compare vectors
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcmeq_p_p_zz:
    CLASS: uo
    DESC: Floating-point compare vectors
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCMGE_advsimd_reg:
    CLASS: sisd_half
    DESC: Floating-point Compare Greater than or Equal (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCMGE_advsimd_reg:
    CLASS: sisd_single_and_double
    DESC: Floating-point Compare Greater than or Equal (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCMGE_advsimd_reg:
    CLASS: simd_half
    DESC: Floating-point Compare Greater than or Equal (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCMGE_advsimd_reg:
    CLASS: simd_single_and_double
    DESC: Floating-point Compare Greater than or Equal (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCMGE_advsimd_zero:
    CLASS: sisd_half
    DESC: Floating-point Compare Greater than or Equal to zero (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCMGE_advsimd_zero:
    CLASS: sisd_single_and_double
    DESC: Floating-point Compare Greater than or Equal to zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCMGE_advsimd_zero:
    CLASS: simd_half
    DESC: Floating-point Compare Greater than or Equal to zero (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCMGE_advsimd_zero:
    CLASS: simd_single_and_double
    DESC: Floating-point Compare Greater than or Equal to zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCMGT_advsimd_reg:
    CLASS: sisd_half
    DESC: Floating-point Compare Greater than (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCMGT_advsimd_reg:
    CLASS: sisd_single_and_double
    DESC: Floating-point Compare Greater than (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCMGT_advsimd_reg:
    CLASS: simd_half
    DESC: Floating-point Compare Greater than (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCMGT_advsimd_reg:
    CLASS: simd_single_and_double
    DESC: Floating-point Compare Greater than (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCMGT_advsimd_zero:
    CLASS: sisd_half
    DESC: Floating-point Compare Greater than zero (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCMGT_advsimd_zero:
    CLASS: sisd_single_and_double
    DESC: Floating-point Compare Greater than zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCMGT_advsimd_zero:
    CLASS: simd_half
    DESC: Floating-point Compare Greater than zero (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCMGT_advsimd_zero:
    CLASS: simd_single_and_double
    DESC: Floating-point Compare Greater than zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCMLA_advsimd_elt:
    CLASS: 2reg_element
    DESC: Floating-point Complex Multiply Accumulate (by element)
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_FCMA
- FCMLA_advsimd_vec:
    CLASS: simd
    DESC: Floating-point Complex Multiply Accumulate
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_FCMA
- fcmla_z_p_zzz:
    CLASS: sve
    DESC: Floating-point complex multiply-add with rotate (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- fcmla_z_zzzi:
    CLASS: half
    DESC: Floating-point complex multiply-add by indexed values with rotate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcmla_z_zzzi:
    CLASS: single
    DESC: Floating-point complex multiply-add by indexed values with rotate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCMLE_advsimd:
    CLASS: sisd_half
    DESC: Floating-point Compare Less than or Equal to zero (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCMLE_advsimd:
    CLASS: sisd_single_and_double
    DESC: Floating-point Compare Less than or Equal to zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCMLE_advsimd:
    CLASS: simd_half
    DESC: Floating-point Compare Less than or Equal to zero (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCMLE_advsimd:
    CLASS: simd_single_and_double
    DESC: Floating-point Compare Less than or Equal to zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCMLE_fcmeq_p_p_zz:
    CLASS: ge
    DESC: Floating-point compare less than or equal to vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCMLT_advsimd:
    CLASS: sisd_half
    DESC: Floating-point Compare Less than zero (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCMLT_advsimd:
    CLASS: sisd_single_and_double
    DESC: Floating-point Compare Less than zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCMLT_advsimd:
    CLASS: simd_half
    DESC: Floating-point Compare Less than zero (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCMLT_advsimd:
    CLASS: simd_single_and_double
    DESC: Floating-point Compare Less than zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCMLT_fcmeq_p_p_zz:
    CLASS: gt
    DESC: Floating-point compare less than vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCMP_float:
    CLASS: float
    DESC: Floating-point quiet Compare (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCMP_float:
    CLASS: float
    DESC: Floating-point quiet Compare (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCMPE_float:
    CLASS: float
    DESC: Floating-point signaling Compare (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCMPE_float:
    CLASS: float
    DESC: Floating-point signaling Compare (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- fcpy_z_p_i:
    CLASS: sve
    DESC: Copy 8-bit floating-point immediate to vector elements (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- FCSEL_float:
    CLASS: float
    DESC: Floating-point Conditional Select (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVT_float:
    CLASS: float
    DESC: Floating-point Convert precision (scalar)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcvt_z_p_z:
    CLASS: half_to_single
    DESC: Floating-point convert precision (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcvt_z_p_z:
    CLASS: half_to_double
    DESC: Floating-point convert precision (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcvt_z_p_z:
    CLASS: single_to_half
    DESC: Floating-point convert precision (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcvt_z_p_z:
    CLASS: single_to_double
    DESC: Floating-point convert precision (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcvt_z_p_z:
    CLASS: double_to_half
    DESC: Floating-point convert precision (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcvt_z_p_z:
    CLASS: double_to_single
    DESC: Floating-point convert precision (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTAS_advsimd:
    CLASS: sisd_half
    DESC: Floating-point Convert to Signed integer, rounding to nearest with ties
      to Away (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTAS_advsimd:
    CLASS: sisd_single_and_double
    DESC: Floating-point Convert to Signed integer, rounding to nearest with ties
      to Away (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTAS_advsimd:
    CLASS: simd_half
    DESC: Floating-point Convert to Signed integer, rounding to nearest with ties
      to Away (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTAS_advsimd:
    CLASS: simd_single_and_double
    DESC: Floating-point Convert to Signed integer, rounding to nearest with ties
      to Away (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTAS_float:
    CLASS: float
    DESC: Floating-point Convert to Signed integer, rounding to nearest with ties
      to Away (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTAS_float:
    CLASS: float
    DESC: Floating-point Convert to Signed integer, rounding to nearest with ties
      to Away (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTAU_advsimd:
    CLASS: sisd_half
    DESC: Floating-point Convert to Unsigned integer, rounding to nearest with ties
      to Away (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTAU_advsimd:
    CLASS: sisd_single_and_double
    DESC: Floating-point Convert to Unsigned integer, rounding to nearest with ties
      to Away (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTAU_advsimd:
    CLASS: simd_half
    DESC: Floating-point Convert to Unsigned integer, rounding to nearest with ties
      to Away (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTAU_advsimd:
    CLASS: simd_single_and_double
    DESC: Floating-point Convert to Unsigned integer, rounding to nearest with ties
      to Away (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTAU_float:
    CLASS: float
    DESC: Floating-point Convert to Unsigned integer, rounding to nearest with ties
      to Away (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTAU_float:
    CLASS: float
    DESC: Floating-point Convert to Unsigned integer, rounding to nearest with ties
      to Away (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTL_advsimd:
    CLASS: simd_single_and_double
    DESC: Floating-point Convert to higher precision Long (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTMS_advsimd:
    CLASS: sisd_half
    DESC: Floating-point Convert to Signed integer, rounding toward Minus infinity
      (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTMS_advsimd:
    CLASS: sisd_single_and_double
    DESC: Floating-point Convert to Signed integer, rounding toward Minus infinity
      (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTMS_advsimd:
    CLASS: simd_half
    DESC: Floating-point Convert to Signed integer, rounding toward Minus infinity
      (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTMS_advsimd:
    CLASS: simd_single_and_double
    DESC: Floating-point Convert to Signed integer, rounding toward Minus infinity
      (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTMS_float:
    CLASS: float
    DESC: Floating-point Convert to Signed integer, rounding toward Minus infinity
      (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTMS_float:
    CLASS: float
    DESC: Floating-point Convert to Signed integer, rounding toward Minus infinity
      (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTMU_advsimd:
    CLASS: sisd_half
    DESC: Floating-point Convert to Unsigned integer, rounding toward Minus infinity
      (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTMU_advsimd:
    CLASS: sisd_single_and_double
    DESC: Floating-point Convert to Unsigned integer, rounding toward Minus infinity
      (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTMU_advsimd:
    CLASS: simd_half
    DESC: Floating-point Convert to Unsigned integer, rounding toward Minus infinity
      (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTMU_advsimd:
    CLASS: simd_single_and_double
    DESC: Floating-point Convert to Unsigned integer, rounding toward Minus infinity
      (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTMU_float:
    CLASS: float
    DESC: Floating-point Convert to Unsigned integer, rounding toward Minus infinity
      (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTMU_float:
    CLASS: float
    DESC: Floating-point Convert to Unsigned integer, rounding toward Minus infinity
      (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTN_advsimd:
    CLASS: simd_single_and_double
    DESC: Floating-point Convert to lower precision Narrow (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTNS_advsimd:
    CLASS: sisd_half
    DESC: Floating-point Convert to Signed integer, rounding to nearest with ties
      to even (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTNS_advsimd:
    CLASS: sisd_single_and_double
    DESC: Floating-point Convert to Signed integer, rounding to nearest with ties
      to even (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTNS_advsimd:
    CLASS: simd_half
    DESC: Floating-point Convert to Signed integer, rounding to nearest with ties
      to even (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTNS_advsimd:
    CLASS: simd_single_and_double
    DESC: Floating-point Convert to Signed integer, rounding to nearest with ties
      to even (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTNS_float:
    CLASS: float
    DESC: Floating-point Convert to Signed integer, rounding to nearest with ties
      to even (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTNS_float:
    CLASS: float
    DESC: Floating-point Convert to Signed integer, rounding to nearest with ties
      to even (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTNU_advsimd:
    CLASS: sisd_half
    DESC: Floating-point Convert to Unsigned integer, rounding to nearest with ties
      to even (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTNU_advsimd:
    CLASS: sisd_single_and_double
    DESC: Floating-point Convert to Unsigned integer, rounding to nearest with ties
      to even (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTNU_advsimd:
    CLASS: simd_half
    DESC: Floating-point Convert to Unsigned integer, rounding to nearest with ties
      to even (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTNU_advsimd:
    CLASS: simd_single_and_double
    DESC: Floating-point Convert to Unsigned integer, rounding to nearest with ties
      to even (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTNU_float:
    CLASS: float
    DESC: Floating-point Convert to Unsigned integer, rounding to nearest with ties
      to even (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTNU_float:
    CLASS: float
    DESC: Floating-point Convert to Unsigned integer, rounding to nearest with ties
      to even (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTPS_advsimd:
    CLASS: sisd_half
    DESC: Floating-point Convert to Signed integer, rounding toward Plus infinity
      (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTPS_advsimd:
    CLASS: sisd_single_and_double
    DESC: Floating-point Convert to Signed integer, rounding toward Plus infinity
      (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTPS_advsimd:
    CLASS: simd_half
    DESC: Floating-point Convert to Signed integer, rounding toward Plus infinity
      (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTPS_advsimd:
    CLASS: simd_single_and_double
    DESC: Floating-point Convert to Signed integer, rounding toward Plus infinity
      (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTPS_float:
    CLASS: float
    DESC: Floating-point Convert to Signed integer, rounding toward Plus infinity
      (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTPS_float:
    CLASS: float
    DESC: Floating-point Convert to Signed integer, rounding toward Plus infinity
      (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTPU_advsimd:
    CLASS: sisd_half
    DESC: Floating-point Convert to Unsigned integer, rounding toward Plus infinity
      (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTPU_advsimd:
    CLASS: sisd_single_and_double
    DESC: Floating-point Convert to Unsigned integer, rounding toward Plus infinity
      (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTPU_advsimd:
    CLASS: simd_half
    DESC: Floating-point Convert to Unsigned integer, rounding toward Plus infinity
      (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTPU_advsimd:
    CLASS: simd_single_and_double
    DESC: Floating-point Convert to Unsigned integer, rounding toward Plus infinity
      (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTPU_float:
    CLASS: float
    DESC: Floating-point Convert to Unsigned integer, rounding toward Plus infinity
      (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTPU_float:
    CLASS: float
    DESC: Floating-point Convert to Unsigned integer, rounding toward Plus infinity
      (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTXN_advsimd:
    CLASS: sisd
    DESC: Floating-point Convert to lower precision Narrow, rounding to odd (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTXN_advsimd:
    CLASS: simd
    DESC: Floating-point Convert to lower precision Narrow, rounding to odd (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTZS_advsimd_fix:
    CLASS: sisd
    DESC: Floating-point Convert to Signed fixed-point, rounding toward Zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTZS_advsimd_fix:
    CLASS: simd
    DESC: Floating-point Convert to Signed fixed-point, rounding toward Zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTZS_advsimd_int:
    CLASS: sisd_half
    DESC: Floating-point Convert to Signed integer, rounding toward Zero (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTZS_advsimd_int:
    CLASS: sisd_single_and_double
    DESC: Floating-point Convert to Signed integer, rounding toward Zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTZS_advsimd_int:
    CLASS: simd_half
    DESC: Floating-point Convert to Signed integer, rounding toward Zero (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTZS_advsimd_int:
    CLASS: simd_single_and_double
    DESC: Floating-point Convert to Signed integer, rounding toward Zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTZS_float_fix:
    CLASS: float
    DESC: Floating-point Convert to Signed fixed-point, rounding toward Zero (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTZS_float_fix:
    CLASS: float
    DESC: Floating-point Convert to Signed fixed-point, rounding toward Zero (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTZS_float_int:
    CLASS: float
    DESC: Floating-point Convert to Signed integer, rounding toward Zero (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTZS_float_int:
    CLASS: float
    DESC: Floating-point Convert to Signed integer, rounding toward Zero (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- fcvtzs_z_p_z:
    CLASS: half_to_16
    DESC: Floating-point convert to signed integer, rounding toward zero (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcvtzs_z_p_z:
    CLASS: half_to_32
    DESC: Floating-point convert to signed integer, rounding toward zero (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcvtzs_z_p_z:
    CLASS: half_to_64
    DESC: Floating-point convert to signed integer, rounding toward zero (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcvtzs_z_p_z:
    CLASS: single_to_32
    DESC: Floating-point convert to signed integer, rounding toward zero (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcvtzs_z_p_z:
    CLASS: single_to_64
    DESC: Floating-point convert to signed integer, rounding toward zero (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcvtzs_z_p_z:
    CLASS: double_to_32
    DESC: Floating-point convert to signed integer, rounding toward zero (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcvtzs_z_p_z:
    CLASS: double_to_64
    DESC: Floating-point convert to signed integer, rounding toward zero (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTZU_advsimd_fix:
    CLASS: sisd
    DESC: Floating-point Convert to Unsigned fixed-point, rounding toward Zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTZU_advsimd_fix:
    CLASS: simd
    DESC: Floating-point Convert to Unsigned fixed-point, rounding toward Zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTZU_advsimd_int:
    CLASS: sisd_half
    DESC: Floating-point Convert to Unsigned integer, rounding toward Zero (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTZU_advsimd_int:
    CLASS: sisd_single_and_double
    DESC: Floating-point Convert to Unsigned integer, rounding toward Zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTZU_advsimd_int:
    CLASS: simd_half
    DESC: Floating-point Convert to Unsigned integer, rounding toward Zero (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTZU_advsimd_int:
    CLASS: simd_single_and_double
    DESC: Floating-point Convert to Unsigned integer, rounding toward Zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FCVTZU_float_fix:
    CLASS: float
    DESC: Floating-point Convert to Unsigned fixed-point, rounding toward Zero (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTZU_float_fix:
    CLASS: float
    DESC: Floating-point Convert to Unsigned fixed-point, rounding toward Zero (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTZU_float_int:
    CLASS: float
    DESC: Floating-point Convert to Unsigned integer, rounding toward Zero (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FCVTZU_float_int:
    CLASS: float
    DESC: Floating-point Convert to Unsigned integer, rounding toward Zero (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- fcvtzu_z_p_z:
    CLASS: half_to_16
    DESC: Floating-point convert to unsigned integer, rounding toward zero (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcvtzu_z_p_z:
    CLASS: half_to_32
    DESC: Floating-point convert to unsigned integer, rounding toward zero (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcvtzu_z_p_z:
    CLASS: half_to_64
    DESC: Floating-point convert to unsigned integer, rounding toward zero (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcvtzu_z_p_z:
    CLASS: single_to_32
    DESC: Floating-point convert to unsigned integer, rounding toward zero (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcvtzu_z_p_z:
    CLASS: single_to_64
    DESC: Floating-point convert to unsigned integer, rounding toward zero (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcvtzu_z_p_z:
    CLASS: double_to_32
    DESC: Floating-point convert to unsigned integer, rounding toward zero (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fcvtzu_z_p_z:
    CLASS: double_to_64
    DESC: Floating-point convert to unsigned integer, rounding toward zero (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FDIV_advsimd:
    CLASS: half
    DESC: Floating-point Divide (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FDIV_advsimd:
    CLASS: single_and_double
    DESC: Floating-point Divide (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FDIV_float:
    CLASS: float
    DESC: Floating-point Divide (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- fdiv_z_p_zz:
    CLASS: sve
    DESC: Floating-point divide by vector (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- fdivr_z_p_zz:
    CLASS: sve
    DESC: Floating-point reversed divide by vector (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- fdup_z_i:
    CLASS: sve
    DESC: Broadcast 8-bit floating-point immediate to vector elements (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- fexpa_z_z:
    CLASS: sve
    DESC: Floating-point exponential accelerator
    VARIANT: SVE
    VARIANT_FEATURE: None
- FJCVTZS:
    CLASS: double_to_32
    DESC: Floating-point Javascript Convert to Signed fixed-point, rounding toward
      Zero
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_JSCVT
- fmad_z_p_zzz:
    CLASS: sve
    DESC: Floating-point fused multiply-add vectors (predicated), writing multiplicand
      [Zdn = Za + Zdn * Zm]
    VARIANT: SVE
    VARIANT_FEATURE: None
- FMADD_float:
    CLASS: float
    DESC: Floating-point fused Multiply-Add (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMAX_advsimd:
    CLASS: half
    DESC: Floating-point Maximum (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMAX_advsimd:
    CLASS: single_and_double
    DESC: Floating-point Maximum (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMAX_float:
    CLASS: float
    DESC: Floating-point Maximum (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- fmax_z_p_zs:
    CLASS: sve
    DESC: Floating-point maximum with immediate (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- fmax_z_p_zz:
    CLASS: sve
    DESC: Floating-point maximum (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- FMAXNM_advsimd:
    CLASS: half
    DESC: Floating-point Maximum Number (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMAXNM_advsimd:
    CLASS: single_and_double
    DESC: Floating-point Maximum Number (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMAXNM_float:
    CLASS: float
    DESC: Floating-point Maximum Number (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- fmaxnm_z_p_zs:
    CLASS: sve
    DESC: Floating-point maximum number with immediate (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- fmaxnm_z_p_zz:
    CLASS: sve
    DESC: Floating-point maximum number (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- FMAXNMP_advsimd_pair:
    CLASS: half
    DESC: Floating-point Maximum Number of Pair of elements (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMAXNMP_advsimd_pair:
    CLASS: single_and_double
    DESC: Floating-point Maximum Number of Pair of elements (scalar)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMAXNMP_advsimd_vec:
    CLASS: half
    DESC: Floating-point Maximum Number Pairwise (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMAXNMP_advsimd_vec:
    CLASS: single_and_double
    DESC: Floating-point Maximum Number Pairwise (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMAXNMV_advsimd:
    CLASS: half
    DESC: Floating-point Maximum Number across Vector
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMAXNMV_advsimd:
    CLASS: single_and_double
    DESC: Floating-point Maximum Number across Vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fmaxnmv_v_p_z:
    CLASS: sve
    DESC: Floating-point maximum number recursive reduction to scalar
    VARIANT: SVE
    VARIANT_FEATURE: None
- FMAXP_advsimd_pair:
    CLASS: half
    DESC: Floating-point Maximum of Pair of elements (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMAXP_advsimd_pair:
    CLASS: single_and_double
    DESC: Floating-point Maximum of Pair of elements (scalar)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMAXP_advsimd_vec:
    CLASS: half
    DESC: Floating-point Maximum Pairwise (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMAXP_advsimd_vec:
    CLASS: single_and_double
    DESC: Floating-point Maximum Pairwise (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMAXV_advsimd:
    CLASS: half
    DESC: Floating-point Maximum across Vector
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMAXV_advsimd:
    CLASS: single_and_double
    DESC: Floating-point Maximum across Vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fmaxv_v_p_z:
    CLASS: sve
    DESC: Floating-point maximum recursive reduction to scalar
    VARIANT: SVE
    VARIANT_FEATURE: None
- FMIN_advsimd:
    CLASS: half
    DESC: Floating-point minimum (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMIN_advsimd:
    CLASS: single_and_double
    DESC: Floating-point minimum (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMIN_float:
    CLASS: float
    DESC: Floating-point Minimum (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- fmin_z_p_zs:
    CLASS: sve
    DESC: Floating-point minimum with immediate (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- fmin_z_p_zz:
    CLASS: sve
    DESC: Floating-point minimum (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- FMINNM_advsimd:
    CLASS: half
    DESC: Floating-point Minimum Number (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMINNM_advsimd:
    CLASS: single_and_double
    DESC: Floating-point Minimum Number (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMINNM_float:
    CLASS: float
    DESC: Floating-point Minimum Number (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- fminnm_z_p_zs:
    CLASS: sve
    DESC: Floating-point minimum number with immediate (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- fminnm_z_p_zz:
    CLASS: sve
    DESC: Floating-point minimum number (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- FMINNMP_advsimd_pair:
    CLASS: half
    DESC: Floating-point Minimum Number of Pair of elements (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMINNMP_advsimd_pair:
    CLASS: single_and_double
    DESC: Floating-point Minimum Number of Pair of elements (scalar)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMINNMP_advsimd_vec:
    CLASS: half
    DESC: Floating-point Minimum Number Pairwise (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMINNMP_advsimd_vec:
    CLASS: single_and_double
    DESC: Floating-point Minimum Number Pairwise (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMINNMV_advsimd:
    CLASS: half
    DESC: Floating-point Minimum Number across Vector
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMINNMV_advsimd:
    CLASS: single_and_double
    DESC: Floating-point Minimum Number across Vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fminnmv_v_p_z:
    CLASS: sve
    DESC: Floating-point minimum number recursive reduction to scalar
    VARIANT: SVE
    VARIANT_FEATURE: None
- FMINP_advsimd_pair:
    CLASS: half
    DESC: Floating-point Minimum of Pair of elements (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMINP_advsimd_pair:
    CLASS: single_and_double
    DESC: Floating-point Minimum of Pair of elements (scalar)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMINP_advsimd_vec:
    CLASS: half
    DESC: Floating-point Minimum Pairwise (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMINP_advsimd_vec:
    CLASS: single_and_double
    DESC: Floating-point Minimum Pairwise (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMINV_advsimd:
    CLASS: half
    DESC: Floating-point Minimum across Vector
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMINV_advsimd:
    CLASS: single_and_double
    DESC: Floating-point Minimum across Vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fminv_v_p_z:
    CLASS: sve
    DESC: Floating-point minimum recursive reduction to scalar
    VARIANT: SVE
    VARIANT_FEATURE: None
- FMLA_advsimd_elt:
    CLASS: 2reg_scalar_half
    DESC: Floating-point fused Multiply-Add to accumulator (by element)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMLA_advsimd_elt:
    CLASS: 2reg_scalar_single_and_double
    DESC: Floating-point fused Multiply-Add to accumulator (by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMLA_advsimd_elt:
    CLASS: 2reg_element_half
    DESC: Floating-point fused Multiply-Add to accumulator (by element)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMLA_advsimd_elt:
    CLASS: 2reg_element_single_and_double
    DESC: Floating-point fused Multiply-Add to accumulator (by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMLA_advsimd_vec:
    CLASS: half
    DESC: Floating-point fused Multiply-Add to accumulator (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMLA_advsimd_vec:
    CLASS: single_and_double
    DESC: Floating-point fused Multiply-Add to accumulator (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fmla_z_p_zzz:
    CLASS: sve
    DESC: Floating-point fused multiply-add vectors (predicated), writing addend [Zda
      = Zda + Zn * Zm]
    VARIANT: SVE
    VARIANT_FEATURE: None
- fmla_z_zzzi:
    CLASS: half
    DESC: Floating-point fused multiply-add by indexed elements (Zda = Zda + Zn *
      Zm[indexed])
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fmla_z_zzzi:
    CLASS: single
    DESC: Floating-point fused multiply-add by indexed elements (Zda = Zda + Zn *
      Zm[indexed])
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fmla_z_zzzi:
    CLASS: double
    DESC: Floating-point fused multiply-add by indexed elements (Zda = Zda + Zn *
      Zm[indexed])
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMLAL_advsimd_elt:
    CLASS: fmlal
    DESC: Floating-point fused Multiply-Add Long to accumulator (by element)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FHM
- FMLAL_advsimd_elt:
    CLASS: fmlal2
    DESC: Floating-point fused Multiply-Add Long to accumulator (by element)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FHM
- FMLAL_advsimd_vec:
    CLASS: fmlal
    DESC: Floating-point fused Multiply-Add Long to accumulator (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FHM
- FMLAL_advsimd_vec:
    CLASS: fmlal2
    DESC: Floating-point fused Multiply-Add Long to accumulator (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FHM
- FMLS_advsimd_elt:
    CLASS: 2reg_scalar_half
    DESC: Floating-point fused Multiply-Subtract from accumulator (by element)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMLS_advsimd_elt:
    CLASS: 2reg_scalar_single_and_double
    DESC: Floating-point fused Multiply-Subtract from accumulator (by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMLS_advsimd_elt:
    CLASS: 2reg_element_half
    DESC: Floating-point fused Multiply-Subtract from accumulator (by element)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMLS_advsimd_elt:
    CLASS: 2reg_element_single_and_double
    DESC: Floating-point fused Multiply-Subtract from accumulator (by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMLS_advsimd_vec:
    CLASS: half
    DESC: Floating-point fused Multiply-Subtract from accumulator (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMLS_advsimd_vec:
    CLASS: single_and_double
    DESC: Floating-point fused Multiply-Subtract from accumulator (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fmls_z_p_zzz:
    CLASS: sve
    DESC: Floating-point fused multiply-subtract vectors (predicated), writing addend
      [Zda = Zda + -Zn * Zm]
    VARIANT: SVE
    VARIANT_FEATURE: None
- fmls_z_zzzi:
    CLASS: half
    DESC: Floating-point fused multiply-subtract by indexed elements (Zda = Zda +
      -Zn * Zm[indexed])
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fmls_z_zzzi:
    CLASS: single
    DESC: Floating-point fused multiply-subtract by indexed elements (Zda = Zda +
      -Zn * Zm[indexed])
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fmls_z_zzzi:
    CLASS: double
    DESC: Floating-point fused multiply-subtract by indexed elements (Zda = Zda +
      -Zn * Zm[indexed])
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMLSL_advsimd_elt:
    CLASS: fmlsl
    DESC: Floating-point fused Multiply-Subtract Long from accumulator (by element)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FHM
- FMLSL_advsimd_elt:
    CLASS: fmlsl2
    DESC: Floating-point fused Multiply-Subtract Long from accumulator (by element)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FHM
- FMLSL_advsimd_vec:
    CLASS: fmlsl
    DESC: Floating-point fused Multiply-Subtract Long from accumulator (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FHM
- FMLSL_advsimd_vec:
    CLASS: fmlsl2
    DESC: Floating-point fused Multiply-Subtract Long from accumulator (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FHM
- fmmla_z_zzz:
    CLASS: 32_elem
    DESC: Floating-point matrix multiply-accumulate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fmmla_z_zzz:
    CLASS: 64_elem
    DESC: Floating-point matrix multiply-accumulate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMOV_advsimd:
    CLASS: per_half
    DESC: Floating-point move immediate (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMOV_advsimd:
    CLASS: single_and_double
    DESC: Floating-point move immediate (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMOV_cpy_z_p_i:
    CLASS: sve
    DESC: Move floating-point +0.0 to vector elements (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- FMOV_dup_z_i:
    CLASS: sve
    DESC: Move floating-point +0.0 to vector elements (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- FMOV_fcpy_z_p_i:
    CLASS: sve
    DESC: Move 8-bit floating-point immediate to vector elements (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- FMOV_fdup_z_i:
    CLASS: sve
    DESC: Move 8-bit floating-point immediate to vector elements (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- FMOV_float:
    CLASS: float
    DESC: Floating-point Move register without conversion
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMOV_float_gen:
    CLASS: float
    DESC: Floating-point Move to or from general-purpose register without conversion
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMOV_float_gen:
    CLASS: float
    DESC: Floating-point Move to or from general-purpose register without conversion
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMOV_float_gen:
    CLASS: float
    DESC: Floating-point Move to or from general-purpose register without conversion
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMOV_float_gen:
    CLASS: float
    DESC: Floating-point Move to or from general-purpose register without conversion
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMOV_float_imm:
    CLASS: imm8f
    DESC: Floating-point move immediate (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- fmsb_z_p_zzz:
    CLASS: sve
    DESC: Floating-point fused multiply-subtract vectors (predicated), writing multiplicand
      [Zdn = Za + -Zdn * Zm]
    VARIANT: SVE
    VARIANT_FEATURE: None
- FMSUB_float:
    CLASS: float
    DESC: Floating-point Fused Multiply-Subtract (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMUL_advsimd_elt:
    CLASS: 2reg_scalar_half
    DESC: Floating-point Multiply (by element)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMUL_advsimd_elt:
    CLASS: 2reg_scalar_single_and_double
    DESC: Floating-point Multiply (by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMUL_advsimd_elt:
    CLASS: 2reg_element_half
    DESC: Floating-point Multiply (by element)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMUL_advsimd_elt:
    CLASS: 2reg_element_single_and_double
    DESC: Floating-point Multiply (by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMUL_advsimd_vec:
    CLASS: half
    DESC: Floating-point Multiply (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMUL_advsimd_vec:
    CLASS: single_and_double
    DESC: Floating-point Multiply (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMUL_float:
    CLASS: float
    DESC: Floating-point Multiply (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- fmul_z_p_zs:
    CLASS: sve
    DESC: Floating-point multiply by immediate (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- fmul_z_p_zz:
    CLASS: sve
    DESC: Floating-point multiply vectors (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- fmul_z_zz:
    CLASS: sve
    DESC: Floating-point multiply vectors (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- fmul_z_zzi:
    CLASS: half
    DESC: Floating-point multiply by indexed elements
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fmul_z_zzi:
    CLASS: single
    DESC: Floating-point multiply by indexed elements
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fmul_z_zzi:
    CLASS: double
    DESC: Floating-point multiply by indexed elements
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMULX_advsimd_elt:
    CLASS: 2reg_scalar_half
    DESC: Floating-point Multiply extended (by element)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMULX_advsimd_elt:
    CLASS: 2reg_scalar_single_and_double
    DESC: Floating-point Multiply extended (by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMULX_advsimd_elt:
    CLASS: 2reg_element_half
    DESC: Floating-point Multiply extended (by element)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMULX_advsimd_elt:
    CLASS: 2reg_element_single_and_double
    DESC: Floating-point Multiply extended (by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMULX_advsimd_vec:
    CLASS: sisd_half
    DESC: Floating-point Multiply extended
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMULX_advsimd_vec:
    CLASS: sisd_single_and_double
    DESC: Floating-point Multiply extended
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FMULX_advsimd_vec:
    CLASS: simd_half
    DESC: Floating-point Multiply extended
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FMULX_advsimd_vec:
    CLASS: simd_single_and_double
    DESC: Floating-point Multiply extended
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- fmulx_z_p_zz:
    CLASS: sve
    DESC: Floating-point multiply-extended vectors (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- FNEG_advsimd:
    CLASS: half
    DESC: Floating-point Negate (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FNEG_advsimd:
    CLASS: single_and_double
    DESC: Floating-point Negate (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FNEG_float:
    CLASS: float
    DESC: Floating-point Negate (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- fneg_z_p_z:
    CLASS: sve
    DESC: Floating-point negate (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- fnmad_z_p_zzz:
    CLASS: sve
    DESC: Floating-point negated fused multiply-add vectors (predicated), writing
      multiplicand [Zdn = -Za + -Zdn * Zm]
    VARIANT: SVE
    VARIANT_FEATURE: None
- FNMADD_float:
    CLASS: float
    DESC: Floating-point Negated fused Multiply-Add (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- fnmla_z_p_zzz:
    CLASS: sve
    DESC: Floating-point negated fused multiply-add vectors (predicated), writing
      addend [Zda = -Zda + -Zn * Zm]
    VARIANT: SVE
    VARIANT_FEATURE: None
- fnmls_z_p_zzz:
    CLASS: sve
    DESC: Floating-point negated fused multiply-subtract vectors (predicated), writing
      addend [Zda = -Zda + Zn * Zm]
    VARIANT: SVE
    VARIANT_FEATURE: None
- fnmsb_z_p_zzz:
    CLASS: sve
    DESC: Floating-point negated fused multiply-subtract vectors (predicated), writing
      multiplicand [Zdn = -Za + Zdn * Zm]
    VARIANT: SVE
    VARIANT_FEATURE: None
- FNMSUB_float:
    CLASS: float
    DESC: Floating-point Negated fused Multiply-Subtract (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FNMUL_float:
    CLASS: float
    DESC: Floating-point Multiply-Negate (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FRECPE_advsimd:
    CLASS: sisd_half
    DESC: Floating-point Reciprocal Estimate
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FRECPE_advsimd:
    CLASS: sisd_single_and_double
    DESC: Floating-point Reciprocal Estimate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FRECPE_advsimd:
    CLASS: simd_half
    DESC: Floating-point Reciprocal Estimate
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FRECPE_advsimd:
    CLASS: simd_single_and_double
    DESC: Floating-point Reciprocal Estimate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- frecpe_z_z:
    CLASS: sve
    DESC: Floating-point reciprocal estimate (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- FRECPS_advsimd:
    CLASS: sisd_half
    DESC: Floating-point Reciprocal Step
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FRECPS_advsimd:
    CLASS: sisd_single_and_double
    DESC: Floating-point Reciprocal Step
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FRECPS_advsimd:
    CLASS: simd_half
    DESC: Floating-point Reciprocal Step
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FRECPS_advsimd:
    CLASS: simd_single_and_double
    DESC: Floating-point Reciprocal Step
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- frecps_z_zz:
    CLASS: sve
    DESC: Floating-point reciprocal step (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- FRECPX_advsimd:
    CLASS: half
    DESC: Floating-point Reciprocal exponent (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FRECPX_advsimd:
    CLASS: single_and_double
    DESC: Floating-point Reciprocal exponent (scalar)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- frecpx_z_p_z:
    CLASS: sve
    DESC: Floating-point reciprocal exponent (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- FRINT32X_advsimd:
    CLASS: simd_single_and_double
    DESC: Floating-point Round to 32-bit Integer, using current rounding mode (vector)
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_FRINTTS
- FRINT32X_float:
    CLASS: float
    DESC: Floating-point Round to 32-bit Integer, using current rounding mode (scalar)
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_FRINTTS
- FRINT32Z_advsimd:
    CLASS: simd_single_and_double
    DESC: Floating-point Round to 32-bit Integer toward Zero (vector)
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_FRINTTS
- FRINT32Z_float:
    CLASS: float
    DESC: Floating-point Round to 32-bit Integer toward Zero (scalar)
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_FRINTTS
- FRINT64X_advsimd:
    CLASS: simd_single_and_double
    DESC: Floating-point Round to 64-bit Integer, using current rounding mode (vector)
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_FRINTTS
- FRINT64X_float:
    CLASS: float
    DESC: Floating-point Round to 64-bit Integer, using current rounding mode (scalar)
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_FRINTTS
- FRINT64Z_advsimd:
    CLASS: simd_single_and_double
    DESC: Floating-point Round to 64-bit Integer toward Zero (vector)
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_FRINTTS
- FRINT64Z_float:
    CLASS: float
    DESC: Floating-point Round to 64-bit Integer toward Zero (scalar)
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_FRINTTS
- FRINTA_advsimd:
    CLASS: half
    DESC: Floating-point Round to Integral, to nearest with ties to Away (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FRINTA_advsimd:
    CLASS: single_and_double
    DESC: Floating-point Round to Integral, to nearest with ties to Away (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FRINTA_float:
    CLASS: float
    DESC: Floating-point Round to Integral, to nearest with ties to Away (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- frinta_z_p_z:
    CLASS: frint_i
    DESC: Floating-point round to integral value (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- frinta_z_p_z:
    CLASS: frint_x
    DESC: Floating-point round to integral value (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- frinta_z_p_z:
    CLASS: frint_a
    DESC: Floating-point round to integral value (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- frinta_z_p_z:
    CLASS: frint_n
    DESC: Floating-point round to integral value (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- frinta_z_p_z:
    CLASS: frint_z
    DESC: Floating-point round to integral value (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- frinta_z_p_z:
    CLASS: frint_m
    DESC: Floating-point round to integral value (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- frinta_z_p_z:
    CLASS: frint_p
    DESC: Floating-point round to integral value (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FRINTI_advsimd:
    CLASS: half
    DESC: Floating-point Round to Integral, using current rounding mode (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FRINTI_advsimd:
    CLASS: single_and_double
    DESC: Floating-point Round to Integral, using current rounding mode (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FRINTI_float:
    CLASS: float
    DESC: Floating-point Round to Integral, using current rounding mode (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FRINTM_advsimd:
    CLASS: half
    DESC: Floating-point Round to Integral, toward Minus infinity (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FRINTM_advsimd:
    CLASS: single_and_double
    DESC: Floating-point Round to Integral, toward Minus infinity (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FRINTM_float:
    CLASS: float
    DESC: Floating-point Round to Integral, toward Minus infinity (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FRINTN_advsimd:
    CLASS: half
    DESC: Floating-point Round to Integral, to nearest with ties to even (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FRINTN_advsimd:
    CLASS: single_and_double
    DESC: Floating-point Round to Integral, to nearest with ties to even (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FRINTN_float:
    CLASS: float
    DESC: Floating-point Round to Integral, to nearest with ties to even (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FRINTP_advsimd:
    CLASS: half
    DESC: Floating-point Round to Integral, toward Plus infinity (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FRINTP_advsimd:
    CLASS: single_and_double
    DESC: Floating-point Round to Integral, toward Plus infinity (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FRINTP_float:
    CLASS: float
    DESC: Floating-point Round to Integral, toward Plus infinity (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FRINTX_advsimd:
    CLASS: half
    DESC: Floating-point Round to Integral exact, using current rounding mode (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FRINTX_advsimd:
    CLASS: single_and_double
    DESC: Floating-point Round to Integral exact, using current rounding mode (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FRINTX_float:
    CLASS: float
    DESC: Floating-point Round to Integral exact, using current rounding mode (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FRINTZ_advsimd:
    CLASS: half
    DESC: Floating-point Round to Integral, toward Zero (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FRINTZ_advsimd:
    CLASS: single_and_double
    DESC: Floating-point Round to Integral, toward Zero (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FRINTZ_float:
    CLASS: float
    DESC: Floating-point Round to Integral, toward Zero (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FRSQRTE_advsimd:
    CLASS: sisd_half
    DESC: Floating-point Reciprocal Square Root Estimate
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FRSQRTE_advsimd:
    CLASS: sisd_single_and_double
    DESC: Floating-point Reciprocal Square Root Estimate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FRSQRTE_advsimd:
    CLASS: simd_half
    DESC: Floating-point Reciprocal Square Root Estimate
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FRSQRTE_advsimd:
    CLASS: simd_single_and_double
    DESC: Floating-point Reciprocal Square Root Estimate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- frsqrte_z_z:
    CLASS: sve
    DESC: Floating-point reciprocal square root estimate (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- FRSQRTS_advsimd:
    CLASS: sisd_half
    DESC: Floating-point Reciprocal Square Root Step
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FRSQRTS_advsimd:
    CLASS: sisd_single_and_double
    DESC: Floating-point Reciprocal Square Root Step
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FRSQRTS_advsimd:
    CLASS: simd_half
    DESC: Floating-point Reciprocal Square Root Step
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FRSQRTS_advsimd:
    CLASS: simd_single_and_double
    DESC: Floating-point Reciprocal Square Root Step
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- frsqrts_z_zz:
    CLASS: sve
    DESC: Floating-point reciprocal square root step (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- fscale_z_p_zz:
    CLASS: sve
    DESC: Floating-point adjust exponent by vector (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- FSQRT_advsimd:
    CLASS: half
    DESC: Floating-point Square Root (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FSQRT_advsimd:
    CLASS: single_and_double
    DESC: Floating-point Square Root (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FSQRT_float:
    CLASS: float
    DESC: Floating-point Square Root (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- fsqrt_z_p_z:
    CLASS: sve
    DESC: Floating-point square root (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- FSUB_advsimd:
    CLASS: half
    DESC: Floating-point Subtract (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- FSUB_advsimd:
    CLASS: single_and_double
    DESC: Floating-point Subtract (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- FSUB_float:
    CLASS: float
    DESC: Floating-point Subtract (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- fsub_z_p_zs:
    CLASS: sve
    DESC: Floating-point subtract immediate (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- fsub_z_p_zz:
    CLASS: sve
    DESC: Floating-point subtract vectors (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- fsub_z_zz:
    CLASS: sve
    DESC: Floating-point subtract vectors (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- fsubr_z_p_zs:
    CLASS: sve
    DESC: Floating-point reversed subtract from immediate (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- fsubr_z_p_zz:
    CLASS: sve
    DESC: Floating-point reversed subtract vectors (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ftmad_z_zzi:
    CLASS: sve
    DESC: Floating-point trigonometric multiply-add coefficient
    VARIANT: SVE
    VARIANT_FEATURE: None
- ftsmul_z_zz:
    CLASS: sve
    DESC: Floating-point trigonometric starting value
    VARIANT: SVE
    VARIANT_FEATURE: None
- ftssel_z_zz:
    CLASS: sve
    DESC: Floating-point trigonometric select coefficient
    VARIANT: SVE
    VARIANT_FEATURE: None
- GMI:
    CLASS: general
    DESC: Tag Mask Insert
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_MTE
- HINT:
    CLASS: system
    DESC: Hint instruction
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- HLT:
    CLASS: system
    DESC: Halt instruction
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- HVC:
    CLASS: system
    DESC: Hypervisor Call
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- IC_SYS:
    CLASS: system
    DESC: Instruction Cache operation
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- incb_r_rs:
    CLASS: esize_byte
    DESC: Increment scalar by multiple of predicate constraint element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- incb_r_rs:
    CLASS: esize_doubleword
    DESC: Increment scalar by multiple of predicate constraint element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- incb_r_rs:
    CLASS: esize_halfword
    DESC: Increment scalar by multiple of predicate constraint element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- incb_r_rs:
    CLASS: esize_word
    DESC: Increment scalar by multiple of predicate constraint element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- incd_z_zs:
    CLASS: esize_doubleword
    DESC: Increment vector by multiple of predicate constraint element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- incd_z_zs:
    CLASS: esize_halfword
    DESC: Increment vector by multiple of predicate constraint element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- incd_z_zs:
    CLASS: esize_word
    DESC: Increment vector by multiple of predicate constraint element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- incp_r_p_r:
    CLASS: sve
    DESC: Increment scalar by count of true predicate elements
    VARIANT: SVE
    VARIANT_FEATURE: None
- incp_z_p_z:
    CLASS: sve
    DESC: Increment vector by count of true predicate elements
    VARIANT: SVE
    VARIANT_FEATURE: None
- index_z_ii:
    CLASS: sve
    DESC: Create index starting from and incremented by immediate
    VARIANT: SVE
    VARIANT_FEATURE: None
- index_z_ir:
    CLASS: sve
    DESC: Create index starting from immediate and incremented by general-purpose
      register
    VARIANT: SVE
    VARIANT_FEATURE: None
- index_z_ri:
    CLASS: sve
    DESC: Create index starting from general-purpose register and incremented by immediate
    VARIANT: SVE
    VARIANT_FEATURE: None
- index_z_rr:
    CLASS: sve
    DESC: Create index starting from and incremented by general-purpose register
    VARIANT: SVE
    VARIANT_FEATURE: None
- INS_advsimd_elt:
    CLASS: advsimd
    DESC: Insert vector element from another vector element
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- INS_advsimd_gen:
    CLASS: advsimd
    DESC: Insert vector element from general-purpose register
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- insr_z_r:
    CLASS: sve
    DESC: Insert general-purpose register in shifted vector
    VARIANT: SVE
    VARIANT_FEATURE: None
- insr_z_v:
    CLASS: sve
    DESC: Insert SIMD&FP scalar register in shifted vector
    VARIANT: SVE
    VARIANT_FEATURE: None
- IRG:
    CLASS: general
    DESC: Insert Random Tag
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_MTE
- ISB:
    CLASS: system
    DESC: Instruction Synchronization Barrier
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- lasta_r_p_z:
    CLASS: sve
    DESC: Extract element after last to general-purpose register
    VARIANT: SVE
    VARIANT_FEATURE: None
- lasta_v_p_z:
    CLASS: sve
    DESC: Extract element after last to SIMD&FP scalar register
    VARIANT: SVE
    VARIANT_FEATURE: None
- lastb_r_p_z:
    CLASS: sve
    DESC: Extract last element to general-purpose register
    VARIANT: SVE
    VARIANT_FEATURE: None
- lastb_v_p_z:
    CLASS: sve
    DESC: Extract last element to SIMD&FP scalar register
    VARIANT: SVE
    VARIANT_FEATURE: None
- LD1_advsimd_mult:
    CLASS: as_no_post_index
    DESC: Load multiple single-element structures to one, two, three, or four registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LD1_advsimd_mult:
    CLASS: as_post_index
    DESC: Load multiple single-element structures to one, two, three, or four registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LD1_advsimd_sngl:
    CLASS: as_no_post_index
    DESC: Load one single-element structure to one lane of one register
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LD1_advsimd_sngl:
    CLASS: as_post_index
    DESC: Load one single-element structure to one lane of one register
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1b_z_p_ai:
    CLASS: 32_elem
    DESC: Gather load unsigned bytes to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1b_z_p_ai:
    CLASS: 64_elem
    DESC: Gather load unsigned bytes to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1b_z_p_bi:
    CLASS: 8_elem
    DESC: Contiguous load unsigned bytes to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1b_z_p_bi:
    CLASS: 16_elem
    DESC: Contiguous load unsigned bytes to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1b_z_p_bi:
    CLASS: 32_elem
    DESC: Contiguous load unsigned bytes to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1b_z_p_bi:
    CLASS: 64_elem
    DESC: Contiguous load unsigned bytes to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1b_z_p_br:
    CLASS: 8_elem
    DESC: Contiguous load unsigned bytes to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1b_z_p_br:
    CLASS: 16_elem
    DESC: Contiguous load unsigned bytes to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1b_z_p_br:
    CLASS: 32_elem
    DESC: Contiguous load unsigned bytes to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1b_z_p_br:
    CLASS: 64_elem
    DESC: Contiguous load unsigned bytes to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1b_z_p_bz:
    CLASS: off_d_x32_unscaled
    DESC: Gather load unsigned bytes to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1b_z_p_bz:
    CLASS: off_s_x32_unscaled
    DESC: Gather load unsigned bytes to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1b_z_p_bz:
    CLASS: off_d_64_unscaled
    DESC: Gather load unsigned bytes to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1d_z_p_ai:
    CLASS: sve
    DESC: Gather load doublewords to vector (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld1d_z_p_bi:
    CLASS: sve
    DESC: Contiguous load doublewords to vector (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld1d_z_p_br:
    CLASS: sve
    DESC: Contiguous load doublewords to vector (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld1d_z_p_bz:
    CLASS: off_d_x32_scaled
    DESC: Gather load doublewords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1d_z_p_bz:
    CLASS: off_d_x32_unscaled
    DESC: Gather load doublewords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1d_z_p_bz:
    CLASS: off_d_64_scaled
    DESC: Gather load doublewords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1d_z_p_bz:
    CLASS: off_d_64_unscaled
    DESC: Gather load doublewords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1h_z_p_ai:
    CLASS: 32_elem
    DESC: Gather load unsigned halfwords to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1h_z_p_ai:
    CLASS: 64_elem
    DESC: Gather load unsigned halfwords to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1h_z_p_bi:
    CLASS: 16_elem
    DESC: Contiguous load unsigned halfwords to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1h_z_p_bi:
    CLASS: 32_elem
    DESC: Contiguous load unsigned halfwords to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1h_z_p_bi:
    CLASS: 64_elem
    DESC: Contiguous load unsigned halfwords to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1h_z_p_br:
    CLASS: 16_elem
    DESC: Contiguous load unsigned halfwords to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1h_z_p_br:
    CLASS: 32_elem
    DESC: Contiguous load unsigned halfwords to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1h_z_p_br:
    CLASS: 64_elem
    DESC: Contiguous load unsigned halfwords to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1h_z_p_bz:
    CLASS: off_s_x32_scaled
    DESC: Gather load unsigned halfwords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1h_z_p_bz:
    CLASS: off_d_x32_scaled
    DESC: Gather load unsigned halfwords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1h_z_p_bz:
    CLASS: off_d_x32_unscaled
    DESC: Gather load unsigned halfwords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1h_z_p_bz:
    CLASS: off_s_x32_unscaled
    DESC: Gather load unsigned halfwords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1h_z_p_bz:
    CLASS: off_d_64_scaled
    DESC: Gather load unsigned halfwords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1h_z_p_bz:
    CLASS: off_d_64_unscaled
    DESC: Gather load unsigned halfwords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LD1R_advsimd:
    CLASS: as_no_post_index
    DESC: Load one single-element structure and Replicate to all lanes (of one register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LD1R_advsimd:
    CLASS: as_post_index
    DESC: Load one single-element structure and Replicate to all lanes (of one register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1rb_z_p_bi:
    CLASS: 8_elem
    DESC: Load and broadcast unsigned byte to vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1rb_z_p_bi:
    CLASS: 16_elem
    DESC: Load and broadcast unsigned byte to vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1rb_z_p_bi:
    CLASS: 32_elem
    DESC: Load and broadcast unsigned byte to vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1rb_z_p_bi:
    CLASS: 64_elem
    DESC: Load and broadcast unsigned byte to vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1rd_z_p_bi:
    CLASS: sve
    DESC: Load and broadcast doubleword to vector
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld1rh_z_p_bi:
    CLASS: 16_elem
    DESC: Load and broadcast unsigned halfword to vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1rh_z_p_bi:
    CLASS: 32_elem
    DESC: Load and broadcast unsigned halfword to vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1rh_z_p_bi:
    CLASS: 64_elem
    DESC: Load and broadcast unsigned halfword to vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1rob_z_p_bi:
    CLASS: sve
    DESC: Contiguous load and replicate thirty-two bytes (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld1rob_z_p_br:
    CLASS: sve
    DESC: Contiguous load and replicate thirty-two bytes (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld1rod_z_p_bi:
    CLASS: sve
    DESC: Contiguous load and replicate four doublewords (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld1rod_z_p_br:
    CLASS: sve
    DESC: Contiguous load and replicate four doublewords (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld1roh_z_p_bi:
    CLASS: sve
    DESC: Contiguous load and replicate sixteen halfwords (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld1roh_z_p_br:
    CLASS: sve
    DESC: Contiguous load and replicate sixteen halfwords (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld1row_z_p_bi:
    CLASS: sve
    DESC: Contiguous load and replicate eight words (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld1row_z_p_br:
    CLASS: sve
    DESC: Contiguous load and replicate eight words (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld1rqb_z_p_bi:
    CLASS: sve
    DESC: Contiguous load and replicate sixteen bytes (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld1rqb_z_p_br:
    CLASS: sve
    DESC: Contiguous load and replicate sixteen bytes (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld1rqd_z_p_bi:
    CLASS: sve
    DESC: Contiguous load and replicate two doublewords (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld1rqd_z_p_br:
    CLASS: sve
    DESC: Contiguous load and replicate two doublewords (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld1rqh_z_p_bi:
    CLASS: sve
    DESC: Contiguous load and replicate eight halfwords (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld1rqh_z_p_br:
    CLASS: sve
    DESC: Contiguous load and replicate eight halfwords (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld1rqw_z_p_bi:
    CLASS: sve
    DESC: Contiguous load and replicate four words (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld1rqw_z_p_br:
    CLASS: sve
    DESC: Contiguous load and replicate four words (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld1rsb_z_p_bi:
    CLASS: 16_elem
    DESC: Load and broadcast signed byte to vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1rsb_z_p_bi:
    CLASS: 32_elem
    DESC: Load and broadcast signed byte to vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1rsb_z_p_bi:
    CLASS: 64_elem
    DESC: Load and broadcast signed byte to vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1rsh_z_p_bi:
    CLASS: 32_elem
    DESC: Load and broadcast signed halfword to vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1rsh_z_p_bi:
    CLASS: 64_elem
    DESC: Load and broadcast signed halfword to vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1rsw_z_p_bi:
    CLASS: sve
    DESC: Load and broadcast signed word to vector
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld1rw_z_p_bi:
    CLASS: 32_elem
    DESC: Load and broadcast unsigned word to vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1rw_z_p_bi:
    CLASS: 64_elem
    DESC: Load and broadcast unsigned word to vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sb_z_p_ai:
    CLASS: 32_elem
    DESC: Gather load signed bytes to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sb_z_p_ai:
    CLASS: 64_elem
    DESC: Gather load signed bytes to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sb_z_p_bi:
    CLASS: 16_elem
    DESC: Contiguous load signed bytes to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sb_z_p_bi:
    CLASS: 32_elem
    DESC: Contiguous load signed bytes to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sb_z_p_bi:
    CLASS: 64_elem
    DESC: Contiguous load signed bytes to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sb_z_p_br:
    CLASS: 16_elem
    DESC: Contiguous load signed bytes to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sb_z_p_br:
    CLASS: 32_elem
    DESC: Contiguous load signed bytes to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sb_z_p_br:
    CLASS: 64_elem
    DESC: Contiguous load signed bytes to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sb_z_p_bz:
    CLASS: off_d_x32_unscaled
    DESC: Gather load signed bytes to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sb_z_p_bz:
    CLASS: off_s_x32_unscaled
    DESC: Gather load signed bytes to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sb_z_p_bz:
    CLASS: off_d_64_unscaled
    DESC: Gather load signed bytes to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sh_z_p_ai:
    CLASS: 32_elem
    DESC: Gather load signed halfwords to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sh_z_p_ai:
    CLASS: 64_elem
    DESC: Gather load signed halfwords to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sh_z_p_bi:
    CLASS: 32_elem
    DESC: Contiguous load signed halfwords to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sh_z_p_bi:
    CLASS: 64_elem
    DESC: Contiguous load signed halfwords to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sh_z_p_br:
    CLASS: 32_elem
    DESC: Contiguous load signed halfwords to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sh_z_p_br:
    CLASS: 64_elem
    DESC: Contiguous load signed halfwords to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sh_z_p_bz:
    CLASS: off_s_x32_scaled
    DESC: Gather load signed halfwords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sh_z_p_bz:
    CLASS: off_d_x32_scaled
    DESC: Gather load signed halfwords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sh_z_p_bz:
    CLASS: off_d_x32_unscaled
    DESC: Gather load signed halfwords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sh_z_p_bz:
    CLASS: off_s_x32_unscaled
    DESC: Gather load signed halfwords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sh_z_p_bz:
    CLASS: off_d_64_scaled
    DESC: Gather load signed halfwords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sh_z_p_bz:
    CLASS: off_d_64_unscaled
    DESC: Gather load signed halfwords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sw_z_p_ai:
    CLASS: sve
    DESC: Gather load signed words to vector (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld1sw_z_p_bi:
    CLASS: sve
    DESC: Contiguous load signed words to vector (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld1sw_z_p_br:
    CLASS: sve
    DESC: Contiguous load signed words to vector (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld1sw_z_p_bz:
    CLASS: off_d_x32_scaled
    DESC: Gather load signed words to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sw_z_p_bz:
    CLASS: off_d_x32_unscaled
    DESC: Gather load signed words to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sw_z_p_bz:
    CLASS: off_d_64_scaled
    DESC: Gather load signed words to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1sw_z_p_bz:
    CLASS: off_d_64_unscaled
    DESC: Gather load signed words to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1w_z_p_ai:
    CLASS: 32_elem
    DESC: Gather load unsigned words to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1w_z_p_ai:
    CLASS: 64_elem
    DESC: Gather load unsigned words to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1w_z_p_bi:
    CLASS: 32_elem
    DESC: Contiguous load unsigned words to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1w_z_p_bi:
    CLASS: 64_elem
    DESC: Contiguous load unsigned words to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1w_z_p_br:
    CLASS: 32_elem
    DESC: Contiguous load unsigned words to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1w_z_p_br:
    CLASS: 64_elem
    DESC: Contiguous load unsigned words to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1w_z_p_bz:
    CLASS: off_s_x32_scaled
    DESC: Gather load unsigned words to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1w_z_p_bz:
    CLASS: off_d_x32_scaled
    DESC: Gather load unsigned words to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1w_z_p_bz:
    CLASS: off_d_x32_unscaled
    DESC: Gather load unsigned words to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1w_z_p_bz:
    CLASS: off_s_x32_unscaled
    DESC: Gather load unsigned words to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1w_z_p_bz:
    CLASS: off_d_64_scaled
    DESC: Gather load unsigned words to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld1w_z_p_bz:
    CLASS: off_d_64_unscaled
    DESC: Gather load unsigned words to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LD2_advsimd_mult:
    CLASS: as_no_post_index
    DESC: Load multiple 2-element structures to two registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LD2_advsimd_mult:
    CLASS: as_post_index
    DESC: Load multiple 2-element structures to two registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LD2_advsimd_sngl:
    CLASS: as_no_post_index
    DESC: Load single 2-element structure to one lane of two registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LD2_advsimd_sngl:
    CLASS: as_post_index
    DESC: Load single 2-element structure to one lane of two registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld2b_z_p_bi:
    CLASS: sve
    DESC: Contiguous load two-byte structures to two vectors (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld2b_z_p_br:
    CLASS: sve
    DESC: Contiguous load two-byte structures to two vectors (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld2d_z_p_bi:
    CLASS: sve
    DESC: Contiguous load two-doubleword structures to two vectors (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld2d_z_p_br:
    CLASS: sve
    DESC: Contiguous load two-doubleword structures to two vectors (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld2h_z_p_bi:
    CLASS: sve
    DESC: Contiguous load two-halfword structures to two vectors (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld2h_z_p_br:
    CLASS: sve
    DESC: Contiguous load two-halfword structures to two vectors (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- LD2R_advsimd:
    CLASS: as_no_post_index
    DESC: Load single 2-element structure and Replicate to all lanes of two registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LD2R_advsimd:
    CLASS: as_post_index
    DESC: Load single 2-element structure and Replicate to all lanes of two registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld2w_z_p_bi:
    CLASS: sve
    DESC: Contiguous load two-word structures to two vectors (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld2w_z_p_br:
    CLASS: sve
    DESC: Contiguous load two-word structures to two vectors (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- LD3_advsimd_mult:
    CLASS: as_no_post_index
    DESC: Load multiple 3-element structures to three registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LD3_advsimd_mult:
    CLASS: as_post_index
    DESC: Load multiple 3-element structures to three registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LD3_advsimd_sngl:
    CLASS: as_no_post_index
    DESC: Load single 3-element structure to one lane of three registers)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LD3_advsimd_sngl:
    CLASS: as_post_index
    DESC: Load single 3-element structure to one lane of three registers)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld3b_z_p_bi:
    CLASS: sve
    DESC: Contiguous load three-byte structures to three vectors (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld3b_z_p_br:
    CLASS: sve
    DESC: Contiguous load three-byte structures to three vectors (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld3d_z_p_bi:
    CLASS: sve
    DESC: Contiguous load three-doubleword structures to three vectors (immediate
      index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld3d_z_p_br:
    CLASS: sve
    DESC: Contiguous load three-doubleword structures to three vectors (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld3h_z_p_bi:
    CLASS: sve
    DESC: Contiguous load three-halfword structures to three vectors (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld3h_z_p_br:
    CLASS: sve
    DESC: Contiguous load three-halfword structures to three vectors (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- LD3R_advsimd:
    CLASS: as_no_post_index
    DESC: Load single 3-element structure and Replicate to all lanes of three registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LD3R_advsimd:
    CLASS: as_post_index
    DESC: Load single 3-element structure and Replicate to all lanes of three registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld3w_z_p_bi:
    CLASS: sve
    DESC: Contiguous load three-word structures to three vectors (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld3w_z_p_br:
    CLASS: sve
    DESC: Contiguous load three-word structures to three vectors (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- LD4_advsimd_mult:
    CLASS: as_no_post_index
    DESC: Load multiple 4-element structures to four registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LD4_advsimd_mult:
    CLASS: as_post_index
    DESC: Load multiple 4-element structures to four registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LD4_advsimd_sngl:
    CLASS: as_no_post_index
    DESC: Load single 4-element structure to one lane of four registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LD4_advsimd_sngl:
    CLASS: as_post_index
    DESC: Load single 4-element structure to one lane of four registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld4b_z_p_bi:
    CLASS: sve
    DESC: Contiguous load four-byte structures to four vectors (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld4b_z_p_br:
    CLASS: sve
    DESC: Contiguous load four-byte structures to four vectors (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld4d_z_p_bi:
    CLASS: sve
    DESC: Contiguous load four-doubleword structures to four vectors (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld4d_z_p_br:
    CLASS: sve
    DESC: Contiguous load four-doubleword structures to four vectors (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld4h_z_p_bi:
    CLASS: sve
    DESC: Contiguous load four-halfword structures to four vectors (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld4h_z_p_br:
    CLASS: sve
    DESC: Contiguous load four-halfword structures to four vectors (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- LD4R_advsimd:
    CLASS: as_no_post_index
    DESC: Load single 4-element structure and Replicate to all lanes of four registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LD4R_advsimd:
    CLASS: as_post_index
    DESC: Load single 4-element structure and Replicate to all lanes of four registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ld4w_z_p_bi:
    CLASS: sve
    DESC: Contiguous load four-word structures to four vectors (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ld4w_z_p_br:
    CLASS: sve
    DESC: Contiguous load four-word structures to four vectors (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- LD64B:
    CLASS: general
    DESC: Single-copy Atomic 64-byte Load
    VARIANT: ARMv8.7
    VARIANT_FEATURE: FEAT_LS64
- LDADD:
    CLASS: general
    DESC: Atomic add on word or doubleword in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- LDADDB:
    CLASS: general
    DESC: Atomic add on byte in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- LDADDH:
    CLASS: general
    DESC: Atomic add on halfword in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- LDAPR:
    CLASS: general
    DESC: Load-Acquire RCpc Register
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_LRCPC
- LDAPRB:
    CLASS: general
    DESC: Load-Acquire RCpc Register Byte
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_LRCPC
- LDAPRH:
    CLASS: general
    DESC: Load-Acquire RCpc Register Halfword
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_LRCPC
- LDAPUR_gen:
    CLASS: base_plus_offset
    DESC: Load-Acquire RCpc Register (unscaled)
    VARIANT: ARMv8.4
    VARIANT_FEATURE: FEAT_LRCPC2
- LDAPURB:
    CLASS: base_plus_offset
    DESC: Load-Acquire RCpc Register Byte (unscaled)
    VARIANT: ARMv8.4
    VARIANT_FEATURE: FEAT_LRCPC2
- LDAPURH:
    CLASS: base_plus_offset
    DESC: Load-Acquire RCpc Register Halfword (unscaled)
    VARIANT: ARMv8.4
    VARIANT_FEATURE: FEAT_LRCPC2
- LDAPURSB:
    CLASS: base_plus_offset
    DESC: Load-Acquire RCpc Register Signed Byte (unscaled)
    VARIANT: ARMv8.4
    VARIANT_FEATURE: FEAT_LRCPC2
- LDAPURSH:
    CLASS: base_plus_offset
    DESC: Load-Acquire RCpc Register Signed Halfword (unscaled)
    VARIANT: ARMv8.4
    VARIANT_FEATURE: FEAT_LRCPC2
- LDAPURSW:
    CLASS: base_plus_offset
    DESC: Load-Acquire RCpc Register Signed Word (unscaled)
    VARIANT: ARMv8.4
    VARIANT_FEATURE: FEAT_LRCPC2
- LDAR:
    CLASS: base_register
    DESC: Load-Acquire Register
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDARB:
    CLASS: base_register
    DESC: Load-Acquire Register Byte
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDARH:
    CLASS: base_register
    DESC: Load-Acquire Register Halfword
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDAXP:
    CLASS: base_register
    DESC: Load-Acquire Exclusive Pair of Registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDAXR:
    CLASS: base_register
    DESC: Load-Acquire Exclusive Register
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDAXRB:
    CLASS: base_register
    DESC: Load-Acquire Exclusive Register Byte
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDAXRH:
    CLASS: base_register
    DESC: Load-Acquire Exclusive Register Halfword
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDCLR:
    CLASS: general
    DESC: Atomic bit clear on word or doubleword in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- LDCLRB:
    CLASS: general
    DESC: Atomic bit clear on byte in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- LDCLRH:
    CLASS: general
    DESC: Atomic bit clear on halfword in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- LDEOR:
    CLASS: general
    DESC: Atomic exclusive OR on word or doubleword in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- LDEORB:
    CLASS: general
    DESC: Atomic exclusive OR on byte in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- LDEORH:
    CLASS: general
    DESC: Atomic exclusive OR on halfword in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- ldff1b_z_p_ai:
    CLASS: 32_elem
    DESC: Gather load first-fault unsigned bytes to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1b_z_p_ai:
    CLASS: 64_elem
    DESC: Gather load first-fault unsigned bytes to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1b_z_p_br:
    CLASS: 8_elem
    DESC: Contiguous load first-fault unsigned bytes to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1b_z_p_br:
    CLASS: 16_elem
    DESC: Contiguous load first-fault unsigned bytes to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1b_z_p_br:
    CLASS: 32_elem
    DESC: Contiguous load first-fault unsigned bytes to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1b_z_p_br:
    CLASS: 64_elem
    DESC: Contiguous load first-fault unsigned bytes to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1b_z_p_bz:
    CLASS: off_d_x32_unscaled
    DESC: Gather load first-fault unsigned bytes to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1b_z_p_bz:
    CLASS: off_s_x32_unscaled
    DESC: Gather load first-fault unsigned bytes to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1b_z_p_bz:
    CLASS: off_d_64_unscaled
    DESC: Gather load first-fault unsigned bytes to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1d_z_p_ai:
    CLASS: sve
    DESC: Gather load first-fault doublewords to vector (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ldff1d_z_p_br:
    CLASS: sve
    DESC: Contiguous load first-fault doublewords to vector (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ldff1d_z_p_bz:
    CLASS: off_d_x32_scaled
    DESC: Gather load first-fault doublewords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1d_z_p_bz:
    CLASS: off_d_x32_unscaled
    DESC: Gather load first-fault doublewords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1d_z_p_bz:
    CLASS: off_d_64_scaled
    DESC: Gather load first-fault doublewords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1d_z_p_bz:
    CLASS: off_d_64_unscaled
    DESC: Gather load first-fault doublewords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1h_z_p_ai:
    CLASS: 32_elem
    DESC: Gather load first-fault unsigned halfwords to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1h_z_p_ai:
    CLASS: 64_elem
    DESC: Gather load first-fault unsigned halfwords to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1h_z_p_br:
    CLASS: 16_elem
    DESC: Contiguous load first-fault unsigned halfwords to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1h_z_p_br:
    CLASS: 32_elem
    DESC: Contiguous load first-fault unsigned halfwords to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1h_z_p_br:
    CLASS: 64_elem
    DESC: Contiguous load first-fault unsigned halfwords to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1h_z_p_bz:
    CLASS: off_s_x32_scaled
    DESC: Gather load first-fault unsigned halfwords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1h_z_p_bz:
    CLASS: off_d_x32_scaled
    DESC: Gather load first-fault unsigned halfwords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1h_z_p_bz:
    CLASS: off_d_x32_unscaled
    DESC: Gather load first-fault unsigned halfwords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1h_z_p_bz:
    CLASS: off_s_x32_unscaled
    DESC: Gather load first-fault unsigned halfwords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1h_z_p_bz:
    CLASS: off_d_64_scaled
    DESC: Gather load first-fault unsigned halfwords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1h_z_p_bz:
    CLASS: off_d_64_unscaled
    DESC: Gather load first-fault unsigned halfwords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1sb_z_p_ai:
    CLASS: 32_elem
    DESC: Gather load first-fault signed bytes to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1sb_z_p_ai:
    CLASS: 64_elem
    DESC: Gather load first-fault signed bytes to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1sb_z_p_br:
    CLASS: 16_elem
    DESC: Contiguous load first-fault signed bytes to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1sb_z_p_br:
    CLASS: 32_elem
    DESC: Contiguous load first-fault signed bytes to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1sb_z_p_br:
    CLASS: 64_elem
    DESC: Contiguous load first-fault signed bytes to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1sb_z_p_bz:
    CLASS: off_d_x32_unscaled
    DESC: Gather load first-fault signed bytes to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1sb_z_p_bz:
    CLASS: off_s_x32_unscaled
    DESC: Gather load first-fault signed bytes to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1sb_z_p_bz:
    CLASS: off_d_64_unscaled
    DESC: Gather load first-fault signed bytes to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1sh_z_p_ai:
    CLASS: 32_elem
    DESC: Gather load first-fault signed halfwords to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1sh_z_p_ai:
    CLASS: 64_elem
    DESC: Gather load first-fault signed halfwords to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1sh_z_p_br:
    CLASS: 32_elem
    DESC: Contiguous load first-fault signed halfwords to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1sh_z_p_br:
    CLASS: 64_elem
    DESC: Contiguous load first-fault signed halfwords to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1sh_z_p_bz:
    CLASS: off_s_x32_scaled
    DESC: Gather load first-fault signed halfwords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1sh_z_p_bz:
    CLASS: off_d_x32_scaled
    DESC: Gather load first-fault signed halfwords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1sh_z_p_bz:
    CLASS: off_d_x32_unscaled
    DESC: Gather load first-fault signed halfwords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1sh_z_p_bz:
    CLASS: off_s_x32_unscaled
    DESC: Gather load first-fault signed halfwords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1sh_z_p_bz:
    CLASS: off_d_64_scaled
    DESC: Gather load first-fault signed halfwords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1sh_z_p_bz:
    CLASS: off_d_64_unscaled
    DESC: Gather load first-fault signed halfwords to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1sw_z_p_ai:
    CLASS: sve
    DESC: Gather load first-fault signed words to vector (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ldff1sw_z_p_br:
    CLASS: sve
    DESC: Contiguous load first-fault signed words to vector (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ldff1sw_z_p_bz:
    CLASS: off_d_x32_scaled
    DESC: Gather load first-fault signed words to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1sw_z_p_bz:
    CLASS: off_d_x32_unscaled
    DESC: Gather load first-fault signed words to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1sw_z_p_bz:
    CLASS: off_d_64_scaled
    DESC: Gather load first-fault signed words to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1sw_z_p_bz:
    CLASS: off_d_64_unscaled
    DESC: Gather load first-fault signed words to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1w_z_p_ai:
    CLASS: 32_elem
    DESC: Gather load first-fault unsigned words to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1w_z_p_ai:
    CLASS: 64_elem
    DESC: Gather load first-fault unsigned words to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1w_z_p_br:
    CLASS: 32_elem
    DESC: Contiguous load first-fault unsigned words to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1w_z_p_br:
    CLASS: 64_elem
    DESC: Contiguous load first-fault unsigned words to vector (scalar index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1w_z_p_bz:
    CLASS: off_s_x32_scaled
    DESC: Gather load first-fault unsigned words to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1w_z_p_bz:
    CLASS: off_d_x32_scaled
    DESC: Gather load first-fault unsigned words to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1w_z_p_bz:
    CLASS: off_d_x32_unscaled
    DESC: Gather load first-fault unsigned words to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1w_z_p_bz:
    CLASS: off_s_x32_unscaled
    DESC: Gather load first-fault unsigned words to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1w_z_p_bz:
    CLASS: off_d_64_scaled
    DESC: Gather load first-fault unsigned words to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldff1w_z_p_bz:
    CLASS: off_d_64_unscaled
    DESC: Gather load first-fault unsigned words to vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDG:
    CLASS: general
    DESC: Load Allocation Tag
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_MTE
- LDGM:
    CLASS: general
    DESC: Load Tag Multiple
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_MTE2
- LDLAR:
    CLASS: base_register
    DESC: Load LOAcquire Register
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LOR
- LDLARB:
    CLASS: base_register
    DESC: Load LOAcquire Register Byte
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LOR
- LDLARH:
    CLASS: base_register
    DESC: Load LOAcquire Register Halfword
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LOR
- ldnf1b_z_p_bi:
    CLASS: 8_elem
    DESC: Contiguous load non-fault unsigned bytes to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldnf1b_z_p_bi:
    CLASS: 16_elem
    DESC: Contiguous load non-fault unsigned bytes to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldnf1b_z_p_bi:
    CLASS: 32_elem
    DESC: Contiguous load non-fault unsigned bytes to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldnf1b_z_p_bi:
    CLASS: 64_elem
    DESC: Contiguous load non-fault unsigned bytes to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldnf1d_z_p_bi:
    CLASS: sve
    DESC: Contiguous load non-fault doublewords to vector (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ldnf1h_z_p_bi:
    CLASS: 16_elem
    DESC: Contiguous load non-fault unsigned halfwords to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldnf1h_z_p_bi:
    CLASS: 32_elem
    DESC: Contiguous load non-fault unsigned halfwords to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldnf1h_z_p_bi:
    CLASS: 64_elem
    DESC: Contiguous load non-fault unsigned halfwords to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldnf1sb_z_p_bi:
    CLASS: 16_elem
    DESC: Contiguous load non-fault signed bytes to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldnf1sb_z_p_bi:
    CLASS: 32_elem
    DESC: Contiguous load non-fault signed bytes to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldnf1sb_z_p_bi:
    CLASS: 64_elem
    DESC: Contiguous load non-fault signed bytes to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldnf1sh_z_p_bi:
    CLASS: 32_elem
    DESC: Contiguous load non-fault signed halfwords to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldnf1sh_z_p_bi:
    CLASS: 64_elem
    DESC: Contiguous load non-fault signed halfwords to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldnf1sw_z_p_bi:
    CLASS: sve
    DESC: Contiguous load non-fault signed words to vector (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ldnf1w_z_p_bi:
    CLASS: 32_elem
    DESC: Contiguous load non-fault unsigned words to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldnf1w_z_p_bi:
    CLASS: 64_elem
    DESC: Contiguous load non-fault unsigned words to vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDNP_fpsimd:
    CLASS: signed_scaled_offset
    DESC: Load Pair of SIMD&FP registers, with Non-temporal hint
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDNP_gen:
    CLASS: signed_scaled_offset
    DESC: Load Pair of Registers, with non-temporal hint
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldnt1b_z_p_bi:
    CLASS: sve
    DESC: Contiguous load non-temporal bytes to vector (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ldnt1b_z_p_br:
    CLASS: sve
    DESC: Contiguous load non-temporal bytes to vector (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ldnt1d_z_p_bi:
    CLASS: sve
    DESC: Contiguous load non-temporal doublewords to vector (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ldnt1d_z_p_br:
    CLASS: sve
    DESC: Contiguous load non-temporal doublewords to vector (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ldnt1h_z_p_bi:
    CLASS: sve
    DESC: Contiguous load non-temporal halfwords to vector (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ldnt1h_z_p_br:
    CLASS: sve
    DESC: Contiguous load non-temporal halfwords to vector (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ldnt1w_z_p_bi:
    CLASS: sve
    DESC: Contiguous load non-temporal words to vector (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ldnt1w_z_p_br:
    CLASS: sve
    DESC: Contiguous load non-temporal words to vector (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- LDP_fpsimd:
    CLASS: post_indexed
    DESC: Load Pair of SIMD&FP registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDP_fpsimd:
    CLASS: pre_indexed
    DESC: Load Pair of SIMD&FP registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDP_fpsimd:
    CLASS: signed_scaled_offset
    DESC: Load Pair of SIMD&FP registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDP_gen:
    CLASS: post_indexed
    DESC: Load Pair of Registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDP_gen:
    CLASS: pre_indexed
    DESC: Load Pair of Registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDP_gen:
    CLASS: signed_scaled_offset
    DESC: Load Pair of Registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDPSW:
    CLASS: post_indexed
    DESC: Load Pair of Registers Signed Word
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDPSW:
    CLASS: pre_indexed
    DESC: Load Pair of Registers Signed Word
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDPSW:
    CLASS: signed_scaled_offset
    DESC: Load Pair of Registers Signed Word
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDR_imm_fpsimd:
    CLASS: post_indexed
    DESC: Load SIMD&FP Register (immediate offset)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDR_imm_fpsimd:
    CLASS: pre_indexed
    DESC: Load SIMD&FP Register (immediate offset)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDR_imm_fpsimd:
    CLASS: unsigned_scaled_offset
    DESC: Load SIMD&FP Register (immediate offset)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDR_imm_gen:
    CLASS: post_indexed
    DESC: Load Register (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDR_imm_gen:
    CLASS: pre_indexed
    DESC: Load Register (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDR_imm_gen:
    CLASS: unsigned_scaled_offset
    DESC: Load Register (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDR_lit_fpsimd:
    CLASS: literal
    DESC: Load SIMD&FP Register (PC-relative literal)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDR_lit_gen:
    CLASS: literal
    DESC: Load Register (literal)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldr_p_bi:
    CLASS: sve
    DESC: Load predicate register
    VARIANT: SVE
    VARIANT_FEATURE: None
- LDR_reg_fpsimd:
    CLASS: fpsimd
    DESC: Load SIMD&FP Register (register offset)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDR_reg_gen:
    CLASS: general
    DESC: Load Register (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ldr_z_bi:
    CLASS: sve
    DESC: Load vector register
    VARIANT: SVE
    VARIANT_FEATURE: None
- LDRA:
    CLASS: base_plus_offset
    DESC: Load Register, with pointer authentication
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_PAuth
- LDRB_imm:
    CLASS: post_indexed
    DESC: Load Register Byte (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDRB_imm:
    CLASS: pre_indexed
    DESC: Load Register Byte (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDRB_imm:
    CLASS: unsigned_scaled_offset
    DESC: Load Register Byte (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDRB_reg:
    CLASS: '32'
    DESC: Load Register Byte (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDRH_imm:
    CLASS: post_indexed
    DESC: Load Register Halfword (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDRH_imm:
    CLASS: pre_indexed
    DESC: Load Register Halfword (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDRH_imm:
    CLASS: unsigned_scaled_offset
    DESC: Load Register Halfword (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDRH_reg:
    CLASS: '32'
    DESC: Load Register Halfword (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDRSB_imm:
    CLASS: post_indexed
    DESC: Load Register Signed Byte (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDRSB_imm:
    CLASS: pre_indexed
    DESC: Load Register Signed Byte (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDRSB_imm:
    CLASS: unsigned_scaled_offset
    DESC: Load Register Signed Byte (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDRSB_reg:
    CLASS: general
    DESC: Load Register Signed Byte (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDRSH_imm:
    CLASS: post_indexed
    DESC: Load Register Signed Halfword (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDRSH_imm:
    CLASS: pre_indexed
    DESC: Load Register Signed Halfword (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDRSH_imm:
    CLASS: unsigned_scaled_offset
    DESC: Load Register Signed Halfword (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDRSH_reg:
    CLASS: general
    DESC: Load Register Signed Halfword (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDRSW_imm:
    CLASS: post_indexed
    DESC: Load Register Signed Word (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDRSW_imm:
    CLASS: pre_indexed
    DESC: Load Register Signed Word (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDRSW_imm:
    CLASS: unsigned_scaled_offset
    DESC: Load Register Signed Word (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDRSW_lit:
    CLASS: literal
    DESC: Load Register Signed Word (literal)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDRSW_reg:
    CLASS: '64'
    DESC: Load Register Signed Word (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDSET:
    CLASS: general
    DESC: Atomic bit set on word or doubleword in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- LDSETB:
    CLASS: general
    DESC: Atomic bit set on byte in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- LDSETH:
    CLASS: general
    DESC: Atomic bit set on halfword in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- LDSMAX:
    CLASS: general
    DESC: Atomic signed maximum on word or doubleword in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- LDSMAXB:
    CLASS: general
    DESC: Atomic signed maximum on byte in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- LDSMAXH:
    CLASS: general
    DESC: Atomic signed maximum on halfword in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- LDSMIN:
    CLASS: general
    DESC: Atomic signed minimum on word or doubleword in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- LDSMINB:
    CLASS: general
    DESC: Atomic signed minimum on byte in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- LDSMINH:
    CLASS: general
    DESC: Atomic signed minimum on halfword in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- LDTR:
    CLASS: base_plus_offset
    DESC: Load Register (unprivileged)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDTRB:
    CLASS: base_plus_offset
    DESC: Load Register Byte (unprivileged)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDTRH:
    CLASS: base_plus_offset
    DESC: Load Register Halfword (unprivileged)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDTRSB:
    CLASS: base_plus_offset
    DESC: Load Register Signed Byte (unprivileged)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDTRSH:
    CLASS: base_plus_offset
    DESC: Load Register Signed Halfword (unprivileged)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDTRSW:
    CLASS: base_plus_offset
    DESC: Load Register Signed Word (unprivileged)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDUMAX:
    CLASS: general
    DESC: Atomic unsigned maximum on word or doubleword in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- LDUMAXB:
    CLASS: general
    DESC: Atomic unsigned maximum on byte in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- LDUMAXH:
    CLASS: general
    DESC: Atomic unsigned maximum on halfword in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- LDUMIN:
    CLASS: general
    DESC: Atomic unsigned minimum on word or doubleword in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- LDUMINB:
    CLASS: general
    DESC: Atomic unsigned minimum on byte in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- LDUMINH:
    CLASS: general
    DESC: Atomic unsigned minimum on halfword in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- LDUR_fpsimd:
    CLASS: base_plus_offset
    DESC: Load SIMD&FP Register (unscaled offset)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDUR_gen:
    CLASS: base_plus_offset
    DESC: Load Register (unscaled)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDURB:
    CLASS: base_plus_offset
    DESC: Load Register Byte (unscaled)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDURH:
    CLASS: base_plus_offset
    DESC: Load Register Halfword (unscaled)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDURSB:
    CLASS: base_plus_offset
    DESC: Load Register Signed Byte (unscaled)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDURSH:
    CLASS: base_plus_offset
    DESC: Load Register Signed Halfword (unscaled)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDURSW:
    CLASS: base_plus_offset
    DESC: Load Register Signed Word (unscaled)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDXP:
    CLASS: base_register
    DESC: Load Exclusive Pair of Registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDXR:
    CLASS: base_register
    DESC: Load Exclusive Register
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDXRB:
    CLASS: base_register
    DESC: Load Exclusive Register Byte
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LDXRH:
    CLASS: base_register
    DESC: Load Exclusive Register Halfword
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LSL_LSLV:
    CLASS: general
    DESC: Logical Shift Left (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LSL_UBFM:
    CLASS: zero_fill
    DESC: Logical Shift Left (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- lsl_z_p_zi:
    CLASS: sve
    DESC: Logical shift left by immediate (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- lsl_z_p_zw:
    CLASS: sve
    DESC: Logical shift left by 64-bit wide elements (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- lsl_z_p_zz:
    CLASS: sve
    DESC: Logical shift left by vector (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- lsl_z_zi:
    CLASS: sve
    DESC: Logical shift left by immediate (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- lsl_z_zw:
    CLASS: sve
    DESC: Logical shift left by 64-bit wide elements (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- lslr_z_p_zz:
    CLASS: sve
    DESC: Reversed logical shift left by vector (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- LSLV:
    CLASS: general
    DESC: Logical Shift Left Variable
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LSR_LSRV:
    CLASS: general
    DESC: Logical Shift Right (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- LSR_UBFM:
    CLASS: zero_fill
    DESC: Logical Shift Right (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- lsr_z_p_zi:
    CLASS: sve
    DESC: Logical shift right by immediate (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- lsr_z_p_zw:
    CLASS: sve
    DESC: Logical shift right by 64-bit wide elements (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- lsr_z_p_zz:
    CLASS: sve
    DESC: Logical shift right by vector (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- lsr_z_zi:
    CLASS: sve
    DESC: Logical shift right by immediate (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- lsr_z_zw:
    CLASS: sve
    DESC: Logical shift right by 64-bit wide elements (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- lsrr_z_p_zz:
    CLASS: sve
    DESC: Reversed logical shift right by vector (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- LSRV:
    CLASS: general
    DESC: Logical Shift Right Variable
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- mad_z_p_zzz:
    CLASS: sve
    DESC: Multiply-add vectors (predicated), writing multiplicand [Zdn = Za + Zdn
      * Zm]
    VARIANT: SVE
    VARIANT_FEATURE: None
- MADD:
    CLASS: general
    DESC: Multiply-Add
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MLA_advsimd_elt:
    CLASS: 2reg_element
    DESC: Multiply-Add to accumulator (vector, by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MLA_advsimd_vec:
    CLASS: 3reg_same
    DESC: Multiply-Add to accumulator (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- mla_z_p_zzz:
    CLASS: sve
    DESC: Multiply-add vectors (predicated), writing addend [Zda = Zda + Zn * Zm]
    VARIANT: SVE
    VARIANT_FEATURE: None
- MLS_advsimd_elt:
    CLASS: 2reg_element
    DESC: Multiply-Subtract from accumulator (vector, by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MLS_advsimd_vec:
    CLASS: 3reg_same
    DESC: Multiply-Subtract from accumulator (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- mls_z_p_zzz:
    CLASS: sve
    DESC: Multiply-subtract vectors (predicated), writing addend [Zda = Zda - Zn *
      Zm]
    VARIANT: SVE
    VARIANT_FEATURE: None
- MNEG_MSUB:
    CLASS: general
    DESC: Multiply-Negate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MOV_ADD_addsub_imm:
    CLASS: no_s
    DESC: Move between register and stack pointer
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MOV_and_p_p_pp:
    CLASS: no_s
    DESC: Move predicates (zeroing)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MOV_cpy_z_o_i:
    CLASS: sve
    DESC: Move signed integer immediate to vector elements (zeroing)
    VARIANT: SVE
    VARIANT_FEATURE: None
- MOV_cpy_z_p_i:
    CLASS: sve
    DESC: Move signed integer immediate to vector elements (merging)
    VARIANT: SVE
    VARIANT_FEATURE: None
- MOV_cpy_z_p_r:
    CLASS: sve
    DESC: Move general-purpose register to vector elements (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- MOV_cpy_z_p_v:
    CLASS: sve
    DESC: Move SIMD&FP scalar register to vector elements (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- MOV_DUP_advsimd_elt:
    CLASS: scalar_from_element
    DESC: Move vector element to scalar
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MOV_dup_z_i:
    CLASS: sve
    DESC: Move signed immediate to vector elements (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- MOV_dup_z_r:
    CLASS: sve
    DESC: Move general-purpose register to vector elements (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- MOV_dup_z_zi:
    CLASS: sve
    DESC: Move indexed element or SIMD&FP scalar to vector (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- MOV_dupm_z_i:
    CLASS: sve
    DESC: Move logical bitmask immediate to vector (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- MOV_INS_advsimd_elt:
    CLASS: advsimd
    DESC: Move vector element to another vector element
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MOV_INS_advsimd_gen:
    CLASS: advsimd
    DESC: Move general-purpose register to a vector element
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MOV_MOVN:
    CLASS: imm18_packed
    DESC: Move (inverted wide immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MOV_MOVZ:
    CLASS: imm18_packed
    DESC: Move (wide immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MOV_ORR_advsimd_reg:
    CLASS: 3reg_same
    DESC: Move vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MOV_ORR_log_imm:
    CLASS: no_s
    DESC: Move (bitmask immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MOV_ORR_log_shift:
    CLASS: no_s
    DESC: Move (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MOV_orr_p_p_pp:
    CLASS: no_s
    DESC: Move predicate (unpredicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MOV_orr_z_zz:
    CLASS: sve
    DESC: Move vector register (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- MOV_sel_p_p_pp:
    CLASS: sve
    DESC: Move predicates (merging)
    VARIANT: SVE
    VARIANT_FEATURE: None
- MOV_sel_z_p_zz:
    CLASS: sve
    DESC: Move vector elements (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- MOV_UMOV_advsimd:
    CLASS: advsimd
    DESC: Move vector element to general-purpose register
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MOVI_advsimd:
    CLASS: advsimd
    DESC: Move Immediate (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MOVK:
    CLASS: imm18_packed
    DESC: Move wide with keep
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MOVN:
    CLASS: imm18_packed
    DESC: Move wide with NOT
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- movprfx_z_p_z:
    CLASS: sve
    DESC: Move prefix (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- movprfx_z_z:
    CLASS: sve
    DESC: Move prefix (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- MOVS_and_p_p_pp:
    CLASS: s
    DESC: Move predicates (zeroing), setting the condition flags
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MOVS_orr_p_p_pp:
    CLASS: s
    DESC: Move predicate (unpredicated), setting the condition flags
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MOVZ:
    CLASS: imm18_packed
    DESC: Move wide with zero
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MRS:
    CLASS: system
    DESC: Move System Register
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- msb_z_p_zzz:
    CLASS: sve
    DESC: Multiply-subtract vectors (predicated), writing multiplicand [Zdn = Za -
      Zdn * Zm]
    VARIANT: SVE
    VARIANT_FEATURE: None
- MSR_imm:
    CLASS: system
    DESC: Move immediate value to Special Register
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MSR_reg:
    CLASS: system
    DESC: Move general-purpose register to System Register
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MSUB:
    CLASS: general
    DESC: Multiply-Subtract
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MUL_advsimd_elt:
    CLASS: 2reg_element
    DESC: Multiply (vector, by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MUL_advsimd_vec:
    CLASS: 3reg_same
    DESC: Multiply (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MUL_MADD:
    CLASS: general
    DESC: Multiply
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- mul_z_p_zz:
    CLASS: sve
    DESC: Multiply vectors (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- mul_z_zi:
    CLASS: sve
    DESC: Multiply by immediate (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- MVN_NOT_advsimd:
    CLASS: simd
    DESC: Bitwise NOT (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MVN_ORN_log_shift:
    CLASS: no_s
    DESC: Bitwise NOT
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- MVNI_advsimd:
    CLASS: advsimd
    DESC: Move inverted Immediate (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- nand_p_p_pp:
    CLASS: no_s
    DESC: Bitwise NAND predicates
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- nand_p_p_pp:
    CLASS: s
    DESC: Bitwise NAND predicates
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- NEG_advsimd:
    CLASS: sisd
    DESC: Negate (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- NEG_advsimd:
    CLASS: simd
    DESC: Negate (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- NEG_SUB_addsub_shift:
    CLASS: no_s
    DESC: Negate (shifted register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- neg_z_p_z:
    CLASS: sve
    DESC: Negate (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- NEGS_SUBS_addsub_shift:
    CLASS: s
    DESC: Negate, setting flags
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- NGC_SBC:
    CLASS: no_s
    DESC: Negate with Carry
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- NGCS_SBCS:
    CLASS: s
    DESC: Negate with Carry, setting flags
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- NOP:
    CLASS: system
    DESC: No Operation
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- nor_p_p_pp:
    CLASS: no_s
    DESC: Bitwise NOR predicates
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- nor_p_p_pp:
    CLASS: s
    DESC: Bitwise NOR predicates
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- NOT_advsimd:
    CLASS: simd
    DESC: Bitwise NOT (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- NOT_eor_p_p_pp:
    CLASS: no_s
    DESC: Bitwise invert predicate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- not_z_p_z:
    CLASS: sve
    DESC: Bitwise invert vector (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- NOTS_eor_p_p_pp:
    CLASS: s
    DESC: Bitwise invert predicate, setting the condition flags
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ORN_advsimd:
    CLASS: 3reg_same
    DESC: Bitwise inclusive OR NOT (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ORN_log_shift:
    CLASS: no_s
    DESC: Bitwise OR NOT (shifted register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ORN_orr_z_zi:
    CLASS: sve
    DESC: Bitwise inclusive OR with inverted immediate (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- orn_p_p_pp:
    CLASS: no_s
    DESC: Bitwise inclusive OR inverted predicate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- orn_p_p_pp:
    CLASS: s
    DESC: Bitwise inclusive OR inverted predicate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ORR_advsimd_imm:
    CLASS: shifted_immediate
    DESC: Bitwise inclusive OR (vector, immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ORR_advsimd_reg:
    CLASS: 3reg_same
    DESC: Bitwise inclusive OR (vector, register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ORR_log_imm:
    CLASS: no_s
    DESC: Bitwise OR (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ORR_log_shift:
    CLASS: no_s
    DESC: Bitwise OR (shifted register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- orr_p_p_pp:
    CLASS: no_s
    DESC: Bitwise inclusive OR predicate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- orr_p_p_pp:
    CLASS: s
    DESC: Bitwise inclusive OR predicate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- orr_z_p_zz:
    CLASS: sve
    DESC: Bitwise inclusive OR vectors (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- orr_z_zi:
    CLASS: sve
    DESC: Bitwise inclusive OR with immediate (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- orr_z_zz:
    CLASS: sve
    DESC: Bitwise inclusive OR vectors (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- orv_r_p_z:
    CLASS: sve
    DESC: Bitwise inclusive OR reduction to scalar
    VARIANT: SVE
    VARIANT_FEATURE: None
- PACDA:
    CLASS: general
    DESC: Pointer Authentication Code for Data address, using key A
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_PAuth
- PACDB:
    CLASS: general
    DESC: Pointer Authentication Code for Data address, using key B
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_PAuth
- PACGA:
    CLASS: general
    DESC: Pointer Authentication Code, using Generic key
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_PAuth
- PACIA:
    CLASS: general
    DESC: Pointer Authentication Code for Instruction address, using key A
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_PAuth
- PACIA:
    CLASS: system
    DESC: Pointer Authentication Code for Instruction address, using key A
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_PAuth
- PACIB:
    CLASS: general
    DESC: Pointer Authentication Code for Instruction address, using key B
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_PAuth
- PACIB:
    CLASS: system
    DESC: Pointer Authentication Code for Instruction address, using key B
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_PAuth
- pfalse_p:
    CLASS: sve
    DESC: Set all predicate elements to false
    VARIANT: SVE
    VARIANT_FEATURE: None
- pfirst_p_p_p:
    CLASS: sve
    DESC: Set the first active predicate element to true
    VARIANT: SVE
    VARIANT_FEATURE: None
- PMUL_advsimd:
    CLASS: 3reg_same
    DESC: Polynomial Multiply
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- PMULL_advsimd:
    CLASS: 3reg_diff
    DESC: Polynomial Multiply Long
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- pnext_p_p_p:
    CLASS: sve
    DESC: Find next active predicate
    VARIANT: SVE
    VARIANT_FEATURE: None
- prfb_i_p_ai:
    CLASS: 32_elem
    DESC: Gather prefetch bytes (vector plus immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- prfb_i_p_ai:
    CLASS: 64_elem
    DESC: Gather prefetch bytes (vector plus immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- prfb_i_p_bi:
    CLASS: sve
    DESC: Contiguous prefetch bytes (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- prfb_i_p_br:
    CLASS: sve
    DESC: Contiguous prefetch bytes (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- prfb_i_p_bz:
    CLASS: off_s_x32_scaled
    DESC: Gather prefetch bytes (scalar plus vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- prfb_i_p_bz:
    CLASS: off_d_x32_scaled
    DESC: Gather prefetch bytes (scalar plus vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- prfb_i_p_bz:
    CLASS: off_d_64_scaled
    DESC: Gather prefetch bytes (scalar plus vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- prfd_i_p_ai:
    CLASS: 32_elem
    DESC: Gather prefetch doublewords (vector plus immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- prfd_i_p_ai:
    CLASS: 64_elem
    DESC: Gather prefetch doublewords (vector plus immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- prfd_i_p_bi:
    CLASS: sve
    DESC: Contiguous prefetch doublewords (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- prfd_i_p_br:
    CLASS: sve
    DESC: Contiguous prefetch doublewords (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- prfd_i_p_bz:
    CLASS: off_s_x32_scaled
    DESC: Gather prefetch doublewords (scalar plus vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- prfd_i_p_bz:
    CLASS: off_d_x32_scaled
    DESC: Gather prefetch doublewords (scalar plus vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- prfd_i_p_bz:
    CLASS: off_d_64_scaled
    DESC: Gather prefetch doublewords (scalar plus vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- prfh_i_p_ai:
    CLASS: 32_elem
    DESC: Gather prefetch halfwords (vector plus immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- prfh_i_p_ai:
    CLASS: 64_elem
    DESC: Gather prefetch halfwords (vector plus immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- prfh_i_p_bi:
    CLASS: sve
    DESC: Contiguous prefetch halfwords (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- prfh_i_p_br:
    CLASS: sve
    DESC: Contiguous prefetch halfwords (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- prfh_i_p_bz:
    CLASS: off_s_x32_scaled
    DESC: Gather prefetch halfwords (scalar plus vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- prfh_i_p_bz:
    CLASS: off_d_x32_scaled
    DESC: Gather prefetch halfwords (scalar plus vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- prfh_i_p_bz:
    CLASS: off_d_64_scaled
    DESC: Gather prefetch halfwords (scalar plus vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- PRFM_imm:
    CLASS: unsigned_scaled_offset
    DESC: Prefetch Memory (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- PRFM_lit:
    CLASS: literal
    DESC: Prefetch Memory (literal)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- PRFM_reg:
    CLASS: general
    DESC: Prefetch Memory (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- PRFUM:
    CLASS: base_plus_offset
    DESC: Prefetch Memory (unscaled offset)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- prfw_i_p_ai:
    CLASS: 32_elem
    DESC: Gather prefetch words (vector plus immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- prfw_i_p_ai:
    CLASS: 64_elem
    DESC: Gather prefetch words (vector plus immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- prfw_i_p_bi:
    CLASS: sve
    DESC: Contiguous prefetch words (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- prfw_i_p_br:
    CLASS: sve
    DESC: Contiguous prefetch words (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- prfw_i_p_bz:
    CLASS: off_s_x32_scaled
    DESC: Gather prefetch words (scalar plus vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- prfw_i_p_bz:
    CLASS: off_d_x32_scaled
    DESC: Gather prefetch words (scalar plus vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- prfw_i_p_bz:
    CLASS: off_d_64_scaled
    DESC: Gather prefetch words (scalar plus vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- PSB:
    CLASS: system
    DESC: Profiling Synchronization Barrier
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_SPE
- PSSBB:
    CLASS: system
    DESC: Physical Speculative Store Bypass Barrier
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ptest_p_p:
    CLASS: sve
    DESC: Set condition flags for predicate
    VARIANT: SVE
    VARIANT_FEATURE: None
- ptrue_p_s:
    CLASS: no_s
    DESC: Initialise predicate from named constraint
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ptrue_p_s:
    CLASS: s
    DESC: Initialise predicate from named constraint
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- punpkhi_p_p:
    CLASS: sve_high_half
    DESC: Unpack and widen half of predicate
    VARIANT: SVE
    VARIANT_FEATURE: None
- punpkhi_p_p:
    CLASS: sve_low_half
    DESC: Unpack and widen half of predicate
    VARIANT: SVE
    VARIANT_FEATURE: None
- RADDHN_advsimd:
    CLASS: 3reg_diff
    DESC: Rounding Add returning High Narrow
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- RAX1_advsimd:
    CLASS: advsimd
    DESC: Rotate and Exclusive OR
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_SHA3
- RBIT_advsimd:
    CLASS: simd
    DESC: Reverse Bit order (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- RBIT_int:
    CLASS: general
    DESC: Reverse Bits
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- rbit_z_p_z:
    CLASS: sve
    DESC: Reverse bits (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- rdffr_p_f:
    CLASS: sve
    DESC: Read the first-fault register
    VARIANT: SVE
    VARIANT_FEATURE: None
- rdffr_p_p_f:
    CLASS: no_s
    DESC: Return predicate of succesfully loaded elements
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- rdffr_p_p_f:
    CLASS: s
    DESC: Return predicate of succesfully loaded elements
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- rdvl_r_i:
    CLASS: sve
    DESC: Read multiple of vector register size to scalar register
    VARIANT: SVE
    VARIANT_FEATURE: None
- RET:
    CLASS: general
    DESC: Return from subroutine
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- RETA:
    CLASS: general
    DESC: Return from subroutine, with pointer authentication
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_PAuth
- REV:
    CLASS: general
    DESC: Reverse Bytes
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- REV16_advsimd:
    CLASS: simd
    DESC: Reverse elements in 16-bit halfwords (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- REV16_int:
    CLASS: general
    DESC: Reverse bytes in 16-bit halfwords
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- REV32_advsimd:
    CLASS: simd
    DESC: Reverse elements in 32-bit words (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- REV32_int:
    CLASS: '64'
    DESC: Reverse bytes in 32-bit words
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- REV64_advsimd:
    CLASS: simd
    DESC: Reverse elements in 64-bit doublewords (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- REV64_REV:
    CLASS: general
    DESC: Reverse Bytes
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- rev_p_p:
    CLASS: sve
    DESC: Reverse all elements in a predicate
    VARIANT: SVE
    VARIANT_FEATURE: None
- rev_z_z:
    CLASS: sve
    DESC: Reverse all elements in a vector (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- revb_z_z:
    CLASS: esize_byte
    DESC: Reverse bytes / halfwords / words within elements (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- revb_z_z:
    CLASS: esize_halfword
    DESC: Reverse bytes / halfwords / words within elements (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- revb_z_z:
    CLASS: esize_word
    DESC: Reverse bytes / halfwords / words within elements (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- RMIF:
    CLASS: general
    DESC: Rotate, Mask Insert Flags
    VARIANT: ARMv8.4
    VARIANT_FEATURE: FEAT_FlagM
- ROR_EXTR:
    CLASS: general
    DESC: Rotate right (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ROR_RORV:
    CLASS: general
    DESC: Rotate Right (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- RORV:
    CLASS: general
    DESC: Rotate Right Variable
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- RSHRN_advsimd:
    CLASS: simd
    DESC: Rounding Shift Right Narrow (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- RSUBHN_advsimd:
    CLASS: 3reg_diff
    DESC: Rounding Subtract returning High Narrow
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SABA_advsimd:
    CLASS: 3reg_same
    DESC: Signed Absolute difference and Accumulate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SABAL_advsimd:
    CLASS: 3reg_diff
    DESC: Signed Absolute difference and Accumulate Long
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SABD_advsimd:
    CLASS: 3reg_same
    DESC: Signed Absolute Difference
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sabd_z_p_zz:
    CLASS: sve
    DESC: Signed absolute difference (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- SABDL_advsimd:
    CLASS: 3reg_diff
    DESC: Signed Absolute Difference Long
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SADALP_advsimd:
    CLASS: simd
    DESC: Signed Add and Accumulate Long Pairwise
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SADDL_advsimd:
    CLASS: 3reg_diff
    DESC: Signed Add Long (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SADDLP_advsimd:
    CLASS: simd
    DESC: Signed Add Long Pairwise
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SADDLV_advsimd:
    CLASS: advsimd
    DESC: Signed Add Long across Vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- saddv_r_p_z:
    CLASS: sve
    DESC: Signed add reduction to scalar
    VARIANT: SVE
    VARIANT_FEATURE: None
- SADDW_advsimd:
    CLASS: 3reg_diff
    DESC: Signed Add Wide
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SB:
    CLASS: system
    DESC: Speculation Barrier
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SBC:
    CLASS: no_s
    DESC: Subtract with Carry
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SBCS:
    CLASS: s
    DESC: Subtract with Carry, setting flags
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SBFIZ_SBFM:
    CLASS: signed_fill
    DESC: Signed Bitfield Insert in Zero
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SBFM:
    CLASS: signed_fill
    DESC: Signed Bitfield Move
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SBFX_SBFM:
    CLASS: signed_fill
    DESC: Signed Bitfield Extract
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SCVTF_advsimd_fix:
    CLASS: sisd
    DESC: Signed fixed-point Convert to Floating-point (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SCVTF_advsimd_fix:
    CLASS: simd
    DESC: Signed fixed-point Convert to Floating-point (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SCVTF_advsimd_int:
    CLASS: sisd_half
    DESC: Signed integer Convert to Floating-point (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- SCVTF_advsimd_int:
    CLASS: sisd_single_and_double
    DESC: Signed integer Convert to Floating-point (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SCVTF_advsimd_int:
    CLASS: simd_half
    DESC: Signed integer Convert to Floating-point (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- SCVTF_advsimd_int:
    CLASS: simd_single_and_double
    DESC: Signed integer Convert to Floating-point (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SCVTF_float_fix:
    CLASS: float
    DESC: Signed fixed-point Convert to Floating-point (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- SCVTF_float_fix:
    CLASS: float
    DESC: Signed fixed-point Convert to Floating-point (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- SCVTF_float_int:
    CLASS: float
    DESC: Signed integer Convert to Floating-point (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- SCVTF_float_int:
    CLASS: float
    DESC: Signed integer Convert to Floating-point (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- scvtf_z_p_z:
    CLASS: 16_to_half
    DESC: Signed integer convert to floating-point (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- scvtf_z_p_z:
    CLASS: 32_to_half
    DESC: Signed integer convert to floating-point (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- scvtf_z_p_z:
    CLASS: 32_to_single
    DESC: Signed integer convert to floating-point (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- scvtf_z_p_z:
    CLASS: 32_to_double
    DESC: Signed integer convert to floating-point (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- scvtf_z_p_z:
    CLASS: 64_to_half
    DESC: Signed integer convert to floating-point (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- scvtf_z_p_z:
    CLASS: 64_to_single
    DESC: Signed integer convert to floating-point (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- scvtf_z_p_z:
    CLASS: 64_to_double
    DESC: Signed integer convert to floating-point (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SDIV:
    CLASS: general
    DESC: Signed Divide
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sdiv_z_p_zz:
    CLASS: sve
    DESC: Signed divide (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- sdivr_z_p_zz:
    CLASS: sve
    DESC: Signed reversed divide (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- SDOT_advsimd_elt:
    CLASS: 2reg_element
    DESC: Dot Product signed arithmetic (vector, by element)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_DotProd
- SDOT_advsimd_vec:
    CLASS: simd
    DESC: Dot Product signed arithmetic (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_DotProd
- sdot_z_zzz:
    CLASS: sve
    DESC: Signed integer dot product
    VARIANT: SVE
    VARIANT_FEATURE: None
- sdot_z_zzzi:
    CLASS: of_words
    DESC: Signed integer indexed dot product
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sdot_z_zzzi:
    CLASS: of_doublewords
    DESC: Signed integer indexed dot product
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sel_p_p_pp:
    CLASS: sve
    DESC: Conditionally select elements from two predicates
    VARIANT: SVE
    VARIANT_FEATURE: None
- sel_z_p_zz:
    CLASS: sve
    DESC: Conditionally select elements from two vectors
    VARIANT: SVE
    VARIANT_FEATURE: None
- SETF:
    CLASS: general
    DESC: Evaluation of 8 or 16 bit flag values
    VARIANT: ARMv8.4
    VARIANT_FEATURE: FEAT_FlagM
- setffr_f:
    CLASS: sve
    DESC: Initialise the first-fault register to all true
    VARIANT: SVE
    VARIANT_FEATURE: None
- SEV:
    CLASS: system
    DESC: Send Event
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SEVL:
    CLASS: system
    DESC: Send Event Local
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SHA1C_advsimd:
    CLASS: advsimd
    DESC: SHA1 hash update (choose)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SHA1H_advsimd:
    CLASS: advsimd
    DESC: SHA1 fixed rotate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SHA1M_advsimd:
    CLASS: advsimd
    DESC: SHA1 hash update (majority)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SHA1P_advsimd:
    CLASS: advsimd
    DESC: SHA1 hash update (parity)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SHA1SU0_advsimd:
    CLASS: advsimd
    DESC: SHA1 schedule update 0
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SHA1SU1_advsimd:
    CLASS: advsimd
    DESC: SHA1 schedule update 1
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SHA256H2_advsimd:
    CLASS: advsimd
    DESC: SHA256 hash update (part 2)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SHA256H_advsimd:
    CLASS: advsimd
    DESC: SHA256 hash update (part 1)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SHA256SU0_advsimd:
    CLASS: advsimd
    DESC: SHA256 schedule update 0
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SHA256SU1_advsimd:
    CLASS: advsimd
    DESC: SHA256 schedule update 1
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SHA512H2_advsimd:
    CLASS: advsimd
    DESC: SHA512 Hash update part 2
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_SHA512
- SHA512H_advsimd:
    CLASS: advsimd
    DESC: SHA512 Hash update part 1
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_SHA512
- SHA512SU0_advsimd:
    CLASS: advsimd
    DESC: SHA512 Schedule Update 0
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_SHA512
- SHA512SU1_advsimd:
    CLASS: advsimd
    DESC: SHA512 Schedule Update 1
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_SHA512
- SHADD_advsimd:
    CLASS: 3reg_same
    DESC: Signed Halving Add
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SHL_advsimd:
    CLASS: sisd
    DESC: Shift Left (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SHL_advsimd:
    CLASS: simd
    DESC: Shift Left (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SHLL_advsimd:
    CLASS: simd
    DESC: Shift Left Long (by element size)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SHRN_advsimd:
    CLASS: simd
    DESC: Shift Right Narrow (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SHSUB_advsimd:
    CLASS: 3reg_same
    DESC: Signed Halving Subtract
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SLI_advsimd:
    CLASS: sisd
    DESC: Shift Left and Insert (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SLI_advsimd:
    CLASS: simd
    DESC: Shift Left and Insert (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SM3PARTW1_advsimd:
    CLASS: advsimd
    DESC: SM3PARTW1
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_SM3
- SM3PARTW2_advsimd:
    CLASS: advsimd
    DESC: SM3PARTW2
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_SM3
- SM3SS1_advsimd:
    CLASS: advsimd
    DESC: SM3SS1
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_SM3
- SM3TT1A_advsimd:
    CLASS: advsimd
    DESC: SM3TT1A
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_SM3
- SM3TT1B_advsimd:
    CLASS: advsimd
    DESC: SM3TT1B
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_SM3
- SM3TT2A_advsimd:
    CLASS: advsimd
    DESC: SM3TT2A
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_SM3
- SM3TT2B_advsimd:
    CLASS: advsimd
    DESC: SM3TT2B
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_SM3
- SM4E_advsimd:
    CLASS: advsimd
    DESC: SM4 Encode
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_SM4
- SM4EKEY_advsimd:
    CLASS: advsimd
    DESC: SM4 Key
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_SM4
- SMADDL:
    CLASS: '64'
    DESC: Signed Multiply-Add Long
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SMAX_advsimd:
    CLASS: 3reg_same
    DESC: Signed Maximum (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- smax_z_p_zz:
    CLASS: sve
    DESC: Signed maximum vectors (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- smax_z_zi:
    CLASS: sve
    DESC: Signed maximum with immediate (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- SMAXP_advsimd:
    CLASS: 3reg_same
    DESC: Signed Maximum Pairwise
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SMAXV_advsimd:
    CLASS: advsimd
    DESC: Signed Maximum across Vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- smaxv_r_p_z:
    CLASS: sve
    DESC: Signed maximum reduction to scalar
    VARIANT: SVE
    VARIANT_FEATURE: None
- SMC:
    CLASS: system
    DESC: Secure Monitor Call
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SMIN_advsimd:
    CLASS: 3reg_same
    DESC: Signed Minimum (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- smin_z_p_zz:
    CLASS: sve
    DESC: Signed minimum vectors (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- smin_z_zi:
    CLASS: sve
    DESC: Signed minimum with immediate (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- SMINP_advsimd:
    CLASS: 3reg_same
    DESC: Signed Minimum Pairwise
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SMINV_advsimd:
    CLASS: advsimd
    DESC: Signed Minimum across Vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sminv_r_p_z:
    CLASS: sve
    DESC: Signed minimum reduction to scalar
    VARIANT: SVE
    VARIANT_FEATURE: None
- SMLAL_advsimd_elt:
    CLASS: 2reg_element
    DESC: Signed Multiply-Add Long (vector, by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SMLAL_advsimd_vec:
    CLASS: 3reg_diff
    DESC: Signed Multiply-Add Long (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SMLSL_advsimd_elt:
    CLASS: 2reg_element
    DESC: Signed Multiply-Subtract Long (vector, by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SMLSL_advsimd_vec:
    CLASS: 3reg_diff
    DESC: Signed Multiply-Subtract Long (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SMMLA_advsimd_vec:
    CLASS: simd
    DESC: Signed 8-bit integer matrix multiply-accumulate (vector)
    VARIANT: ARMv8.6
    VARIANT_FEATURE: FEAT_I8MM
- smmla_z_zzz:
    CLASS: sve
    DESC: Signed integer matrix multiply-accumulate
    VARIANT: SVE
    VARIANT_FEATURE: None
- SMNEGL_SMSUBL:
    CLASS: '64'
    DESC: Signed Multiply-Negate Long
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SMOV_advsimd:
    CLASS: advsimd
    DESC: Signed Move vector element to general-purpose register
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SMSUBL:
    CLASS: '64'
    DESC: Signed Multiply-Subtract Long
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SMULH:
    CLASS: '64'
    DESC: Signed Multiply High
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- smulh_z_p_zz:
    CLASS: sve
    DESC: Signed multiply returning high half (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- SMULL_advsimd_elt:
    CLASS: 2reg_element
    DESC: Signed Multiply Long (vector, by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SMULL_advsimd_vec:
    CLASS: 3reg_diff
    DESC: Signed Multiply Long (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SMULL_SMADDL:
    CLASS: '64'
    DESC: Signed Multiply Long
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- splice_z_p_zz:
    CLASS: sve
    DESC: Splice two vectors under predicate control
    VARIANT: SVE
    VARIANT_FEATURE: None
- SQABS_advsimd:
    CLASS: sisd
    DESC: Signed saturating Absolute value
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQABS_advsimd:
    CLASS: simd
    DESC: Signed saturating Absolute value
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQADD_advsimd:
    CLASS: sisd
    DESC: Signed saturating Add
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQADD_advsimd:
    CLASS: simd
    DESC: Signed saturating Add
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sqadd_z_zi:
    CLASS: sve
    DESC: Signed saturating add immediate (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- sqadd_z_zz:
    CLASS: sve
    DESC: Signed saturating add vectors (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- sqdecb_r_rs:
    CLASS: 32_fsreg
    DESC: Signed saturating decrement scalar by multiple of 8-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sqdecb_r_rs:
    CLASS: 64_fsreg
    DESC: Signed saturating decrement scalar by multiple of 8-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sqdecd_r_rs:
    CLASS: 32_fsreg
    DESC: Signed saturating decrement scalar by multiple of 64-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sqdecd_r_rs:
    CLASS: 64_fsreg
    DESC: Signed saturating decrement scalar by multiple of 64-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sqdecd_z_zs:
    CLASS: sve
    DESC: Signed saturating decrement vector by multiple of 64-bit predicate constraint
      element count
    VARIANT: SVE
    VARIANT_FEATURE: None
- sqdech_r_rs:
    CLASS: 32_fsreg
    DESC: Signed saturating decrement scalar by multiple of 16-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sqdech_r_rs:
    CLASS: 64_fsreg
    DESC: Signed saturating decrement scalar by multiple of 16-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sqdech_z_zs:
    CLASS: sve
    DESC: Signed saturating decrement vector by multiple of 16-bit predicate constraint
      element count
    VARIANT: SVE
    VARIANT_FEATURE: None
- sqdecp_r_p_r:
    CLASS: 32_fsreg
    DESC: Signed saturating decrement scalar by count of true predicate elements
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sqdecp_r_p_r:
    CLASS: 64_fsreg
    DESC: Signed saturating decrement scalar by count of true predicate elements
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sqdecp_z_p_z:
    CLASS: sve
    DESC: Signed saturating decrement vector by count of true predicate elements
    VARIANT: SVE
    VARIANT_FEATURE: None
- sqdecw_r_rs:
    CLASS: 32_fsreg
    DESC: Signed saturating decrement scalar by multiple of 32-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sqdecw_r_rs:
    CLASS: 64_fsreg
    DESC: Signed saturating decrement scalar by multiple of 32-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sqdecw_z_zs:
    CLASS: sve
    DESC: Signed saturating decrement vector by multiple of 32-bit predicate constraint
      element count
    VARIANT: SVE
    VARIANT_FEATURE: None
- SQDMLAL_advsimd_elt:
    CLASS: 2reg_scalar
    DESC: Signed saturating Doubling Multiply-Add Long (by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQDMLAL_advsimd_elt:
    CLASS: 2reg_element
    DESC: Signed saturating Doubling Multiply-Add Long (by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQDMLAL_advsimd_vec:
    CLASS: sisd
    DESC: Signed saturating Doubling Multiply-Add Long
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQDMLAL_advsimd_vec:
    CLASS: simd
    DESC: Signed saturating Doubling Multiply-Add Long
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQDMLSL_advsimd_elt:
    CLASS: 2reg_scalar
    DESC: Signed saturating Doubling Multiply-Subtract Long (by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQDMLSL_advsimd_elt:
    CLASS: 2reg_element
    DESC: Signed saturating Doubling Multiply-Subtract Long (by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQDMLSL_advsimd_vec:
    CLASS: sisd
    DESC: Signed saturating Doubling Multiply-Subtract Long
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQDMLSL_advsimd_vec:
    CLASS: simd
    DESC: Signed saturating Doubling Multiply-Subtract Long
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQDMULH_advsimd_elt:
    CLASS: 2reg_scalar
    DESC: Signed saturating Doubling Multiply returning High half (by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQDMULH_advsimd_elt:
    CLASS: 2reg_element
    DESC: Signed saturating Doubling Multiply returning High half (by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQDMULH_advsimd_vec:
    CLASS: sisd
    DESC: Signed saturating Doubling Multiply returning High half
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQDMULH_advsimd_vec:
    CLASS: simd
    DESC: Signed saturating Doubling Multiply returning High half
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQDMULL_advsimd_elt:
    CLASS: 2reg_scalar
    DESC: Signed saturating Doubling Multiply Long (by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQDMULL_advsimd_elt:
    CLASS: 2reg_element
    DESC: Signed saturating Doubling Multiply Long (by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQDMULL_advsimd_vec:
    CLASS: sisd
    DESC: Signed saturating Doubling Multiply Long
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQDMULL_advsimd_vec:
    CLASS: simd
    DESC: Signed saturating Doubling Multiply Long
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sqincb_r_rs:
    CLASS: 32_fsreg
    DESC: Signed saturating increment scalar by multiple of 8-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sqincb_r_rs:
    CLASS: 64_fsreg
    DESC: Signed saturating increment scalar by multiple of 8-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sqincd_r_rs:
    CLASS: 32_fsreg
    DESC: Signed saturating increment scalar by multiple of 64-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sqincd_r_rs:
    CLASS: 64_fsreg
    DESC: Signed saturating increment scalar by multiple of 64-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sqincd_z_zs:
    CLASS: sve
    DESC: Signed saturating increment vector by multiple of 64-bit predicate constraint
      element count
    VARIANT: SVE
    VARIANT_FEATURE: None
- sqinch_r_rs:
    CLASS: 32_fsreg
    DESC: Signed saturating increment scalar by multiple of 16-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sqinch_r_rs:
    CLASS: 64_fsreg
    DESC: Signed saturating increment scalar by multiple of 16-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sqinch_z_zs:
    CLASS: sve
    DESC: Signed saturating increment vector by multiple of 16-bit predicate constraint
      element count
    VARIANT: SVE
    VARIANT_FEATURE: None
- sqincp_r_p_r:
    CLASS: 32_fsreg
    DESC: Signed saturating increment scalar by count of true predicate elements
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sqincp_r_p_r:
    CLASS: 64_fsreg
    DESC: Signed saturating increment scalar by count of true predicate elements
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sqincp_z_p_z:
    CLASS: sve
    DESC: Signed saturating increment vector by count of true predicate elements
    VARIANT: SVE
    VARIANT_FEATURE: None
- sqincw_r_rs:
    CLASS: 32_fsreg
    DESC: Signed saturating increment scalar by multiple of 32-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sqincw_r_rs:
    CLASS: 64_fsreg
    DESC: Signed saturating increment scalar by multiple of 32-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sqincw_z_zs:
    CLASS: sve
    DESC: Signed saturating increment vector by multiple of 32-bit predicate constraint
      element count
    VARIANT: SVE
    VARIANT_FEATURE: None
- SQNEG_advsimd:
    CLASS: sisd
    DESC: Signed saturating Negate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQNEG_advsimd:
    CLASS: simd
    DESC: Signed saturating Negate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQRDMLAH_advsimd_elt:
    CLASS: 2reg_scalar
    DESC: Signed Saturating Rounding Doubling Multiply Accumulate returning High Half
      (by element)
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_RDM
- SQRDMLAH_advsimd_elt:
    CLASS: 2reg_element
    DESC: Signed Saturating Rounding Doubling Multiply Accumulate returning High Half
      (by element)
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_RDM
- SQRDMLAH_advsimd_vec:
    CLASS: sisd
    DESC: Signed Saturating Rounding Doubling Multiply Accumulate returning High Half
      (vector)
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_RDM
- SQRDMLAH_advsimd_vec:
    CLASS: simd
    DESC: Signed Saturating Rounding Doubling Multiply Accumulate returning High Half
      (vector)
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_RDM
- SQRDMLSH_advsimd_elt:
    CLASS: 2reg_scalar
    DESC: Signed Saturating Rounding Doubling Multiply Subtract returning High Half
      (by element)
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_RDM
- SQRDMLSH_advsimd_elt:
    CLASS: 2reg_element
    DESC: Signed Saturating Rounding Doubling Multiply Subtract returning High Half
      (by element)
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_RDM
- SQRDMLSH_advsimd_vec:
    CLASS: sisd
    DESC: Signed Saturating Rounding Doubling Multiply Subtract returning High Half
      (vector)
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_RDM
- SQRDMLSH_advsimd_vec:
    CLASS: simd
    DESC: Signed Saturating Rounding Doubling Multiply Subtract returning High Half
      (vector)
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_RDM
- SQRDMULH_advsimd_elt:
    CLASS: 2reg_scalar
    DESC: Signed saturating Rounding Doubling Multiply returning High half (by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQRDMULH_advsimd_elt:
    CLASS: 2reg_element
    DESC: Signed saturating Rounding Doubling Multiply returning High half (by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQRDMULH_advsimd_vec:
    CLASS: sisd
    DESC: Signed saturating Rounding Doubling Multiply returning High half
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQRDMULH_advsimd_vec:
    CLASS: simd
    DESC: Signed saturating Rounding Doubling Multiply returning High half
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQRSHL_advsimd:
    CLASS: sisd
    DESC: Signed saturating Rounding Shift Left (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQRSHL_advsimd:
    CLASS: simd
    DESC: Signed saturating Rounding Shift Left (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQRSHRN_advsimd:
    CLASS: sisd
    DESC: Signed saturating Rounded Shift Right Narrow (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQRSHRN_advsimd:
    CLASS: simd
    DESC: Signed saturating Rounded Shift Right Narrow (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQRSHRUN_advsimd:
    CLASS: sisd
    DESC: Signed saturating Rounded Shift Right Unsigned Narrow (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQRSHRUN_advsimd:
    CLASS: simd
    DESC: Signed saturating Rounded Shift Right Unsigned Narrow (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQSHL_advsimd_imm:
    CLASS: sisd
    DESC: Signed saturating Shift Left (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQSHL_advsimd_imm:
    CLASS: simd
    DESC: Signed saturating Shift Left (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQSHL_advsimd_reg:
    CLASS: sisd
    DESC: Signed saturating Shift Left (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQSHL_advsimd_reg:
    CLASS: simd
    DESC: Signed saturating Shift Left (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQSHLU_advsimd:
    CLASS: sisd
    DESC: Signed saturating Shift Left Unsigned (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQSHLU_advsimd:
    CLASS: simd
    DESC: Signed saturating Shift Left Unsigned (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQSHRN_advsimd:
    CLASS: sisd
    DESC: Signed saturating Shift Right Narrow (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQSHRN_advsimd:
    CLASS: simd
    DESC: Signed saturating Shift Right Narrow (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQSHRUN_advsimd:
    CLASS: sisd
    DESC: Signed saturating Shift Right Unsigned Narrow (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQSHRUN_advsimd:
    CLASS: simd
    DESC: Signed saturating Shift Right Unsigned Narrow (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQSUB_advsimd:
    CLASS: sisd
    DESC: Signed saturating Subtract
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQSUB_advsimd:
    CLASS: simd
    DESC: Signed saturating Subtract
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sqsub_z_zi:
    CLASS: sve
    DESC: Signed saturating subtract immediate (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- sqsub_z_zz:
    CLASS: sve
    DESC: Signed saturating subtract vectors (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- SQXTN_advsimd:
    CLASS: sisd
    DESC: Signed saturating extract Narrow
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQXTN_advsimd:
    CLASS: simd
    DESC: Signed saturating extract Narrow
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQXTUN_advsimd:
    CLASS: sisd
    DESC: Signed saturating extract Unsigned Narrow
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SQXTUN_advsimd:
    CLASS: simd
    DESC: Signed saturating extract Unsigned Narrow
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SRHADD_advsimd:
    CLASS: 3reg_same
    DESC: Signed Rounding Halving Add
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SRI_advsimd:
    CLASS: sisd
    DESC: Shift Right and Insert (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SRI_advsimd:
    CLASS: simd
    DESC: Shift Right and Insert (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SRSHL_advsimd:
    CLASS: sisd
    DESC: Signed Rounding Shift Left (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SRSHL_advsimd:
    CLASS: simd
    DESC: Signed Rounding Shift Left (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SRSHR_advsimd:
    CLASS: sisd
    DESC: Signed Rounding Shift Right (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SRSHR_advsimd:
    CLASS: simd
    DESC: Signed Rounding Shift Right (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SRSRA_advsimd:
    CLASS: sisd
    DESC: Signed Rounding Shift Right and Accumulate (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SRSRA_advsimd:
    CLASS: simd
    DESC: Signed Rounding Shift Right and Accumulate (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SSBB:
    CLASS: system
    DESC: Speculative Store Bypass Barrier
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SSHL_advsimd:
    CLASS: sisd
    DESC: Signed Shift Left (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SSHL_advsimd:
    CLASS: simd
    DESC: Signed Shift Left (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SSHLL_advsimd:
    CLASS: simd
    DESC: Signed Shift Left Long (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SSHR_advsimd:
    CLASS: sisd
    DESC: Signed Shift Right (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SSHR_advsimd:
    CLASS: simd
    DESC: Signed Shift Right (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SSRA_advsimd:
    CLASS: sisd
    DESC: Signed Shift Right and Accumulate (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SSRA_advsimd:
    CLASS: simd
    DESC: Signed Shift Right and Accumulate (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SSUBL_advsimd:
    CLASS: 3reg_diff
    DESC: Signed Subtract Long
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SSUBW_advsimd:
    CLASS: 3reg_diff
    DESC: Signed Subtract Wide
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ST1_advsimd_mult:
    CLASS: as_no_post_index
    DESC: Store multiple single-element structures from one, two, three, or four registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ST1_advsimd_mult:
    CLASS: as_post_index
    DESC: Store multiple single-element structures from one, two, three, or four registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ST1_advsimd_sngl:
    CLASS: as_no_post_index
    DESC: Store a single-element structure from one lane of one register
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ST1_advsimd_sngl:
    CLASS: as_post_index
    DESC: Store a single-element structure from one lane of one register
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st1b_z_p_ai:
    CLASS: 32_elem
    DESC: Scatter store bytes from a vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st1b_z_p_ai:
    CLASS: 64_elem
    DESC: Scatter store bytes from a vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st1b_z_p_bi:
    CLASS: sve
    DESC: Contiguous store bytes from vector (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st1b_z_p_br:
    CLASS: sve
    DESC: Contiguous store bytes from vector (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st1b_z_p_bz:
    CLASS: off_d_x32_unscaled
    DESC: Scatter store bytes from a vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st1b_z_p_bz:
    CLASS: off_s_x32_unscaled
    DESC: Scatter store bytes from a vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st1b_z_p_bz:
    CLASS: off_d_64_unscaled
    DESC: Scatter store bytes from a vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st1d_z_p_ai:
    CLASS: sve
    DESC: Scatter store doublewords from a vector (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st1d_z_p_bi:
    CLASS: sve
    DESC: Contiguous store doublewords from vector (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st1d_z_p_br:
    CLASS: sve
    DESC: Contiguous store doublewords from vector (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st1d_z_p_bz:
    CLASS: off_d_x32_scaled
    DESC: Scatter store doublewords from a vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st1d_z_p_bz:
    CLASS: off_d_x32_unscaled
    DESC: Scatter store doublewords from a vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st1d_z_p_bz:
    CLASS: off_d_64_scaled
    DESC: Scatter store doublewords from a vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st1d_z_p_bz:
    CLASS: off_d_64_unscaled
    DESC: Scatter store doublewords from a vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st1h_z_p_ai:
    CLASS: 32_elem
    DESC: Scatter store halfwords from a vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st1h_z_p_ai:
    CLASS: 64_elem
    DESC: Scatter store halfwords from a vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st1h_z_p_bi:
    CLASS: sve
    DESC: Contiguous store halfwords from vector (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st1h_z_p_br:
    CLASS: sve
    DESC: Contiguous store halfwords from vector (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st1h_z_p_bz:
    CLASS: off_s_x32_scaled
    DESC: Scatter store halfwords from a vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st1h_z_p_bz:
    CLASS: off_d_x32_scaled
    DESC: Scatter store halfwords from a vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st1h_z_p_bz:
    CLASS: off_d_x32_unscaled
    DESC: Scatter store halfwords from a vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st1h_z_p_bz:
    CLASS: off_s_x32_unscaled
    DESC: Scatter store halfwords from a vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st1h_z_p_bz:
    CLASS: off_d_64_scaled
    DESC: Scatter store halfwords from a vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st1h_z_p_bz:
    CLASS: off_d_64_unscaled
    DESC: Scatter store halfwords from a vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st1w_z_p_ai:
    CLASS: 32_elem
    DESC: Scatter store words from a vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st1w_z_p_ai:
    CLASS: 64_elem
    DESC: Scatter store words from a vector (immediate index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st1w_z_p_bi:
    CLASS: sve
    DESC: Contiguous store words from vector (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st1w_z_p_br:
    CLASS: sve
    DESC: Contiguous store words from vector (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st1w_z_p_bz:
    CLASS: off_s_x32_scaled
    DESC: Scatter store words from a vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st1w_z_p_bz:
    CLASS: off_d_x32_scaled
    DESC: Scatter store words from a vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st1w_z_p_bz:
    CLASS: off_d_x32_unscaled
    DESC: Scatter store words from a vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st1w_z_p_bz:
    CLASS: off_s_x32_unscaled
    DESC: Scatter store words from a vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st1w_z_p_bz:
    CLASS: off_d_64_scaled
    DESC: Scatter store words from a vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st1w_z_p_bz:
    CLASS: off_d_64_unscaled
    DESC: Scatter store words from a vector (vector index)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ST2_advsimd_mult:
    CLASS: as_no_post_index
    DESC: Store multiple 2-element structures from two registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ST2_advsimd_mult:
    CLASS: as_post_index
    DESC: Store multiple 2-element structures from two registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ST2_advsimd_sngl:
    CLASS: as_no_post_index
    DESC: Store single 2-element structure from one lane of two registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ST2_advsimd_sngl:
    CLASS: as_post_index
    DESC: Store single 2-element structure from one lane of two registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st2b_z_p_bi:
    CLASS: sve
    DESC: Contiguous store two-byte structures from two vectors (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st2b_z_p_br:
    CLASS: sve
    DESC: Contiguous store two-byte structures from two vectors (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st2d_z_p_bi:
    CLASS: sve
    DESC: Contiguous store two-doubleword structures from two vectors (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st2d_z_p_br:
    CLASS: sve
    DESC: Contiguous store two-doubleword structures from two vectors (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ST2G:
    CLASS: post_indexed
    DESC: Store Allocation Tags
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_MTE
- ST2G:
    CLASS: pre_indexed
    DESC: Store Allocation Tags
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_MTE
- ST2G:
    CLASS: signed_scaled_offset
    DESC: Store Allocation Tags
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_MTE
- st2h_z_p_bi:
    CLASS: sve
    DESC: Contiguous store two-halfword structures from two vectors (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st2h_z_p_br:
    CLASS: sve
    DESC: Contiguous store two-halfword structures from two vectors (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st2w_z_p_bi:
    CLASS: sve
    DESC: Contiguous store two-word structures from two vectors (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st2w_z_p_br:
    CLASS: sve
    DESC: Contiguous store two-word structures from two vectors (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ST3_advsimd_mult:
    CLASS: as_no_post_index
    DESC: Store multiple 3-element structures from three registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ST3_advsimd_mult:
    CLASS: as_post_index
    DESC: Store multiple 3-element structures from three registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ST3_advsimd_sngl:
    CLASS: as_no_post_index
    DESC: Store single 3-element structure from one lane of three registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ST3_advsimd_sngl:
    CLASS: as_post_index
    DESC: Store single 3-element structure from one lane of three registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st3b_z_p_bi:
    CLASS: sve
    DESC: Contiguous store three-byte structures from three vectors (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st3b_z_p_br:
    CLASS: sve
    DESC: Contiguous store three-byte structures from three vectors (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st3d_z_p_bi:
    CLASS: sve
    DESC: Contiguous store three-doubleword structures from three vectors (immediate
      index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st3d_z_p_br:
    CLASS: sve
    DESC: Contiguous store three-doubleword structures from three vectors (scalar
      index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st3h_z_p_bi:
    CLASS: sve
    DESC: Contiguous store three-halfword structures from three vectors (immediate
      index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st3h_z_p_br:
    CLASS: sve
    DESC: Contiguous store three-halfword structures from three vectors (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st3w_z_p_bi:
    CLASS: sve
    DESC: Contiguous store three-word structures from three vectors (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st3w_z_p_br:
    CLASS: sve
    DESC: Contiguous store three-word structures from three vectors (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ST4_advsimd_mult:
    CLASS: as_no_post_index
    DESC: Store multiple 4-element structures from four registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ST4_advsimd_mult:
    CLASS: as_post_index
    DESC: Store multiple 4-element structures from four registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ST4_advsimd_sngl:
    CLASS: as_no_post_index
    DESC: Store single 4-element structure from one lane of four registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ST4_advsimd_sngl:
    CLASS: as_post_index
    DESC: Store single 4-element structure from one lane of four registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- st4b_z_p_bi:
    CLASS: sve
    DESC: Contiguous store four-byte structures from four vectors (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st4b_z_p_br:
    CLASS: sve
    DESC: Contiguous store four-byte structures from four vectors (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st4d_z_p_bi:
    CLASS: sve
    DESC: Contiguous store four-doubleword structures from four vectors (immediate
      index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st4d_z_p_br:
    CLASS: sve
    DESC: Contiguous store four-doubleword structures from four vectors (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st4h_z_p_bi:
    CLASS: sve
    DESC: Contiguous store four-halfword structures from four vectors (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st4h_z_p_br:
    CLASS: sve
    DESC: Contiguous store four-halfword structures from four vectors (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st4w_z_p_bi:
    CLASS: sve
    DESC: Contiguous store four-word structures from four vectors (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- st4w_z_p_br:
    CLASS: sve
    DESC: Contiguous store four-word structures from four vectors (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- ST64B:
    CLASS: general
    DESC: Single-copy Atomic 64-byte Store without Return
    VARIANT: ARMv8.7
    VARIANT_FEATURE: FEAT_LS64
- ST64BV:
    CLASS: general
    DESC: Single-copy Atomic 64-byte Store with Return
    VARIANT: ARMv8.7
    VARIANT_FEATURE: FEAT_LS64_V
- ST64BV0:
    CLASS: general
    DESC: Single-copy Atomic 64-byte EL0 Store with Return
    VARIANT: ARMv8.7
    VARIANT_FEATURE: FEAT_LS64_V
- STADD_LDADD:
    CLASS: general
    DESC: Atomic add on word or doubleword in memory, without return
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- STADDB_LDADDB:
    CLASS: general
    DESC: Atomic add on byte in memory, without return
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- STADDH_LDADDH:
    CLASS: general
    DESC: Atomic add on halfword in memory, without return
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- STCLR_LDCLR:
    CLASS: general
    DESC: Atomic bit clear on word or doubleword in memory, without return
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- STCLRB_LDCLRB:
    CLASS: general
    DESC: Atomic bit clear on byte in memory, without return
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- STCLRH_LDCLRH:
    CLASS: general
    DESC: Atomic bit clear on halfword in memory, without return
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- STEOR_LDEOR:
    CLASS: general
    DESC: Atomic exclusive OR on word or doubleword in memory, without return
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- STEORB_LDEORB:
    CLASS: general
    DESC: Atomic exclusive OR on byte in memory, without return
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- STEORH_LDEORH:
    CLASS: general
    DESC: Atomic exclusive OR on halfword in memory, without return
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- STG:
    CLASS: post_indexed
    DESC: Store Allocation Tag
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_MTE
- STG:
    CLASS: pre_indexed
    DESC: Store Allocation Tag
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_MTE
- STG:
    CLASS: signed_scaled_offset
    DESC: Store Allocation Tag
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_MTE
- STGM:
    CLASS: general
    DESC: Store Tag Multiple
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_MTE2
- STGP:
    CLASS: post_indexed
    DESC: Store Allocation Tag and Pair of registers
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_MTE
- STGP:
    CLASS: pre_indexed
    DESC: Store Allocation Tag and Pair of registers
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_MTE
- STGP:
    CLASS: signed_scaled_offset
    DESC: Store Allocation Tag and Pair of registers
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_MTE
- STLLR:
    CLASS: base_register
    DESC: Store LORelease Register
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LOR
- STLLRB:
    CLASS: base_register
    DESC: Store LORelease Register Byte
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LOR
- STLLRH:
    CLASS: base_register
    DESC: Store LORelease Register Halfword
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LOR
- STLR:
    CLASS: base_register
    DESC: Store-Release Register
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STLRB:
    CLASS: base_register
    DESC: Store-Release Register Byte
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STLRH:
    CLASS: base_register
    DESC: Store-Release Register Halfword
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STLUR_gen:
    CLASS: base_plus_offset
    DESC: Store-Release Register (unscaled)
    VARIANT: ARMv8.4
    VARIANT_FEATURE: FEAT_LRCPC2
- STLURB:
    CLASS: base_plus_offset
    DESC: Store-Release Register Byte (unscaled)
    VARIANT: ARMv8.4
    VARIANT_FEATURE: FEAT_LRCPC2
- STLURH:
    CLASS: base_plus_offset
    DESC: Store-Release Register Halfword (unscaled)
    VARIANT: ARMv8.4
    VARIANT_FEATURE: FEAT_LRCPC2
- STLXP:
    CLASS: base_register
    DESC: Store-Release Exclusive Pair of registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STLXR:
    CLASS: base_register
    DESC: Store-Release Exclusive Register
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STLXRB:
    CLASS: base_register
    DESC: Store-Release Exclusive Register Byte
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STLXRH:
    CLASS: base_register
    DESC: Store-Release Exclusive Register Halfword
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STNP_fpsimd:
    CLASS: signed_scaled_offset
    DESC: Store Pair of SIMD&FP registers, with Non-temporal hint
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STNP_gen:
    CLASS: signed_scaled_offset
    DESC: Store Pair of Registers, with non-temporal hint
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- stnt1b_z_p_bi:
    CLASS: sve
    DESC: Contiguous store non-temporal bytes from vector (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- stnt1b_z_p_br:
    CLASS: sve
    DESC: Contiguous store non-temporal bytes from vector (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- stnt1d_z_p_bi:
    CLASS: sve
    DESC: Contiguous store non-temporal doublewords from vector (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- stnt1d_z_p_br:
    CLASS: sve
    DESC: Contiguous store non-temporal doublewords from vector (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- stnt1h_z_p_bi:
    CLASS: sve
    DESC: Contiguous store non-temporal halfwords from vector (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- stnt1h_z_p_br:
    CLASS: sve
    DESC: Contiguous store non-temporal halfwords from vector (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- stnt1w_z_p_bi:
    CLASS: sve
    DESC: Contiguous store non-temporal words from vector (immediate index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- stnt1w_z_p_br:
    CLASS: sve
    DESC: Contiguous store non-temporal words from vector (scalar index)
    VARIANT: SVE
    VARIANT_FEATURE: None
- STP_fpsimd:
    CLASS: post_indexed
    DESC: Store Pair of SIMD&FP registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STP_fpsimd:
    CLASS: pre_indexed
    DESC: Store Pair of SIMD&FP registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STP_fpsimd:
    CLASS: signed_scaled_offset
    DESC: Store Pair of SIMD&FP registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STP_gen:
    CLASS: post_indexed
    DESC: Store Pair of Registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STP_gen:
    CLASS: pre_indexed
    DESC: Store Pair of Registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STP_gen:
    CLASS: signed_scaled_offset
    DESC: Store Pair of Registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STR_imm_fpsimd:
    CLASS: post_indexed
    DESC: Store SIMD&FP register (immediate offset)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STR_imm_fpsimd:
    CLASS: pre_indexed
    DESC: Store SIMD&FP register (immediate offset)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STR_imm_fpsimd:
    CLASS: unsigned_scaled_offset
    DESC: Store SIMD&FP register (immediate offset)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STR_imm_gen:
    CLASS: post_indexed
    DESC: Store Register (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STR_imm_gen:
    CLASS: pre_indexed
    DESC: Store Register (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STR_imm_gen:
    CLASS: unsigned_scaled_offset
    DESC: Store Register (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- str_p_bi:
    CLASS: sve
    DESC: Store predicate register
    VARIANT: SVE
    VARIANT_FEATURE: None
- STR_reg_fpsimd:
    CLASS: fpsimd
    DESC: Store SIMD&FP register (register offset)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STR_reg_gen:
    CLASS: general
    DESC: Store Register (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- str_z_bi:
    CLASS: sve
    DESC: Store vector register
    VARIANT: SVE
    VARIANT_FEATURE: None
- STRB_imm:
    CLASS: post_indexed
    DESC: Store Register Byte (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STRB_imm:
    CLASS: pre_indexed
    DESC: Store Register Byte (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STRB_imm:
    CLASS: unsigned_scaled_offset
    DESC: Store Register Byte (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STRB_reg:
    CLASS: '32'
    DESC: Store Register Byte (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STRH_imm:
    CLASS: post_indexed
    DESC: Store Register Halfword (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STRH_imm:
    CLASS: pre_indexed
    DESC: Store Register Halfword (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STRH_imm:
    CLASS: unsigned_scaled_offset
    DESC: Store Register Halfword (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STRH_reg:
    CLASS: '32'
    DESC: Store Register Halfword (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STSET_LDSET:
    CLASS: general
    DESC: Atomic bit set on word or doubleword in memory, without return
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- STSETB_LDSETB:
    CLASS: general
    DESC: Atomic bit set on byte in memory, without return
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- STSETH_LDSETH:
    CLASS: general
    DESC: Atomic bit set on halfword in memory, without return
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- STSMAX_LDSMAX:
    CLASS: general
    DESC: Atomic signed maximum on word or doubleword in memory, without return
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- STSMAXB_LDSMAXB:
    CLASS: general
    DESC: Atomic signed maximum on byte in memory, without return
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- STSMAXH_LDSMAXH:
    CLASS: general
    DESC: Atomic signed maximum on halfword in memory, without return
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- STSMIN_LDSMIN:
    CLASS: general
    DESC: Atomic signed minimum on word or doubleword in memory, without return
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- STSMINB_LDSMINB:
    CLASS: general
    DESC: Atomic signed minimum on byte in memory, without return
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- STSMINH_LDSMINH:
    CLASS: general
    DESC: Atomic signed minimum on halfword in memory, without return
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- STTR:
    CLASS: base_plus_offset
    DESC: Store Register (unprivileged)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STTRB:
    CLASS: base_plus_offset
    DESC: Store Register Byte (unprivileged)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STTRH:
    CLASS: base_plus_offset
    DESC: Store Register Halfword (unprivileged)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STUMAX_LDUMAX:
    CLASS: general
    DESC: Atomic unsigned maximum on word or doubleword in memory, without return
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- STUMAXB_LDUMAXB:
    CLASS: general
    DESC: Atomic unsigned maximum on byte in memory, without return
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- STUMAXH_LDUMAXH:
    CLASS: general
    DESC: Atomic unsigned maximum on halfword in memory, without return
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- STUMIN_LDUMIN:
    CLASS: general
    DESC: Atomic unsigned minimum on word or doubleword in memory, without return
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- STUMINB_LDUMINB:
    CLASS: general
    DESC: Atomic unsigned minimum on byte in memory, without return
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- STUMINH_LDUMINH:
    CLASS: general
    DESC: Atomic unsigned minimum on halfword in memory, without return
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- STUR_fpsimd:
    CLASS: base_plus_offset
    DESC: Store SIMD&FP register (unscaled offset)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STUR_gen:
    CLASS: base_plus_offset
    DESC: Store Register (unscaled)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STURB:
    CLASS: base_plus_offset
    DESC: Store Register Byte (unscaled)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STURH:
    CLASS: base_plus_offset
    DESC: Store Register Halfword (unscaled)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STXP:
    CLASS: base_register
    DESC: Store Exclusive Pair of registers
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STXR:
    CLASS: base_register
    DESC: Store Exclusive Register
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STXRB:
    CLASS: base_register
    DESC: Store Exclusive Register Byte
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STXRH:
    CLASS: base_register
    DESC: Store Exclusive Register Halfword
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- STZ2G:
    CLASS: post_indexed
    DESC: Store Allocation Tags, Zeroing
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_MTE
- STZ2G:
    CLASS: pre_indexed
    DESC: Store Allocation Tags, Zeroing
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_MTE
- STZ2G:
    CLASS: signed_scaled_offset
    DESC: Store Allocation Tags, Zeroing
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_MTE
- STZG:
    CLASS: post_indexed
    DESC: Store Allocation Tag, Zeroing
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_MTE
- STZG:
    CLASS: pre_indexed
    DESC: Store Allocation Tag, Zeroing
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_MTE
- STZG:
    CLASS: signed_scaled_offset
    DESC: Store Allocation Tag, Zeroing
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_MTE
- STZGM:
    CLASS: general
    DESC: Store Tag and Zero Multiple
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_MTE2
- SUB_addsub_ext:
    CLASS: no_s
    DESC: Subtract (extended register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SUB_addsub_imm:
    CLASS: no_s
    DESC: Subtract (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SUB_addsub_shift:
    CLASS: no_s
    DESC: Subtract (shifted register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SUB_advsimd:
    CLASS: sisd
    DESC: Subtract (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SUB_advsimd:
    CLASS: simd
    DESC: Subtract (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sub_z_p_zz:
    CLASS: sve
    DESC: Subtract vectors (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- sub_z_zi:
    CLASS: sve
    DESC: Subtract immediate (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- sub_z_zz:
    CLASS: sve
    DESC: Subtract vectors (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- SUBG:
    CLASS: general
    DESC: Subtract with Tag
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_MTE
- SUBHN_advsimd:
    CLASS: 3reg_diff
    DESC: Subtract returning High Narrow
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SUBP:
    CLASS: general
    DESC: Subtract Pointer
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_MTE
- SUBPS:
    CLASS: general
    DESC: Subtract Pointer, setting Flags
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_MTE
- subr_z_p_zz:
    CLASS: sve
    DESC: Reversed subtract vectors (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- subr_z_zi:
    CLASS: sve
    DESC: Reversed subtract from immediate (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- SUBS_addsub_ext:
    CLASS: s
    DESC: Subtract (extended register), setting flags
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SUBS_addsub_imm:
    CLASS: s
    DESC: Subtract (immediate), setting flags
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SUBS_addsub_shift:
    CLASS: s
    DESC: Subtract (shifted register), setting flags
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SUDOT_advsimd_elt:
    CLASS: 2reg_element
    DESC: Dot product with signed and unsigned integers (vector, by element)
    VARIANT: ARMv8.6
    VARIANT_FEATURE: FEAT_I8MM
- sudot_z_zzzi:
    CLASS: sve
    DESC: Signed by unsigned integer indexed dot product
    VARIANT: SVE
    VARIANT_FEATURE: None
- sunpkhi_z_z:
    CLASS: sve_high_half
    DESC: Signed unpack and extend half of vector
    VARIANT: SVE
    VARIANT_FEATURE: None
- sunpkhi_z_z:
    CLASS: sve_low_half
    DESC: Signed unpack and extend half of vector
    VARIANT: SVE
    VARIANT_FEATURE: None
- SUQADD_advsimd:
    CLASS: sisd
    DESC: Signed saturating Accumulate of Unsigned value
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SUQADD_advsimd:
    CLASS: simd
    DESC: Signed saturating Accumulate of Unsigned value
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SVC:
    CLASS: system
    DESC: Supervisor Call
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SWP:
    CLASS: general
    DESC: Swap word or doubleword in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- SWPB:
    CLASS: general
    DESC: Swap byte in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- SWPH:
    CLASS: general
    DESC: Swap halfword in memory
    VARIANT: ARMv8.1
    VARIANT_FEATURE: FEAT_LSE
- SXTB_SBFM:
    CLASS: signed_fill
    DESC: Signed Extend Byte
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sxtb_z_p_z:
    CLASS: esize_byte
    DESC: Signed byte / halfword / word extend (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sxtb_z_p_z:
    CLASS: esize_halfword
    DESC: Signed byte / halfword / word extend (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- sxtb_z_p_z:
    CLASS: esize_word
    DESC: Signed byte / halfword / word extend (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SXTH_SBFM:
    CLASS: signed_fill
    DESC: Sign Extend Halfword
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SXTL_SSHLL_advsimd:
    CLASS: simd
    DESC: Signed extend Long
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SXTW_SBFM:
    CLASS: signed_fill
    DESC: Sign Extend Word
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SYS:
    CLASS: system
    DESC: System instruction
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- SYSL:
    CLASS: system
    DESC: System instruction with result
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- TBL_advsimd:
    CLASS: advsimd
    DESC: Table vector Lookup
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- tbl_z_zz:
    CLASS: sve
    DESC: Programmable table lookup in single vector table
    VARIANT: SVE
    VARIANT_FEATURE: None
- TBNZ:
    CLASS: br14
    DESC: Test bit and Branch if Nonzero
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- TBX_advsimd:
    CLASS: advsimd
    DESC: Table vector lookup extension
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- TBZ:
    CLASS: br14
    DESC: Test bit and Branch if Zero
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- TLBI_SYS:
    CLASS: system
    DESC: TLB Invalidate operation
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- TRN1_advsimd:
    CLASS: advsimd
    DESC: Transpose vectors (primary)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- trn1_p_pp:
    CLASS: sve_even
    DESC: Interleave even or odd elements from two predicates
    VARIANT: SVE
    VARIANT_FEATURE: None
- trn1_p_pp:
    CLASS: sve_odd
    DESC: Interleave even or odd elements from two predicates
    VARIANT: SVE
    VARIANT_FEATURE: None
- trn1_z_zz:
    CLASS: sve_even
    DESC: Interleave even or odd elements from two vectors
    VARIANT: SVE
    VARIANT_FEATURE: None
- trn1_z_zz:
    CLASS: sve_even_quad
    DESC: Interleave even or odd elements from two vectors
    VARIANT: SVE
    VARIANT_FEATURE: None
- trn1_z_zz:
    CLASS: sve_odd
    DESC: Interleave even or odd elements from two vectors
    VARIANT: SVE
    VARIANT_FEATURE: None
- trn1_z_zz:
    CLASS: sve_odd_quad
    DESC: Interleave even or odd elements from two vectors
    VARIANT: SVE
    VARIANT_FEATURE: None
- TRN2_advsimd:
    CLASS: advsimd
    DESC: Transpose vectors (secondary)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- TSB:
    CLASS: system
    DESC: Trace Synchronization Barrier
    VARIANT: ARMv8.4
    VARIANT_FEATURE: FEAT_TRF
- TST_ANDS_log_imm:
    CLASS: s
    DESC: Test bits (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- TST_ANDS_log_shift:
    CLASS: s
    DESC: Test (shifted register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UABA_advsimd:
    CLASS: 3reg_same
    DESC: Unsigned Absolute difference and Accumulate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UABAL_advsimd:
    CLASS: 3reg_diff
    DESC: Unsigned Absolute difference and Accumulate Long
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UABD_advsimd:
    CLASS: 3reg_same
    DESC: Unsigned Absolute Difference (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uabd_z_p_zz:
    CLASS: sve
    DESC: Unsigned absolute difference (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- UABDL_advsimd:
    CLASS: 3reg_diff
    DESC: Unsigned Absolute Difference Long
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UADALP_advsimd:
    CLASS: simd
    DESC: Unsigned Add and Accumulate Long Pairwise
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UADDL_advsimd:
    CLASS: 3reg_diff
    DESC: Unsigned Add Long (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UADDLP_advsimd:
    CLASS: simd
    DESC: Unsigned Add Long Pairwise
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UADDLV_advsimd:
    CLASS: advsimd
    DESC: Unsigned sum Long across Vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uaddv_r_p_z:
    CLASS: sve
    DESC: Unsigned add reduction to scalar
    VARIANT: SVE
    VARIANT_FEATURE: None
- UADDW_advsimd:
    CLASS: 3reg_diff
    DESC: Unsigned Add Wide
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UBFIZ_UBFM:
    CLASS: zero_fill
    DESC: Unsigned Bitfield Insert in Zero
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UBFM:
    CLASS: zero_fill
    DESC: Unsigned Bitfield Move
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UBFX_UBFM:
    CLASS: zero_fill
    DESC: Unsigned Bitfield Extract
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UCVTF_advsimd_fix:
    CLASS: sisd
    DESC: Unsigned fixed-point Convert to Floating-point (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UCVTF_advsimd_fix:
    CLASS: simd
    DESC: Unsigned fixed-point Convert to Floating-point (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UCVTF_advsimd_int:
    CLASS: sisd_half
    DESC: Unsigned integer Convert to Floating-point (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- UCVTF_advsimd_int:
    CLASS: sisd_single_and_double
    DESC: Unsigned integer Convert to Floating-point (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UCVTF_advsimd_int:
    CLASS: simd_half
    DESC: Unsigned integer Convert to Floating-point (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- UCVTF_advsimd_int:
    CLASS: simd_single_and_double
    DESC: Unsigned integer Convert to Floating-point (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UCVTF_float_fix:
    CLASS: float
    DESC: Unsigned fixed-point Convert to Floating-point (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- UCVTF_float_fix:
    CLASS: float
    DESC: Unsigned fixed-point Convert to Floating-point (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- UCVTF_float_int:
    CLASS: float
    DESC: Unsigned integer Convert to Floating-point (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- UCVTF_float_int:
    CLASS: float
    DESC: Unsigned integer Convert to Floating-point (scalar)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_FP16
- ucvtf_z_p_z:
    CLASS: 16_to_half
    DESC: Unsigned integer convert to floating-point (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ucvtf_z_p_z:
    CLASS: 32_to_half
    DESC: Unsigned integer convert to floating-point (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ucvtf_z_p_z:
    CLASS: 32_to_single
    DESC: Unsigned integer convert to floating-point (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ucvtf_z_p_z:
    CLASS: 32_to_double
    DESC: Unsigned integer convert to floating-point (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ucvtf_z_p_z:
    CLASS: 64_to_half
    DESC: Unsigned integer convert to floating-point (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ucvtf_z_p_z:
    CLASS: 64_to_single
    DESC: Unsigned integer convert to floating-point (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ucvtf_z_p_z:
    CLASS: 64_to_double
    DESC: Unsigned integer convert to floating-point (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UDF_perm_undef:
    CLASS: general
    DESC: Permanently Undefined
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UDIV:
    CLASS: general
    DESC: Unsigned Divide
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- udiv_z_p_zz:
    CLASS: sve
    DESC: Unsigned divide (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- udivr_z_p_zz:
    CLASS: sve
    DESC: Unsigned reversed divide (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- UDOT_advsimd_elt:
    CLASS: 2reg_element
    DESC: Dot Product unsigned arithmetic (vector, by element)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_DotProd
- UDOT_advsimd_vec:
    CLASS: simd
    DESC: Dot Product unsigned arithmetic (vector)
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_DotProd
- udot_z_zzz:
    CLASS: sve
    DESC: Unsigned integer dot product
    VARIANT: SVE
    VARIANT_FEATURE: None
- udot_z_zzzi:
    CLASS: of_words
    DESC: Unsigned integer indexed dot product
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- udot_z_zzzi:
    CLASS: of_doublewords
    DESC: Unsigned integer indexed dot product
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UHADD_advsimd:
    CLASS: 3reg_same
    DESC: Unsigned Halving Add
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UHSUB_advsimd:
    CLASS: 3reg_same
    DESC: Unsigned Halving Subtract
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UMADDL:
    CLASS: '64'
    DESC: Unsigned Multiply-Add Long
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UMAX_advsimd:
    CLASS: 3reg_same
    DESC: Unsigned Maximum (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- umax_z_p_zz:
    CLASS: sve
    DESC: Unsigned maximum vectors (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- umax_z_zi:
    CLASS: sve
    DESC: Unsigned maximum with immediate (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- UMAXP_advsimd:
    CLASS: 3reg_same
    DESC: Unsigned Maximum Pairwise
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UMAXV_advsimd:
    CLASS: advsimd
    DESC: Unsigned Maximum across Vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- umaxv_r_p_z:
    CLASS: sve
    DESC: Unsigned maximum reduction to scalar
    VARIANT: SVE
    VARIANT_FEATURE: None
- UMIN_advsimd:
    CLASS: 3reg_same
    DESC: Unsigned Minimum (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- umin_z_p_zz:
    CLASS: sve
    DESC: Unsigned minimum vectors (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- umin_z_zi:
    CLASS: sve
    DESC: Unsigned minimum with immediate (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- UMINP_advsimd:
    CLASS: 3reg_same
    DESC: Unsigned Minimum Pairwise
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UMINV_advsimd:
    CLASS: advsimd
    DESC: Unsigned Minimum across Vector
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uminv_r_p_z:
    CLASS: sve
    DESC: Unsigned minimum reduction to scalar
    VARIANT: SVE
    VARIANT_FEATURE: None
- UMLAL_advsimd_elt:
    CLASS: 2reg_element
    DESC: Unsigned Multiply-Add Long (vector, by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UMLAL_advsimd_vec:
    CLASS: 3reg_diff
    DESC: Unsigned Multiply-Add Long (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UMLSL_advsimd_elt:
    CLASS: 2reg_element
    DESC: Unsigned Multiply-Subtract Long (vector, by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UMLSL_advsimd_vec:
    CLASS: 3reg_diff
    DESC: Unsigned Multiply-Subtract Long (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UMMLA_advsimd_vec:
    CLASS: simd
    DESC: Unsigned 8-bit integer matrix multiply-accumulate (vector)
    VARIANT: ARMv8.6
    VARIANT_FEATURE: FEAT_I8MM
- ummla_z_zzz:
    CLASS: sve
    DESC: Unsigned integer matrix multiply-accumulate
    VARIANT: SVE
    VARIANT_FEATURE: None
- UMNEGL_UMSUBL:
    CLASS: '64'
    DESC: Unsigned Multiply-Negate Long
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UMOV_advsimd:
    CLASS: advsimd
    DESC: Unsigned Move vector element to general-purpose register
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UMSUBL:
    CLASS: '64'
    DESC: Unsigned Multiply-Subtract Long
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UMULH:
    CLASS: '64'
    DESC: Unsigned Multiply High
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- umulh_z_p_zz:
    CLASS: sve
    DESC: Unsigned multiply returning high half (predicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- UMULL_advsimd_elt:
    CLASS: 2reg_element
    DESC: Unsigned Multiply Long (vector, by element)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UMULL_advsimd_vec:
    CLASS: 3reg_diff
    DESC: Unsigned Multiply long (vector)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UMULL_UMADDL:
    CLASS: '64'
    DESC: Unsigned Multiply Long
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UQADD_advsimd:
    CLASS: sisd
    DESC: Unsigned saturating Add
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UQADD_advsimd:
    CLASS: simd
    DESC: Unsigned saturating Add
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uqadd_z_zi:
    CLASS: sve
    DESC: Unsigned saturating add immediate (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- uqadd_z_zz:
    CLASS: sve
    DESC: Unsigned saturating add vectors (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- uqdecb_r_rs:
    CLASS: 32_fsreg
    DESC: Unsigned saturating decrement scalar by multiple of 8-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uqdecb_r_rs:
    CLASS: 64_fsreg
    DESC: Unsigned saturating decrement scalar by multiple of 8-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uqdecd_r_rs:
    CLASS: 32_fsreg
    DESC: Unsigned saturating decrement scalar by multiple of 64-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uqdecd_r_rs:
    CLASS: 64_fsreg
    DESC: Unsigned saturating decrement scalar by multiple of 64-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uqdecd_z_zs:
    CLASS: sve
    DESC: Unsigned saturating decrement vector by multiple of 64-bit predicate constraint
      element count
    VARIANT: SVE
    VARIANT_FEATURE: None
- uqdech_r_rs:
    CLASS: 32_fsreg
    DESC: Unsigned saturating decrement scalar by multiple of 16-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uqdech_r_rs:
    CLASS: 64_fsreg
    DESC: Unsigned saturating decrement scalar by multiple of 16-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uqdech_z_zs:
    CLASS: sve
    DESC: Unsigned saturating decrement vector by multiple of 16-bit predicate constraint
      element count
    VARIANT: SVE
    VARIANT_FEATURE: None
- uqdecp_r_p_r:
    CLASS: 32_fsreg
    DESC: Unsigned saturating decrement scalar by count of true predicate elements
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uqdecp_r_p_r:
    CLASS: 64_fsreg
    DESC: Unsigned saturating decrement scalar by count of true predicate elements
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uqdecp_z_p_z:
    CLASS: sve
    DESC: Unsigned saturating decrement vector by count of true predicate elements
    VARIANT: SVE
    VARIANT_FEATURE: None
- uqdecw_r_rs:
    CLASS: 32_fsreg
    DESC: Unsigned saturating decrement scalar by multiple of 32-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uqdecw_r_rs:
    CLASS: 64_fsreg
    DESC: Unsigned saturating decrement scalar by multiple of 32-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uqdecw_z_zs:
    CLASS: sve
    DESC: Unsigned saturating decrement vector by multiple of 32-bit predicate constraint
      element count
    VARIANT: SVE
    VARIANT_FEATURE: None
- uqincb_r_rs:
    CLASS: 32_fsreg
    DESC: Unsigned saturating increment scalar by multiple of 8-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uqincb_r_rs:
    CLASS: 64_fsreg
    DESC: Unsigned saturating increment scalar by multiple of 8-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uqincd_r_rs:
    CLASS: 32_fsreg
    DESC: Unsigned saturating increment scalar by multiple of 64-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uqincd_r_rs:
    CLASS: 64_fsreg
    DESC: Unsigned saturating increment scalar by multiple of 64-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uqincd_z_zs:
    CLASS: sve
    DESC: Unsigned saturating increment vector by multiple of 64-bit predicate constraint
      element count
    VARIANT: SVE
    VARIANT_FEATURE: None
- uqinch_r_rs:
    CLASS: 32_fsreg
    DESC: Unsigned saturating increment scalar by multiple of 16-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uqinch_r_rs:
    CLASS: 64_fsreg
    DESC: Unsigned saturating increment scalar by multiple of 16-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uqinch_z_zs:
    CLASS: sve
    DESC: Unsigned saturating increment vector by multiple of 16-bit predicate constraint
      element count
    VARIANT: SVE
    VARIANT_FEATURE: None
- uqincp_r_p_r:
    CLASS: 32_fsreg
    DESC: Unsigned saturating increment scalar by count of true predicate elements
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uqincp_r_p_r:
    CLASS: 64_fsreg
    DESC: Unsigned saturating increment scalar by count of true predicate elements
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uqincp_z_p_z:
    CLASS: sve
    DESC: Unsigned saturating increment vector by count of true predicate elements
    VARIANT: SVE
    VARIANT_FEATURE: None
- uqincw_r_rs:
    CLASS: 32_fsreg
    DESC: Unsigned saturating increment scalar by multiple of 32-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uqincw_r_rs:
    CLASS: 64_fsreg
    DESC: Unsigned saturating increment scalar by multiple of 32-bit predicate constraint
      element count
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uqincw_z_zs:
    CLASS: sve
    DESC: Unsigned saturating increment vector by multiple of 32-bit predicate constraint
      element count
    VARIANT: SVE
    VARIANT_FEATURE: None
- UQRSHL_advsimd:
    CLASS: sisd
    DESC: Unsigned saturating Rounding Shift Left (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UQRSHL_advsimd:
    CLASS: simd
    DESC: Unsigned saturating Rounding Shift Left (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UQRSHRN_advsimd:
    CLASS: sisd
    DESC: Unsigned saturating Rounded Shift Right Narrow (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UQRSHRN_advsimd:
    CLASS: simd
    DESC: Unsigned saturating Rounded Shift Right Narrow (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UQSHL_advsimd_imm:
    CLASS: sisd
    DESC: Unsigned saturating Shift Left (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UQSHL_advsimd_imm:
    CLASS: simd
    DESC: Unsigned saturating Shift Left (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UQSHL_advsimd_reg:
    CLASS: sisd
    DESC: Unsigned saturating Shift Left (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UQSHL_advsimd_reg:
    CLASS: simd
    DESC: Unsigned saturating Shift Left (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UQSHRN_advsimd:
    CLASS: sisd
    DESC: Unsigned saturating Shift Right Narrow (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UQSHRN_advsimd:
    CLASS: simd
    DESC: Unsigned saturating Shift Right Narrow (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UQSUB_advsimd:
    CLASS: sisd
    DESC: Unsigned saturating Subtract
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UQSUB_advsimd:
    CLASS: simd
    DESC: Unsigned saturating Subtract
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uqsub_z_zi:
    CLASS: sve
    DESC: Unsigned saturating subtract immediate (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- uqsub_z_zz:
    CLASS: sve
    DESC: Unsigned saturating subtract vectors (unpredicated)
    VARIANT: SVE
    VARIANT_FEATURE: None
- UQXTN_advsimd:
    CLASS: sisd
    DESC: Unsigned saturating extract Narrow
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UQXTN_advsimd:
    CLASS: simd
    DESC: Unsigned saturating extract Narrow
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- URECPE_advsimd:
    CLASS: simd
    DESC: Unsigned Reciprocal Estimate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- URHADD_advsimd:
    CLASS: 3reg_same
    DESC: Unsigned Rounding Halving Add
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- URSHL_advsimd:
    CLASS: sisd
    DESC: Unsigned Rounding Shift Left (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- URSHL_advsimd:
    CLASS: simd
    DESC: Unsigned Rounding Shift Left (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- URSHR_advsimd:
    CLASS: sisd
    DESC: Unsigned Rounding Shift Right (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- URSHR_advsimd:
    CLASS: simd
    DESC: Unsigned Rounding Shift Right (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- URSQRTE_advsimd:
    CLASS: simd
    DESC: Unsigned Reciprocal Square Root Estimate
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- URSRA_advsimd:
    CLASS: sisd
    DESC: Unsigned Rounding Shift Right and Accumulate (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- URSRA_advsimd:
    CLASS: simd
    DESC: Unsigned Rounding Shift Right and Accumulate (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- USDOT_advsimd_elt:
    CLASS: 2reg_element
    DESC: Dot Product with unsigned and signed integers (vector, by element)
    VARIANT: ARMv8.6
    VARIANT_FEATURE: FEAT_I8MM
- USDOT_advsimd_vec:
    CLASS: simd
    DESC: Dot Product with unsigned and signed integers (vector)
    VARIANT: ARMv8.6
    VARIANT_FEATURE: FEAT_I8MM
- usdot_z_zzz:
    CLASS: sve
    DESC: Unsigned by signed integer dot product
    VARIANT: SVE
    VARIANT_FEATURE: None
- usdot_z_zzzi:
    CLASS: sve
    DESC: Unsigned by signed integer indexed dot product
    VARIANT: SVE
    VARIANT_FEATURE: None
- USHL_advsimd:
    CLASS: sisd
    DESC: Unsigned Shift Left (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- USHL_advsimd:
    CLASS: simd
    DESC: Unsigned Shift Left (register)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- USHLL_advsimd:
    CLASS: simd
    DESC: Unsigned Shift Left Long (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- USHR_advsimd:
    CLASS: sisd
    DESC: Unsigned Shift Right (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- USHR_advsimd:
    CLASS: simd
    DESC: Unsigned Shift Right (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- USMMLA_advsimd_vec:
    CLASS: simd
    DESC: Unsigned and signed 8-bit integer matrix multiply-accumulate (vector)
    VARIANT: ARMv8.6
    VARIANT_FEATURE: FEAT_I8MM
- usmmla_z_zzz:
    CLASS: sve
    DESC: Unsigned by signed integer matrix multiply-accumulate
    VARIANT: SVE
    VARIANT_FEATURE: None
- USQADD_advsimd:
    CLASS: sisd
    DESC: Unsigned saturating Accumulate of Signed value
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- USQADD_advsimd:
    CLASS: simd
    DESC: Unsigned saturating Accumulate of Signed value
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- USRA_advsimd:
    CLASS: sisd
    DESC: Unsigned Shift Right and Accumulate (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- USRA_advsimd:
    CLASS: simd
    DESC: Unsigned Shift Right and Accumulate (immediate)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- USUBL_advsimd:
    CLASS: 3reg_diff
    DESC: Unsigned Subtract Long
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- USUBW_advsimd:
    CLASS: 3reg_diff
    DESC: Unsigned Subtract Wide
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uunpkhi_z_z:
    CLASS: sve_high_half
    DESC: Unsigned unpack and extend half of vector
    VARIANT: SVE
    VARIANT_FEATURE: None
- uunpkhi_z_z:
    CLASS: sve_low_half
    DESC: Unsigned unpack and extend half of vector
    VARIANT: SVE
    VARIANT_FEATURE: None
- UXTB_UBFM:
    CLASS: zero_fill
    DESC: Unsigned Extend Byte
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uxtb_z_p_z:
    CLASS: esize_byte
    DESC: Unsigned byte / halfword / word extend (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uxtb_z_p_z:
    CLASS: esize_halfword
    DESC: Unsigned byte / halfword / word extend (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uxtb_z_p_z:
    CLASS: esize_word
    DESC: Unsigned byte / halfword / word extend (predicated)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UXTH_UBFM:
    CLASS: zero_fill
    DESC: Unsigned Extend Halfword
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UXTL_USHLL_advsimd:
    CLASS: simd
    DESC: Unsigned extend Long
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- UZP1_advsimd:
    CLASS: advsimd
    DESC: Unzip vectors (primary)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- uzp1_p_pp:
    CLASS: sve_even
    DESC: Concatenate even or odd elements from two predicates
    VARIANT: SVE
    VARIANT_FEATURE: None
- uzp1_p_pp:
    CLASS: sve_odd
    DESC: Concatenate even or odd elements from two predicates
    VARIANT: SVE
    VARIANT_FEATURE: None
- uzp1_z_zz:
    CLASS: sve_even
    DESC: Concatenate even or odd elements from two vectors
    VARIANT: SVE
    VARIANT_FEATURE: None
- uzp1_z_zz:
    CLASS: sve_even_quad
    DESC: Concatenate even or odd elements from two vectors
    VARIANT: SVE
    VARIANT_FEATURE: None
- uzp1_z_zz:
    CLASS: sve_odd
    DESC: Concatenate even or odd elements from two vectors
    VARIANT: SVE
    VARIANT_FEATURE: None
- uzp1_z_zz:
    CLASS: sve_odd_quad
    DESC: Concatenate even or odd elements from two vectors
    VARIANT: SVE
    VARIANT_FEATURE: None
- UZP2_advsimd:
    CLASS: advsimd
    DESC: Unzip vectors (secondary)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- WFE:
    CLASS: system
    DESC: Wait For Event
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- WFET:
    CLASS: system
    DESC: Wait For Event with Timeout
    VARIANT: ARMv8.7
    VARIANT_FEATURE: FEAT_WFxT
- WFI:
    CLASS: system
    DESC: Wait For Interrupt
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- WFIT:
    CLASS: system
    DESC: Wait For Interrupt with Timeout
    VARIANT: ARMv8.7
    VARIANT_FEATURE: FEAT_WFxT
- whilele_p_p_rr:
    CLASS: sve
    DESC: While incrementing signed scalar less than or equal to scalar
    VARIANT: SVE
    VARIANT_FEATURE: None
- whilelo_p_p_rr:
    CLASS: sve
    DESC: While incrementing unsigned scalar lower than scalar
    VARIANT: SVE
    VARIANT_FEATURE: None
- whilels_p_p_rr:
    CLASS: sve
    DESC: While incrementing unsigned scalar lower or same as scalar
    VARIANT: SVE
    VARIANT_FEATURE: None
- whilelt_p_p_rr:
    CLASS: sve
    DESC: While incrementing signed scalar less than scalar
    VARIANT: SVE
    VARIANT_FEATURE: None
- wrffr_f_p:
    CLASS: sve
    DESC: Write the first-fault register
    VARIANT: SVE
    VARIANT_FEATURE: None
- XAFLAG:
    CLASS: system
    DESC: Convert floating-point condition flags from external format to Arm format
    VARIANT: ARMv8.5
    VARIANT_FEATURE: FEAT_FlagM2
- XAR_advsimd:
    CLASS: advsimd
    DESC: Exclusive OR and Rotate
    VARIANT: ARMv8.2
    VARIANT_FEATURE: FEAT_SHA3
- XPAC:
    CLASS: general
    DESC: Strip Pointer Authentication Code
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_PAuth
- XPAC:
    CLASS: system
    DESC: Strip Pointer Authentication Code
    VARIANT: ARMv8.3
    VARIANT_FEATURE: FEAT_PAuth
- XTN_advsimd:
    CLASS: simd
    DESC: Extract Narrow
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- YIELD:
    CLASS: system
    DESC: YIELD
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- ZIP1_advsimd:
    CLASS: advsimd
    DESC: Zip vectors (primary)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
- zip1_p_pp:
    CLASS: sve_high_halves
    DESC: Interleave elements from two half predicates
    VARIANT: SVE
    VARIANT_FEATURE: None
- zip1_p_pp:
    CLASS: sve_low_halves
    DESC: Interleave elements from two half predicates
    VARIANT: SVE
    VARIANT_FEATURE: None
- zip1_z_zz:
    CLASS: sve_high_halves
    DESC: Interleave elements from two half vectors
    VARIANT: SVE
    VARIANT_FEATURE: None
- zip1_z_zz:
    CLASS: sve_high_halves_quad
    DESC: Interleave elements from two half vectors
    VARIANT: SVE
    VARIANT_FEATURE: None
- zip1_z_zz:
    CLASS: sve_low_halves
    DESC: Interleave elements from two half vectors
    VARIANT: SVE
    VARIANT_FEATURE: None
- zip1_z_zz:
    CLASS: sve_low_halves_quad
    DESC: Interleave elements from two half vectors
    VARIANT: SVE
    VARIANT_FEATURE: None
- ZIP2_advsimd:
    CLASS: advsimd
    DESC: Zip vectors (secondary)
    VARIANT: ARMv8.0
    VARIANT_FEATURE: None
